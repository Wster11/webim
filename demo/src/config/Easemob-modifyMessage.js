(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["websdk"] = factory();
	else
		root["websdk"] = factory();
})(this, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@protobufjs/aspromise/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@protobufjs/aspromise/index.js ***!
  \*****************************************************/
/***/ (function(module) {

"use strict";

module.exports = asPromise;

/**
 * Callback as used by {@link util.asPromise}.
 * @typedef asPromiseCallback
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {...*} params Additional arguments
 * @returns {undefined}
 */

/**
 * Returns a promise from a node-style callback function.
 * @memberof util
 * @param {asPromiseCallback} fn Function to call
 * @param {*} ctx Function context
 * @param {...*} params Function arguments
 * @returns {Promise<*>} Promisified function
 */
function asPromise(fn, ctx/*, varargs */) {
    var params  = new Array(arguments.length - 1),
        offset  = 0,
        index   = 2,
        pending = true;
    while (index < arguments.length)
        params[offset++] = arguments[index++];
    return new Promise(function executor(resolve, reject) {
        params[offset] = function callback(err/*, varargs */) {
            if (pending) {
                pending = false;
                if (err)
                    reject(err);
                else {
                    var params = new Array(arguments.length - 1),
                        offset = 0;
                    while (offset < params.length)
                        params[offset++] = arguments[offset];
                    resolve.apply(null, params);
                }
            }
        };
        try {
            fn.apply(ctx || null, params);
        } catch (err) {
            if (pending) {
                pending = false;
                reject(err);
            }
        }
    });
}


/***/ }),

/***/ "./node_modules/@protobufjs/base64/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@protobufjs/base64/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


/**
 * A minimal base64 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var base64 = exports;

/**
 * Calculates the byte length of a base64 encoded string.
 * @param {string} string Base64 encoded string
 * @returns {number} Byte length
 */
base64.length = function length(string) {
    var p = string.length;
    if (!p)
        return 0;
    var n = 0;
    while (--p % 4 > 1 && string.charAt(p) === "=")
        ++n;
    return Math.ceil(string.length * 3) / 4 - n;
};

// Base64 encoding table
var b64 = new Array(64);

// Base64 decoding table
var s64 = new Array(123);

// 65..90, 97..122, 48..57, 43, 47
for (var i = 0; i < 64;)
    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;

/**
 * Encodes a buffer to a base64 encoded string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} Base64 encoded string
 */
base64.encode = function encode(buffer, start, end) {
    var parts = null,
        chunk = [];
    var i = 0, // output index
        j = 0, // goto index
        t;     // temporary
    while (start < end) {
        var b = buffer[start++];
        switch (j) {
            case 0:
                chunk[i++] = b64[b >> 2];
                t = (b & 3) << 4;
                j = 1;
                break;
            case 1:
                chunk[i++] = b64[t | b >> 4];
                t = (b & 15) << 2;
                j = 2;
                break;
            case 2:
                chunk[i++] = b64[t | b >> 6];
                chunk[i++] = b64[b & 63];
                j = 0;
                break;
        }
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (j) {
        chunk[i++] = b64[t];
        chunk[i++] = 61;
        if (j === 1)
            chunk[i++] = 61;
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

var invalidEncoding = "invalid encoding";

/**
 * Decodes a base64 encoded string to a buffer.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Number of bytes written
 * @throws {Error} If encoding is invalid
 */
base64.decode = function decode(string, buffer, offset) {
    var start = offset;
    var j = 0, // goto index
        t;     // temporary
    for (var i = 0; i < string.length;) {
        var c = string.charCodeAt(i++);
        if (c === 61 && j > 1)
            break;
        if ((c = s64[c]) === undefined)
            throw Error(invalidEncoding);
        switch (j) {
            case 0:
                t = c;
                j = 1;
                break;
            case 1:
                buffer[offset++] = t << 2 | (c & 48) >> 4;
                t = c;
                j = 2;
                break;
            case 2:
                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;
                t = c;
                j = 3;
                break;
            case 3:
                buffer[offset++] = (t & 3) << 6 | c;
                j = 0;
                break;
        }
    }
    if (j === 1)
        throw Error(invalidEncoding);
    return offset - start;
};

/**
 * Tests if the specified string appears to be base64 encoded.
 * @param {string} string String to test
 * @returns {boolean} `true` if probably base64 encoded, otherwise false
 */
base64.test = function test(string) {
    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
};


/***/ }),

/***/ "./node_modules/@protobufjs/codegen/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@protobufjs/codegen/index.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";

module.exports = codegen;

/**
 * Begins generating a function.
 * @memberof util
 * @param {string[]} functionParams Function parameter names
 * @param {string} [functionName] Function name if not anonymous
 * @returns {Codegen} Appender that appends code to the function's body
 */
function codegen(functionParams, functionName) {

    /* istanbul ignore if */
    if (typeof functionParams === "string") {
        functionName = functionParams;
        functionParams = undefined;
    }

    var body = [];

    /**
     * Appends code to the function's body or finishes generation.
     * @typedef Codegen
     * @type {function}
     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any
     * @param {...*} [formatParams] Format parameters
     * @returns {Codegen|Function} Itself or the generated function if finished
     * @throws {Error} If format parameter counts do not match
     */

    function Codegen(formatStringOrScope) {
        // note that explicit array handling below makes this ~50% faster

        // finish the function
        if (typeof formatStringOrScope !== "string") {
            var source = toString();
            if (codegen.verbose)
                console.log("codegen: " + source); // eslint-disable-line no-console
            source = "return " + source;
            if (formatStringOrScope) {
                var scopeKeys   = Object.keys(formatStringOrScope),
                    scopeParams = new Array(scopeKeys.length + 1),
                    scopeValues = new Array(scopeKeys.length),
                    scopeOffset = 0;
                while (scopeOffset < scopeKeys.length) {
                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];
                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];
                }
                scopeParams[scopeOffset] = source;
                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func
            }
            return Function(source)(); // eslint-disable-line no-new-func
        }

        // otherwise append to body
        var formatParams = new Array(arguments.length - 1),
            formatOffset = 0;
        while (formatOffset < formatParams.length)
            formatParams[formatOffset] = arguments[++formatOffset];
        formatOffset = 0;
        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {
            var value = formatParams[formatOffset++];
            switch ($1) {
                case "d": case "f": return String(Number(value));
                case "i": return String(Math.floor(value));
                case "j": return JSON.stringify(value);
                case "s": return String(value);
            }
            return "%";
        });
        if (formatOffset !== formatParams.length)
            throw Error("parameter count mismatch");
        body.push(formatStringOrScope);
        return Codegen;
    }

    function toString(functionNameOverride) {
        return "function " + (functionNameOverride || functionName || "") + "(" + (functionParams && functionParams.join(",") || "") + "){\n  " + body.join("\n  ") + "\n}";
    }

    Codegen.toString = toString;
    return Codegen;
}

/**
 * Begins generating a function.
 * @memberof util
 * @function codegen
 * @param {string} [functionName] Function name if not anonymous
 * @returns {Codegen} Appender that appends code to the function's body
 * @variation 2
 */

/**
 * When set to `true`, codegen will log generated code to console. Useful for debugging.
 * @name util.codegen.verbose
 * @type {boolean}
 */
codegen.verbose = false;


/***/ }),

/***/ "./node_modules/@protobufjs/eventemitter/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@protobufjs/eventemitter/index.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";

module.exports = EventEmitter;

/**
 * Constructs a new event emitter instance.
 * @classdesc A minimal event emitter.
 * @memberof util
 * @constructor
 */
function EventEmitter() {

    /**
     * Registered listeners.
     * @type {Object.<string,*>}
     * @private
     */
    this._listeners = {};
}

/**
 * Registers an event listener.
 * @param {string} evt Event name
 * @param {function} fn Listener
 * @param {*} [ctx] Listener context
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.on = function on(evt, fn, ctx) {
    (this._listeners[evt] || (this._listeners[evt] = [])).push({
        fn  : fn,
        ctx : ctx || this
    });
    return this;
};

/**
 * Removes an event listener or any matching listeners if arguments are omitted.
 * @param {string} [evt] Event name. Removes all listeners if omitted.
 * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.off = function off(evt, fn) {
    if (evt === undefined)
        this._listeners = {};
    else {
        if (fn === undefined)
            this._listeners[evt] = [];
        else {
            var listeners = this._listeners[evt];
            for (var i = 0; i < listeners.length;)
                if (listeners[i].fn === fn)
                    listeners.splice(i, 1);
                else
                    ++i;
        }
    }
    return this;
};

/**
 * Emits an event by calling its listeners with the specified arguments.
 * @param {string} evt Event name
 * @param {...*} args Arguments
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.emit = function emit(evt) {
    var listeners = this._listeners[evt];
    if (listeners) {
        var args = [],
            i = 1;
        for (; i < arguments.length;)
            args.push(arguments[i++]);
        for (i = 0; i < listeners.length;)
            listeners[i].fn.apply(listeners[i++].ctx, args);
    }
    return this;
};


/***/ }),

/***/ "./node_modules/@protobufjs/fetch/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@protobufjs/fetch/index.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = fetch;

var asPromise = __webpack_require__(/*! @protobufjs/aspromise */ "./node_modules/@protobufjs/aspromise/index.js"),
    inquire   = __webpack_require__(/*! @protobufjs/inquire */ "./node_modules/@protobufjs/inquire/index.js");

var fs = inquire("fs");

/**
 * Node-style callback as used by {@link util.fetch}.
 * @typedef FetchCallback
 * @type {function}
 * @param {?Error} error Error, if any, otherwise `null`
 * @param {string} [contents] File contents, if there hasn't been an error
 * @returns {undefined}
 */

/**
 * Options as used by {@link util.fetch}.
 * @typedef FetchOptions
 * @type {Object}
 * @property {boolean} [binary=false] Whether expecting a binary response
 * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest
 */

/**
 * Fetches the contents of a file.
 * @memberof util
 * @param {string} filename File path or url
 * @param {FetchOptions} options Fetch options
 * @param {FetchCallback} callback Callback function
 * @returns {undefined}
 */
function fetch(filename, options, callback) {
    if (typeof options === "function") {
        callback = options;
        options = {};
    } else if (!options)
        options = {};

    if (!callback)
        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this

    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.
    if (!options.xhr && fs && fs.readFile)
        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {
            return err && typeof XMLHttpRequest !== "undefined"
                ? fetch.xhr(filename, options, callback)
                : err
                ? callback(err)
                : callback(null, options.binary ? contents : contents.toString("utf8"));
        });

    // use the XHR version otherwise.
    return fetch.xhr(filename, options, callback);
}

/**
 * Fetches the contents of a file.
 * @name util.fetch
 * @function
 * @param {string} path File path or url
 * @param {FetchCallback} callback Callback function
 * @returns {undefined}
 * @variation 2
 */

/**
 * Fetches the contents of a file.
 * @name util.fetch
 * @function
 * @param {string} path File path or url
 * @param {FetchOptions} [options] Fetch options
 * @returns {Promise<string|Uint8Array>} Promise
 * @variation 3
 */

/**/
fetch.xhr = function fetch_xhr(filename, options, callback) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {

        if (xhr.readyState !== 4)
            return undefined;

        // local cors security errors return status 0 / empty string, too. afaik this cannot be
        // reliably distinguished from an actually empty file for security reasons. feel free
        // to send a pull request if you are aware of a solution.
        if (xhr.status !== 0 && xhr.status !== 200)
            return callback(Error("status " + xhr.status));

        // if binary data is expected, make sure that some sort of array is returned, even if
        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.
        if (options.binary) {
            var buffer = xhr.response;
            if (!buffer) {
                buffer = [];
                for (var i = 0; i < xhr.responseText.length; ++i)
                    buffer.push(xhr.responseText.charCodeAt(i) & 255);
            }
            return callback(null, typeof Uint8Array !== "undefined" ? new Uint8Array(buffer) : buffer);
        }
        return callback(null, xhr.responseText);
    };

    if (options.binary) {
        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers
        if ("overrideMimeType" in xhr)
            xhr.overrideMimeType("text/plain; charset=x-user-defined");
        xhr.responseType = "arraybuffer";
    }

    xhr.open("GET", filename);
    xhr.send();
};


/***/ }),

/***/ "./node_modules/@protobufjs/float/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@protobufjs/float/index.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";


module.exports = factory(factory);

/**
 * Reads / writes floats / doubles from / to buffers.
 * @name util.float
 * @namespace
 */

/**
 * Writes a 32 bit float to a buffer using little endian byte order.
 * @name util.float.writeFloatLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 32 bit float to a buffer using big endian byte order.
 * @name util.float.writeFloatBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 32 bit float from a buffer using little endian byte order.
 * @name util.float.readFloatLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 32 bit float from a buffer using big endian byte order.
 * @name util.float.readFloatBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Writes a 64 bit double to a buffer using little endian byte order.
 * @name util.float.writeDoubleLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 64 bit double to a buffer using big endian byte order.
 * @name util.float.writeDoubleBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 64 bit double from a buffer using little endian byte order.
 * @name util.float.readDoubleLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 64 bit double from a buffer using big endian byte order.
 * @name util.float.readDoubleBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

// Factory function for the purpose of node-based testing in modified global environments
function factory(exports) {

    // float: typed array
    if (typeof Float32Array !== "undefined") (function() {

        var f32 = new Float32Array([ -0 ]),
            f8b = new Uint8Array(f32.buffer),
            le  = f8b[3] === 128;

        function writeFloat_f32_cpy(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
        }

        function writeFloat_f32_rev(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[3];
            buf[pos + 1] = f8b[2];
            buf[pos + 2] = f8b[1];
            buf[pos + 3] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
        /* istanbul ignore next */
        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;

        function readFloat_f32_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            return f32[0];
        }

        function readFloat_f32_rev(buf, pos) {
            f8b[3] = buf[pos    ];
            f8b[2] = buf[pos + 1];
            f8b[1] = buf[pos + 2];
            f8b[0] = buf[pos + 3];
            return f32[0];
        }

        /* istanbul ignore next */
        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
        /* istanbul ignore next */
        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;

    // float: ieee754
    })(); else (function() {

        function writeFloat_ieee754(writeUint, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0)
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);
            else if (isNaN(val))
                writeUint(2143289344, buf, pos);
            else if (val > 3.4028234663852886e+38) // +-Infinity
                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);
            else if (val < 1.1754943508222875e-38) // denormal
                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);
            else {
                var exponent = Math.floor(Math.log(val) / Math.LN2),
                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;
                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
            }
        }

        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);

        function readFloat_ieee754(readUint, buf, pos) {
            var uint = readUint(buf, pos),
                sign = (uint >> 31) * 2 + 1,
                exponent = uint >>> 23 & 255,
                mantissa = uint & 8388607;
            return exponent === 255
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 1.401298464324817e-45 * mantissa
                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
        }

        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);

    })();

    // double: typed array
    if (typeof Float64Array !== "undefined") (function() {

        var f64 = new Float64Array([-0]),
            f8b = new Uint8Array(f64.buffer),
            le  = f8b[7] === 128;

        function writeDouble_f64_cpy(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
            buf[pos + 4] = f8b[4];
            buf[pos + 5] = f8b[5];
            buf[pos + 6] = f8b[6];
            buf[pos + 7] = f8b[7];
        }

        function writeDouble_f64_rev(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[7];
            buf[pos + 1] = f8b[6];
            buf[pos + 2] = f8b[5];
            buf[pos + 3] = f8b[4];
            buf[pos + 4] = f8b[3];
            buf[pos + 5] = f8b[2];
            buf[pos + 6] = f8b[1];
            buf[pos + 7] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
        /* istanbul ignore next */
        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;

        function readDouble_f64_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            f8b[4] = buf[pos + 4];
            f8b[5] = buf[pos + 5];
            f8b[6] = buf[pos + 6];
            f8b[7] = buf[pos + 7];
            return f64[0];
        }

        function readDouble_f64_rev(buf, pos) {
            f8b[7] = buf[pos    ];
            f8b[6] = buf[pos + 1];
            f8b[5] = buf[pos + 2];
            f8b[4] = buf[pos + 3];
            f8b[3] = buf[pos + 4];
            f8b[2] = buf[pos + 5];
            f8b[1] = buf[pos + 6];
            f8b[0] = buf[pos + 7];
            return f64[0];
        }

        /* istanbul ignore next */
        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
        /* istanbul ignore next */
        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;

    // double: ieee754
    })(); else (function() {

        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0) {
                writeUint(0, buf, pos + off0);
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);
            } else if (isNaN(val)) {
                writeUint(0, buf, pos + off0);
                writeUint(2146959360, buf, pos + off1);
            } else if (val > 1.7976931348623157e+308) { // +-Infinity
                writeUint(0, buf, pos + off0);
                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
            } else {
                var mantissa;
                if (val < 2.2250738585072014e-308) { // denormal
                    mantissa = val / 5e-324;
                    writeUint(mantissa >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
                } else {
                    var exponent = Math.floor(Math.log(val) / Math.LN2);
                    if (exponent === 1024)
                        exponent = 1023;
                    mantissa = val * Math.pow(2, -exponent);
                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
                }
            }
        }

        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);

        function readDouble_ieee754(readUint, off0, off1, buf, pos) {
            var lo = readUint(buf, pos + off0),
                hi = readUint(buf, pos + off1);
            var sign = (hi >> 31) * 2 + 1,
                exponent = hi >>> 20 & 2047,
                mantissa = 4294967296 * (hi & 1048575) + lo;
            return exponent === 2047
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 5e-324 * mantissa
                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
        }

        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);

    })();

    return exports;
}

// uint helpers

function writeUintLE(val, buf, pos) {
    buf[pos    ] =  val        & 255;
    buf[pos + 1] =  val >>> 8  & 255;
    buf[pos + 2] =  val >>> 16 & 255;
    buf[pos + 3] =  val >>> 24;
}

function writeUintBE(val, buf, pos) {
    buf[pos    ] =  val >>> 24;
    buf[pos + 1] =  val >>> 16 & 255;
    buf[pos + 2] =  val >>> 8  & 255;
    buf[pos + 3] =  val        & 255;
}

function readUintLE(buf, pos) {
    return (buf[pos    ]
          | buf[pos + 1] << 8
          | buf[pos + 2] << 16
          | buf[pos + 3] << 24) >>> 0;
}

function readUintBE(buf, pos) {
    return (buf[pos    ] << 24
          | buf[pos + 1] << 16
          | buf[pos + 2] << 8
          | buf[pos + 3]) >>> 0;
}


/***/ }),

/***/ "./node_modules/@protobufjs/inquire/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@protobufjs/inquire/index.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";

module.exports = inquire;

/**
 * Requires a module only if available.
 * @memberof util
 * @param {string} moduleName Module to require
 * @returns {?Object} Required module if available and not empty, otherwise `null`
 */
function inquire(moduleName) {
    try {
        var mod = eval("quire".replace(/^/,"re"))(moduleName); // eslint-disable-line no-eval
        if (mod && (mod.length || Object.keys(mod).length))
            return mod;
    } catch (e) {} // eslint-disable-line no-empty
    return null;
}


/***/ }),

/***/ "./node_modules/@protobufjs/path/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/path/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


/**
 * A minimal path module to resolve Unix, Windows and URL paths alike.
 * @memberof util
 * @namespace
 */
var path = exports;

var isAbsolute =
/**
 * Tests if the specified path is absolute.
 * @param {string} path Path to test
 * @returns {boolean} `true` if path is absolute
 */
path.isAbsolute = function isAbsolute(path) {
    return /^(?:\/|\w+:)/.test(path);
};

var normalize =
/**
 * Normalizes the specified path.
 * @param {string} path Path to normalize
 * @returns {string} Normalized path
 */
path.normalize = function normalize(path) {
    path = path.replace(/\\/g, "/")
               .replace(/\/{2,}/g, "/");
    var parts    = path.split("/"),
        absolute = isAbsolute(path),
        prefix   = "";
    if (absolute)
        prefix = parts.shift() + "/";
    for (var i = 0; i < parts.length;) {
        if (parts[i] === "..") {
            if (i > 0 && parts[i - 1] !== "..")
                parts.splice(--i, 2);
            else if (absolute)
                parts.splice(i, 1);
            else
                ++i;
        } else if (parts[i] === ".")
            parts.splice(i, 1);
        else
            ++i;
    }
    return prefix + parts.join("/");
};

/**
 * Resolves the specified include path against the specified origin path.
 * @param {string} originPath Path to the origin file
 * @param {string} includePath Include path relative to origin path
 * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized
 * @returns {string} Path to the include file
 */
path.resolve = function resolve(originPath, includePath, alreadyNormalized) {
    if (!alreadyNormalized)
        includePath = normalize(includePath);
    if (isAbsolute(includePath))
        return includePath;
    if (!alreadyNormalized)
        originPath = normalize(originPath);
    return (originPath = originPath.replace(/(?:\/|^)[^/]+$/, "")).length ? normalize(originPath + "/" + includePath) : includePath;
};


/***/ }),

/***/ "./node_modules/@protobufjs/pool/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/pool/index.js ***!
  \************************************************/
/***/ (function(module) {

"use strict";

module.exports = pool;

/**
 * An allocator as used by {@link util.pool}.
 * @typedef PoolAllocator
 * @type {function}
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */

/**
 * A slicer as used by {@link util.pool}.
 * @typedef PoolSlicer
 * @type {function}
 * @param {number} start Start offset
 * @param {number} end End offset
 * @returns {Uint8Array} Buffer slice
 * @this {Uint8Array}
 */

/**
 * A general purpose buffer pool.
 * @memberof util
 * @function
 * @param {PoolAllocator} alloc Allocator
 * @param {PoolSlicer} slice Slicer
 * @param {number} [size=8192] Slab size
 * @returns {PoolAllocator} Pooled allocator
 */
function pool(alloc, slice, size) {
    var SIZE   = size || 8192;
    var MAX    = SIZE >>> 1;
    var slab   = null;
    var offset = SIZE;
    return function pool_alloc(size) {
        if (size < 1 || size > MAX)
            return alloc(size);
        if (offset + size > SIZE) {
            slab = alloc(SIZE);
            offset = 0;
        }
        var buf = slice.call(slab, offset, offset += size);
        if (offset & 7) // align to 32 bit
            offset = (offset | 7) + 1;
        return buf;
    };
}


/***/ }),

/***/ "./node_modules/@protobufjs/utf8/index.js":
/*!************************************************!*\
  !*** ./node_modules/@protobufjs/utf8/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


/**
 * A minimal UTF8 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var utf8 = exports;

/**
 * Calculates the UTF8 byte length of a string.
 * @param {string} string String
 * @returns {number} Byte length
 */
utf8.length = function utf8_length(string) {
    var len = 0,
        c = 0;
    for (var i = 0; i < string.length; ++i) {
        c = string.charCodeAt(i);
        if (c < 128)
            len += 1;
        else if (c < 2048)
            len += 2;
        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
            ++i;
            len += 4;
        } else
            len += 3;
    }
    return len;
};

/**
 * Reads UTF8 bytes as a string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} String read
 */
utf8.read = function utf8_read(buffer, start, end) {
    var len = end - start;
    if (len < 1)
        return "";
    var parts = null,
        chunk = [],
        i = 0, // char offset
        t;     // temporary
    while (start < end) {
        t = buffer[start++];
        if (t < 128)
            chunk[i++] = t;
        else if (t > 191 && t < 224)
            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;
        else if (t > 239 && t < 365) {
            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
            chunk[i++] = 0xD800 + (t >> 10);
            chunk[i++] = 0xDC00 + (t & 1023);
        } else
            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

/**
 * Writes a string as UTF8 bytes.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Bytes written
 */
utf8.write = function utf8_write(string, buffer, offset) {
    var start = offset,
        c1, // character 1
        c2; // character 2
    for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i);
        if (c1 < 128) {
            buffer[offset++] = c1;
        } else if (c1 < 2048) {
            buffer[offset++] = c1 >> 6       | 192;
            buffer[offset++] = c1       & 63 | 128;
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
            ++i;
            buffer[offset++] = c1 >> 18      | 240;
            buffer[offset++] = c1 >> 12 & 63 | 128;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        } else {
            buffer[offset++] = c1 >> 12      | 224;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        }
    }
    return offset - start;
};


/***/ }),

/***/ "./node_modules/Base64/base64.js":
/*!***************************************!*\
  !*** ./node_modules/Base64/base64.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f) {

  'use strict';

  /* istanbul ignore else */
  if ( true && exports != null &&
      typeof exports.nodeType !== 'number') {
    module.exports = f ();
  } else if ( true && __webpack_require__.amdO != null) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    var base64 = f ();
    var global = typeof self !== 'undefined' ? self : $.global;
    if (typeof global.btoa !== 'function') global.btoa = base64.btoa;
    if (typeof global.atob !== 'function') global.atob = base64.atob;
  }

} (function() {

  'use strict';

  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  function InvalidCharacterError(message) {
    this.message = message;
  }
  InvalidCharacterError.prototype = new Error ();
  InvalidCharacterError.prototype.name = 'InvalidCharacterError';

  // encoder
  // [https://gist.github.com/999166] by [https://github.com/nignag]
  function btoa(input) {
    var str = String (input);
    for (
      // initialize result and counter
      var block, charCode, idx = 0, map = chars, output = '';
      // if the next str index does not exist:
      //   change the mapping table to "="
      //   check if d has no fractional digits
      str.charAt (idx | 0) || (map = '=', idx % 1);
      // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
      output += map.charAt (63 & block >> 8 - idx % 1 * 8)
    ) {
      charCode = str.charCodeAt (idx += 3 / 4);
      if (charCode > 0xFF) {
        throw new InvalidCharacterError ("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
      }
      block = block << 8 | charCode;
    }
    return output;
  }

  // decoder
  // [https://gist.github.com/1020396] by [https://github.com/atk]
  function atob(input) {
    var str = (String (input)).replace (/[=]+$/, ''); // #31: ExtendScript bad parse of /=
    if (str.length % 4 === 1) {
      throw new InvalidCharacterError ("'atob' failed: The string to be decoded is not correctly encoded.");
    }
    for (
      // initialize result and counters
      var bc = 0, bs, buffer, idx = 0, output = '';
      // get next character
      buffer = str.charAt (idx++); // eslint-disable-line no-cond-assign
      // character found in table? initialize bit storage and add its ascii value;
      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,
        // and if not first of each 4 characters,
        // convert the first 8 bits to one ascii character
        bc++ % 4) ? output += String.fromCharCode (255 & bs >> (-2 * bc & 6)) : 0
    ) {
      // try to find character in table (0-63, not found => -1)
      buffer = chars.indexOf (buffer);
    }
    return output;
  }

  return {btoa: btoa, atob: atob};

}));


/***/ }),

/***/ "./src/apis/chatRoomApi.ts":
/*!*********************************!*\
  !*** ./src/apis/chatRoomApi.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addUsersToChatRoom": function() { return /* binding */ addUsersToChatRoom; },
/* harmony export */   "addUsersToChatRoomAllowlist": function() { return /* binding */ addUsersToChatRoomAllowlist; },
/* harmony export */   "addUsersToChatRoomWhitelist": function() { return /* binding */ addUsersToChatRoomWhitelist; },
/* harmony export */   "blockChatRoomMember": function() { return /* binding */ blockChatRoomMember; },
/* harmony export */   "blockChatRoomMembers": function() { return /* binding */ blockChatRoomMembers; },
/* harmony export */   "chatRoomBlockMulti": function() { return /* binding */ chatRoomBlockMulti; },
/* harmony export */   "chatRoomBlockSingle": function() { return /* binding */ chatRoomBlockSingle; },
/* harmony export */   "createChatRoom": function() { return /* binding */ createChatRoom; },
/* harmony export */   "deleteChatRoomSharedFile": function() { return /* binding */ deleteChatRoomSharedFile; },
/* harmony export */   "destroyChatRoom": function() { return /* binding */ destroyChatRoom; },
/* harmony export */   "disableSendChatRoomMsg": function() { return /* binding */ disableSendChatRoomMsg; },
/* harmony export */   "enableSendChatRoomMsg": function() { return /* binding */ enableSendChatRoomMsg; },
/* harmony export */   "fetchChatRoomAnnouncement": function() { return /* binding */ fetchChatRoomAnnouncement; },
/* harmony export */   "fetchChatRoomSharedFileList": function() { return /* binding */ fetchChatRoomSharedFileList; },
/* harmony export */   "getChatRoomAdmin": function() { return /* binding */ getChatRoomAdmin; },
/* harmony export */   "getChatRoomAllowlist": function() { return /* binding */ getChatRoomAllowlist; },
/* harmony export */   "getChatRoomAttributes": function() { return /* binding */ getChatRoomAttributes; },
/* harmony export */   "getChatRoomBlacklist": function() { return /* binding */ getChatRoomBlacklist; },
/* harmony export */   "getChatRoomBlacklistNew": function() { return /* binding */ getChatRoomBlacklistNew; },
/* harmony export */   "getChatRoomBlocklist": function() { return /* binding */ getChatRoomBlocklist; },
/* harmony export */   "getChatRoomDetails": function() { return /* binding */ getChatRoomDetails; },
/* harmony export */   "getChatRoomMuteList": function() { return /* binding */ getChatRoomMuteList; },
/* harmony export */   "getChatRoomMuted": function() { return /* binding */ getChatRoomMuted; },
/* harmony export */   "getChatRoomMutelist": function() { return /* binding */ getChatRoomMutelist; },
/* harmony export */   "getChatRoomSharedFilelist": function() { return /* binding */ getChatRoomSharedFilelist; },
/* harmony export */   "getChatRoomWhitelist": function() { return /* binding */ getChatRoomWhitelist; },
/* harmony export */   "getChatRooms": function() { return /* binding */ getChatRooms; },
/* harmony export */   "isChatRoomWhiteUser": function() { return /* binding */ isChatRoomWhiteUser; },
/* harmony export */   "isInChatRoomAllowlist": function() { return /* binding */ isInChatRoomAllowlist; },
/* harmony export */   "isInChatRoomMutelist": function() { return /* binding */ isInChatRoomMutelist; },
/* harmony export */   "joinChatRoom": function() { return /* binding */ joinChatRoom; },
/* harmony export */   "leaveChatRoom": function() { return /* binding */ leaveChatRoom; },
/* harmony export */   "listChatRoomMember": function() { return /* binding */ listChatRoomMember; },
/* harmony export */   "listChatRoomMembers": function() { return /* binding */ listChatRoomMembers; },
/* harmony export */   "modifyChatRoom": function() { return /* binding */ modifyChatRoom; },
/* harmony export */   "muteChatRoomMember": function() { return /* binding */ muteChatRoomMember; },
/* harmony export */   "quitChatRoom": function() { return /* binding */ quitChatRoom; },
/* harmony export */   "removeChatRoomAdmin": function() { return /* binding */ removeChatRoomAdmin; },
/* harmony export */   "removeChatRoomAllowlistMember": function() { return /* binding */ removeChatRoomAllowlistMember; },
/* harmony export */   "removeChatRoomAttribute": function() { return /* binding */ removeChatRoomAttribute; },
/* harmony export */   "removeChatRoomAttributes": function() { return /* binding */ removeChatRoomAttributes; },
/* harmony export */   "removeChatRoomBlockMulti": function() { return /* binding */ removeChatRoomBlockMulti; },
/* harmony export */   "removeChatRoomBlockSingle": function() { return /* binding */ removeChatRoomBlockSingle; },
/* harmony export */   "removeChatRoomMember": function() { return /* binding */ removeChatRoomMember; },
/* harmony export */   "removeChatRoomMembers": function() { return /* binding */ removeChatRoomMembers; },
/* harmony export */   "removeChatRoomWhitelistMember": function() { return /* binding */ removeChatRoomWhitelistMember; },
/* harmony export */   "removeMultiChatRoomMember": function() { return /* binding */ removeMultiChatRoomMember; },
/* harmony export */   "removeMuteChatRoomMember": function() { return /* binding */ removeMuteChatRoomMember; },
/* harmony export */   "removeSingleChatRoomMember": function() { return /* binding */ removeSingleChatRoomMember; },
/* harmony export */   "rmUsersFromChatRoomWhitelist": function() { return /* binding */ rmUsersFromChatRoomWhitelist; },
/* harmony export */   "setChatRoomAdmin": function() { return /* binding */ setChatRoomAdmin; },
/* harmony export */   "setChatRoomAttribute": function() { return /* binding */ setChatRoomAttribute; },
/* harmony export */   "setChatRoomAttributes": function() { return /* binding */ setChatRoomAttributes; },
/* harmony export */   "unblockChatRoomMember": function() { return /* binding */ unblockChatRoomMember; },
/* harmony export */   "unblockChatRoomMembers": function() { return /* binding */ unblockChatRoomMembers; },
/* harmony export */   "unmuteChatRoomMember": function() { return /* binding */ unmuteChatRoomMember; },
/* harmony export */   "updateChatRoomAnnouncement": function() { return /* binding */ updateChatRoomAnnouncement; },
/* harmony export */   "uploadChatRoomSharedFile": function() { return /* binding */ uploadChatRoomSharedFile; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.array.join.js */ "./node_modules/core-js/modules/es.array.join.js");
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }












/**
 * Chatroom contains APIs for chatroom-related operations.
 * @module Chatroom
 */
// import { any } from '../engineCore/connection';






/**
 * Gets the chat room list with pagination.
 *
 * ```typescript
 * connection.getChatRooms({pagenum: 1, pagesize: 20})
 * ```
 */
/**
 * 分页获取聊天室列表。
 *
 * ```typescript
 * connection.getChatRooms({pagenum: 1, pagesize: 20})
 * ```
 */
function getChatRooms(params) {
  var _this = this;
  if (typeof params.pagenum !== 'number' || typeof params.pagesize !== 'number') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error_1 = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error_1);
  }
  var pageInfo = {
    pagenum: params.pagenum || 1,
    pagesize: params.pagesize || 20
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var suc = function suc(data) {
    typeof params.success === 'function' && params.success(data);
  };
  var error = function error(res) {
    // 逐渐把这种回调删除
    if (res.error && res.error_description) {
      _this.onError && _this.onError({
        type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR,
        message: res.error_description,
        data: res
      });
    }
    typeof params.error === 'function' && params.error(res);
  };
  var opts = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken
    },
    data: pageInfo,
    success: suc,
    error: error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRooms', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_LIST);
}
/**
 * Creates a chat room.
 *
 * ```typescript
 * connection.createChatRoom({name: 'myChatRoom', description: 'this is my chatroom', maxusers: 200, members: ['user1'], token: 'your token'})
 * ```
 */
/**
 * 创建聊天室。
 *
 * ```typescript
 * connection.createChatRoom({name: 'myChatRoom', description: 'this is my chatroom', maxusers: 200, members: ['user1'], token: 'your token'})
 * ```
 */
function createChatRoom(params) {
  if (typeof params.name !== 'string') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var data = {
    name: params.name,
    description: params.description,
    maxusers: params.maxusers,
    owner: this.user,
    members: params.members
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'POST',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + params.token || 0,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call createChatRoom', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.CREATE_CHATROOM);
}
/**
 * Destroys the chat room.
 *
 * ```typescript
 * connection.destroyChatRoom({chatRoomId: 'chatRoomId', token: 'your token'})
 * ```
 */
/**
 * 销毁聊天室。
 *
 * ```typescript
 * connection.destroyChatRoom({chatRoomId: 'chatRoomId', token: 'your token'})
 * ```
 */
function destroyChatRoom(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(params.chatRoomId, "?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'DELETE',
    headers: {
      Authorization: 'Bearer ' + params.token || 0
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call destroyChatRoom', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.DESTROY_CHATROOM);
}
/**
 * Gets specifications of the chat room.
 *
 * ```typescript
 * connection.getChatRoomDetails({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 获取聊天室详情。
 *
 * ```typescript
 * connection.getChatRoomDetails({chatRoomId: 'chatRoomId'})
 * ```
 */
function getChatRoomDetails(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms/' + params.chatRoomId,
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRoomDetails', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_DETAIL);
}
/**
 * Modifies the specifications of the chat room.
 *
 * ```typescript
 * connection.modifyChatRoom({chatRoomId: 'chatRoomId', chatRoomName: 'chatRoomName', description: 'description', maxusers: 5000})
 * ```
 */
/**
 * 修改聊天室详情。
 *
 * ```typescript
 * connection.modifyChatRoom({chatRoomId: 'chatRoomId', chatRoomName: 'chatRoomName', description: 'description', maxusers: 5000})
 * ```
 */
function modifyChatRoom(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId,
    requestData = {
      groupname: params.chatRoomName,
      description: params.description,
      maxusers: params.maxusers
    },
    options = {
      url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "?resource=").concat(jid.clientResource),
      type: 'PUT',
      data: JSON.stringify(requestData),
      dataType: 'json',
      headers: {
        Authorization: 'Bearer ' + accessToken,
        'Content-Type': 'application/json'
      },
      success: params.success,
      error: params.error
    };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call modifyChatRoom', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.MODIFY_CHATROOM);
}
/**
 * @hidden
 * @deprecated Use {@link removeChatRoomMember} instead.
 * Removes a chat room member.
 *
 * ```typescript
 * connection.removeSingleChatRoomMember({chatRoomId: 'chatRoomId', username: 'username'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeChatRoomMember} 替代。
 * 移除单个聊天室成员。
 *
 * ```typescript
 * connection.removeSingleChatRoomMember({chatRoomId: 'chatRoomId', username: 'username'})
 * ```
 */
function removeSingleChatRoomMember(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '' || typeof params.username !== 'string') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call removeChatRoomMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.REMOVE_CHATROOM_MEMBER);
}
/**
 * Removes a chat room member.
 *
 * ```typescript
 * connection.removeChatRoomMember({chatRoomId: 'chatRoomId', username: 'username'})
 * ```
 */
/**
 * 移除单个聊天室成员。
 *
 * ```typescript
 * connection.removeChatRoomMember({chatRoomId: 'chatRoomId', username: 'username'})
 * ```
 */
var removeChatRoomMember = removeSingleChatRoomMember;
/**
 * @hidden
 * @deprecated Use {@link removeChatRoomMembers} instead.
 * Removes multiple chat room members.
 *
 * ```typescript
 * connection.removeMultiChatRoomMember({chatRoomId: 'chatRoomId', users: ['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeChatRoomMembers} 代替。
 * 批量移除聊天室成员。
 *
 * ```typescript
 * connection.removeMultiChatRoomMember({chatRoomId: 'chatRoomId', users: ['user1', 'user2']})
 * ```
 */
function removeMultiChatRoomMember(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '' || !Array.isArray(params.users)) {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var chatRoomId = params.chatRoomId;
  var users = params.users.join(',');
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/users/").concat(users, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call removeChatRoomMembers', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.MULTI_REMOVE_CHATROOM_MEMBER);
}
/**
 * @hidden
 * Removes chat room members.
 *
 * ```typescript
 * connection.removeChatRoomMembers({chatRoomId: 'chatRoomId', users: ['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * 移除多个聊天室成员。
 *
 * ```typescript
 * connection.removeChatRoomMembers({chatRoomId: 'chatRoomId', users: ['user1', 'user2']})
 * ```
 */
var removeChatRoomMembers = removeMultiChatRoomMember;
/**
 * @hidden
 * Adds chat room members.
 *
 * ```typescript
 * connection.addUsersToChatRoom({chatRoomId: "chatRoomId", users:['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * 批量添加聊天室成员。
 *
 * ```typescript
 * connection.addUsersToChatRoom({chatRoomId: "chatRoomId", users:['user1', 'user2']})
 * ```
 */
function addUsersToChatRoom(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '' || !Array.isArray(params.users)) {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var chatRoomId = params.chatRoomId;
  var requestData = {
    usernames: params.users
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/users?resource=").concat(jid.clientResource),
    type: 'POST',
    data: JSON.stringify(requestData),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call addUsersToChatRoom', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.ADD_USERS_TO_CHATROOM);
}
/**
 * Joins the chat room.
 *
 * @note
 * After a user joins successfully, other members in the chat room will receive operation: 'memberPresence' in the `onChatroomEvent` callback.
 *
 * ```typescript
 * connection.joinChatRoom({roomId: 'roomId'})
 * ```
 */
/**
 * 加入聊天室。
 *
 * @note
 * 用户成功加入聊天室后，其他成员会在 `onChatroomEvent` 回调里收到 `operation:'memberPresence'`。
 *
 * ```typescript
 * connection.joinChatRoom({roomId: 'roomId'})
 * ```
 */
function joinChatRoom(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call joinChatRoom', params);
  return this.mSync.handleChatRoom(params, 'join');
}
/**
 * @hidden
 * @deprecated Use {@link leaveChatRoom} instead.
 * Exits the chat room.
 *
 * @note
 * When a member exits the chat room, other members will receive "operation: 'memberAbsence'" in the callback of onChatroomEvent.
 *
 * ```typescript
 * connection.quitChatRoom({roomId: 'roomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link leaveChatRoom} 代替。
 * 退出聊天室。
 *
 * @note
 * 若某成员退出聊天室，其他成员会在 `onChatroomEvent` 回调里收到 "operation: 'memberAbsence'"
 *
 * ```typescript
 * connection.quitChatRoom({roomId: 'roomId'})
 * ```
 */
function quitChatRoom(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call leaveChatRoom', params);
  return this.mSync.handleChatRoom(params, 'leave');
}
/**
 * Exits the chat room.
 *
 * @note
 * When a member exits the chat room, other members will receive "operation: 'memberAbsence'" in the callback of onChatroomEvent.
 *
 * ```typescript
 * connection.leaveChatRoom({roomId: 'roomId'})
 * ```
 */
/**
 * 退出聊天室。
 *
 * @note
 * 若某成员退出聊天室，其他成员会在 onChatroomEvent 回调里收到 "operation: 'memberAbsence'"。
 *
 * ```typescript
 * connection.leaveChatRoom({roomId: 'roomId'})
 * ```
 */
var leaveChatRoom = quitChatRoom;
/**
 * @hidden
 * @deprecated Use {@link listChatRoomMembers} instead.
 * Lists all chat room members with pagination.
 *
 * ```typescript
 * connection.listChatRoomMember({pageNum: 1, pageSize: 20, chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link listChatRoomMembers} 代替。
 * 分页列出聊天室的所有成员。
 *
 * ```typescript
 * connection.listChatRoomMember({pageNum: 1, pageSize: 20, chatRoomId: 'chatRoomId'})
 * ```
 */
function listChatRoomMember(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (isNaN(params.pageNum) || params.pageNum <= 0) {
    throw Error('The parameter "pageNum" should be a positive number');
  } else if (isNaN(params.pageSize) || params.pageSize <= 0) {
    throw Error('The parameter "pageSize" should be a positive number');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var requestData = {
    pagenum: params.pageNum,
    pagesize: params.pageSize
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms' + '/' + params.chatRoomId + '/users',
    dataType: 'json',
    type: 'GET',
    data: requestData,
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call listChatRoomMembers', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.LIST_CHATROOM_MEMBERS);
}
/**
 * Lists all chat room members with pagination.
 *
 * ```typescript
 * connection.listChatRoomMembers({pageNum: 1, pageSize: 20, chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 分页列出聊天室的所有成员。
 *
 * ```typescript
 * connection.listChatRoomMembers({pageNum: 1, pageSize: 20, chatRoomId: 'chatRoomId'})
 * ```
 */
var listChatRoomMembers = listChatRoomMember;
/**
 * Gets all admins of the chat room.
 *
 * ```typescript
 * connection.getChatRoomAdmin({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 获取聊天室的所有管理员。
 *
 * ```typescript
 * connection.getChatRoomAdmin({chatRoomId: 'chatRoomId'})
 * ```
 */
function getChatRoomAdmin(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms' + '/' + chatRoomId + '/admin',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRoomAdmin', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_ADMIN);
}
/**
 * Sets a member as the chat room admin.
 *
 * @note
 * Only the chat room owner can call this method. The new admin will receive "operation: 'setAdmin'" in the callback of `onChatroomEvent`.
 *
 * ```typescript
 * connection.setChatRoomAdmin({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * 设置聊天室管理员。
 *
 * @note
 * 该方法只有聊天室所有者才有权限调用。被设置成管理员的成员会在 `onChatroomEvent` 的回调里收到 "operation: 'setAdmin'"。
 *
 * ```typescript
 * connection.setChatRoomAdmin({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
function setChatRoomAdmin(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var requestData = {
    newadmin: params.username
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/admin?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call setChatRoomAdmin', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.SET_CHATROOM_ADMIN);
}
/**
 * Removes chat room admins.
 *
 * @note
 * Only the chat room owner can call this method. The users whose admin privileges are removed will receive "operation: 'removeAdmin'" in the callback of `onChatroomEvent`.
 *
 * ```typescript
 * connection.removeChatRoomAdmin({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * 移除聊天室管理员。
 *
 * @note
 * 该方法只有聊天室所有者才有权限调用。被移除管理员权限的用户会在 onChatroomEvent 的回调里收到 operation: 'removeAdmin'。
 *
 * ```typescript
 * connection.removeChatRoomAdmin({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
function removeChatRoomAdmin(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/admin/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call removeChatRoomAdmin', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.REMOVE_CHATROOM_ADMIN);
}
/**
 * Mutes chat room member.
 *
 * @note
 * Only the chat room owner or admins can call this method. The muted member and other admins will receive "operation:'muteMember'" in the callback of `onChatroomEvent`.
 *
 * ```typescript
 * connection.muteChatRoomMember({username: 'user1', muteDuration: -1, chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 禁止聊天室用户发言。
 *
 * @note
 * 该方法只有聊天室所有者和管理员才有权限调用。被禁言成员和其他未操作的群主和管理员会在 `onChatroomEvent` 的回调里收到 "operation:'muteMember'"。
 *
 * ```typescript
 * connection.muteChatRoomMember({username: 'user1', muteDuration: -1, chatRoomId: 'chatRoomId'})
 * ```
 */
function muteChatRoomMember(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  } else if (typeof params.muteDuration !== 'number') {
    throw Error('Invalid parameter: "muteDuration"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var requestData = {
    usernames: [params.username],
    mute_duration: params.muteDuration
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/mute?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'POST',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    data: JSON.stringify(requestData),
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call muteChatRoomMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.MUTE_CHATROOM_MEMBER);
}
/**
 * @hidden
 * @deprecated Use {@link unmuteChatRoomMember} instead.
 * Unmutes the chat room member.
 *
 * @note
 * Only the chat room owner or admins can call this method. The members who are unmuted and other admins will receive "operation: 'unmuteMember'" in the callback of onChatroomEvent.
 *
 * ```typescript
 * connection.removeMuteChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link unmuteChatRoomMember} 代替。
 * 解除对聊天室用户的禁言。
 *
 * @note
 * 该方法只有聊天室所有者和管理员才有权限调用。该成员和其他未做操作的群管理员或者群主会在 `onChatroomEvent` 的回调里收到 "operation: 'unmuteMember'"。
 *
 * ```typescript
 * connection.removeMuteChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
function removeMuteChatRoomMember(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/mute/").concat(username, "?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'DELETE',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call unmuteChatRoomMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.REMOVE_MUTE_CHATROOM_MEMBER);
}
/**
 * Unmutes the chat room member.
 *
 * @note
 * Only the chat room owner can call this method. The members who are unmuted and other admins will receive "operation: 'unmuteMember'" in the callback of onChatroomEvent.
 *
 * ```typescript
 * connection.unmuteChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * 解除对聊天室用户的禁言。
 *
 * 该方法只有聊天室所有者和管理员才有权限调用。该成员和其他未做操作的群管理员或者群主会在 onChatroomEvent 的回调里收到 "operation: 'unmuteMember'"。
 *
 * ```typescript
 * connection.unmuteChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
var unmuteChatRoomMember = removeMuteChatRoomMember;
/**
 * @hidden
 * @deprecated Use {@link getChatRoomMutelist} instead.
 * Gets all muted members in the chat room.
 *
 * ```typescript
 * connection.getChatRoomMuted({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getChatRoomMutelist} 代替。
 * 获取聊天室所有被禁言成员。
 *
 * ```typescript
 * connection.getChatRoomMuted({chatRoomId: 'chatRoomId'})
 * ```
 */
function getChatRoomMuted(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms' + '/' + chatRoomId + '/mute',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRoomMutelist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_MUTE_CHATROOM_MEMBERS);
}
/**
 * @hidden
 * @deprecated
 */
var getChatRoomMuteList = getChatRoomMuted;
/**
 * Gets all muted members in the chat room.
 *
 * ```typescript
 * connection.getChatRoomMutelist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 获取聊天室所有禁言成员。
 *
 * ```typescript
 * connection.getChatRoomMutelist({chatRoomId: 'chatRoomId'})
 * ```
 */
var getChatRoomMutelist = getChatRoomMuted;
/**
 * @hidden
 * @deprecated Use {@link blockChatRoomMember} instead.
 * Adds a member to the the block list of the chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.chatRoomBlockSingle({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link blockChatRoomMember} 代替。
 * 添加单个成员至聊天室黑名单。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.chatRoomBlockSingle({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
function chatRoomBlockSingle(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/blocks/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call blockChatRoomMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.SET_CHATROOM_MEMBER_TO_BLACK);
}
/**
 * Adds a member to the the block list of the chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.blockChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * 添加单个成员至聊天室黑名单。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.blockChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
var blockChatRoomMember = chatRoomBlockSingle;
/**
 * @hidden
 * @deprecated Use {@link blockChatRoomMembers} instead.
 * Adds members to the block list of the  chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.chatRoomBlockMulti({usernames: ['user1', 'user2'], chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link blockChatRoomMembers} 代替。
 * 批量添加成员至聊天室黑名单。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.chatRoomBlockMulti({usernames: ['user1', 'user2'], chatRoomId: 'chatRoomId'})
 * ```
 */
function chatRoomBlockMulti(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (!Array.isArray(params.usernames)) {
    throw Error('Invalid parameter: "usernames"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var usernames = params.usernames;
  var requestData = {
    usernames: usernames
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/blocks/users?resource=").concat(jid.clientResource),
    data: JSON.stringify(requestData),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Chat blockChatRoomMembers:', options);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.MULTI_SET_CHATROOM_MEMBER_TO_BLACK);
}
/**
 * Adds members to the block list of the chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.blockChatRoomMembers({usernames: ['user1', 'user2'], chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 批量添加用户至聊天室黑名单。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.blockChatRoomMembers({usernames: ['user1', 'user2'], chatRoomId: 'chatRoomId'})
 * ```
 */
var blockChatRoomMembers = chatRoomBlockMulti;
/**
 * @hidden
 * @deprecated Use {@link unblockChatRoomMember} instead.
 * Removes a member from the block list of the chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.removeChatRoomBlockSingle({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link unblockChatRoomMember} 代替。
 * 将单个用户从聊天室黑名单移除。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.removeChatRoomBlockSingle({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
function removeChatRoomBlockSingle(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/blocks/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call unblockChatRoomMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.REMOVE_CHATROOM_MEMBER_BLACK);
}
/**
 * Removes a member from the the block list of the chat room.
 *
 * @note
 * Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.unblockChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
/**
 * 将单个成员从聊天室黑名单移除。
 *
 * @note
 * 该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.unblockChatRoomMember({chatRoomId: 'chatRoomId', username: 'user1'})
 * ```
 */
var unblockChatRoomMember = removeChatRoomBlockSingle;
/**
 * @hidden
 * @deprecated Use {@link unblockChatRoomMembers} instead.
 * Removes members from the block list of the chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.removeChatRoomBlockMulti({chatRoomId: 'chatRoomId', usernames: ['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link unblockChatRoomMembers} 代替。
 * 批量将成员从聊天室黑名单移除。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.removeChatRoomBlockMulti({chatRoomId: 'chatRoomId', usernames: ['user1', 'user2']})
 * ```
 */
function removeChatRoomBlockMulti(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (!Array.isArray(params.usernames)) {
    throw Error('Invalid parameter: "usernames"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var username = params.usernames.join(',');
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/blocks/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call unblockChatRoomMembers', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.MULTI_REMOVE_CHATROOM_MEMBER_BLACK);
}
/**
 * Removes members from the block list of the  chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.unblockChatRoomMembers({chatRoomId: 'chatRoomId', usernames: ['user1', 'user2']})
 * ```
 */
/**
 * 批量将成员从聊天室黑名单移除。该方法只有聊天室所有者和管理员才有权限调用。
 *
 * ```typescript
 * connection.unblockChatRoomMembers({chatRoomId: 'chatRoomId', usernames: ['user1', 'user2']})
 * ```
 */
var unblockChatRoomMembers = removeChatRoomBlockMulti;
/**
 * @hidden
 * @deprecated Use {@link getChatRoomBlocklist} instead.
 * Gets the block list of the chat room.
 *
 * ```typescript
 * connection.getChatRoomBlacklistNew({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getChatRoomBlocklist} 代替。
 * 获取聊天室黑名单。
 *
 * ```typescript
 * connection.getChatRoomBlacklistNew({chatRoomId: 'chatRoomId'})
 * ```
 */
function getChatRoomBlacklistNew(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms/' + chatRoomId + '/blocks/users',
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRoomBlocklist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_BLOCK_MEMBERS);
}
/**
 * @hidden
 * @deprecated
 */
var getChatRoomBlacklist = getChatRoomBlacklistNew;
/**
 * Gets the block  list of the chat room.
 *
 * ```typescript
 * connection.getChatRoomBlocklist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 获取聊天室黑名单。
 *
 * ```typescript
 * connection.getChatRoomBlocklist({chatRoomId: 'chatRoomId'})
 * ```
 */
var getChatRoomBlocklist = getChatRoomBlacklistNew;
/**
 * Mutes all the members in the chat room. Only the chat room owner or admin can call this method. Chat room members will receive the muteAllMembers event.
 *
 * ```typescript
 * connection.disableSendChatRoomMsg({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 聊天室一键禁言。仅聊天室创建者和管理员可调用此方法。聊天室成员会收到 muteAllMembers 事件。
 *
 * ```typescript
 * connection.disableSendChatRoomMsg({chatRoomId: 'chatRoomId'})
 * ```
 */
function disableSendChatRoomMsg(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/ban?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call disableSendChatRoomMsg', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.DISABLED_CHATROOM_SEND_MSG);
}
/**
 * Unmutes all the members in the chat room.
 *
 * Only the chat room owner or admin can call this method.
 *
 * The chat room members will receive the `unmuteAllMembers` event.
 *
 * ```typescript
 * connection.enableSendChatRoomMsg({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 聊天室解除一键禁言。
 *
 * 仅聊天室创建者和管理员可调用此方法。
 *
 * 聊天室成员会收到 `unmuteAllMembers` 回调。
 *
 * ```typescript
 * connection.enableSendChatRoomMsg({chatRoomId: 'chatRoomId'})
 * ```
 */
function enableSendChatRoomMsg(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/ban?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call enableSendChatRoomMsg', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.ENABLE_CHATROOM_SEND_MSG);
}
/**
 * @hidden
 * @deprecated Use {@link addUsersToChatRoomAllowlist} instead.
 * Adds members to the allow list of the chat room. Members added to the allow list of the chat room will receive "operation: 'addUserToAllowlist'" in the callback of onChatroomEvent.
 *
 * ```typescript
 * connection.addUsersToChatRoomWhitelist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link addUsersToChatRoomAllowlist} 代替。
 * 批量增加聊天室白名单成员。加入白名单的成员会在 onChatroomEvent 收到 "operation: 'addUserToAllowlist'" 回调。
 *
 * ```typescript
 * connection.addUsersToChatRoomWhitelist({chatRoomId: 'chatRoomId'})
 * ```
 */
function addUsersToChatRoomWhitelist(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (!Array.isArray(params.users)) {
    throw Error('Invalid parameter: "users"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var requestData = {
    usernames: params.users
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/white/users?resource=").concat(jid.clientResource),
    type: 'POST',
    data: JSON.stringify(requestData),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call addUsersToChatRoomWhitelist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.ADD_USERS_TO_CHATROOM);
}
/**
 * Adds members to the allow list of the chat room. Members added to the allow list of the chat room will receive in onChatroomEvent callback operation: 'addUserToAllowlist'.
 *
 * ```typescript
 * connection.addUsersToChatRoomAllowlist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 批量增加聊天室白名单成员。加入白名单的成员会在 onChatroomEvent 收到 operation: 'addUserToAllowlist' 回调。
 *
 * ```typescript
 * connection.addUsersToChatRoomAllowlist({chatRoomId: 'chatRoomId'})
 * ```
 */
var addUsersToChatRoomAllowlist = addUsersToChatRoomWhitelist;
/**
 * @hidden
 * @deprecated Use {@link removeChatRoomAllowlistMember} instead.
 * Removes members from the allow list of the chat room. Only the chat room owner or admin can call this method. The members removed from the allow list will receive "operation:'removeAllowlistMember'" in the callback of onChatroomEvent.
 *
 * ```typescript
 * connection.rmUsersFromChatRoomWhitelist({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeChatRoomAllowlistMember} 代替。
 * 批量移除聊天室白名单成员。仅聊天室所有者和管理员有权限调用该方法。被移除白名单的成员会在 onChatroomEvent 的回调里收到 "operation:'removeAllowlistMember'" 回调。
 *
 * ```typescript
 * connection.rmUsersFromChatRoomWhitelist({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
function rmUsersFromChatRoomWhitelist(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  } else if (typeof params.userName !== 'string' || params.userName === '') {
    throw Error('Invalid parameter: "userName"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(chatRoomId, "/white/users/").concat(params.userName, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call removeChatRoomAllowlistMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.REMOVE_CHATROOM_WHITE_USERS);
}
/**
 * @hidden
 * @deprecated
 */
var removeChatRoomWhitelistMember = rmUsersFromChatRoomWhitelist;
/**
 * Removes members from the allow list of the chat room. Only the chat room owner or admin can call this method. The users who are removed will receive "operation:'removeAllowlistMember'" in the callback of onChatroomEvent..
 *
 * ```typescript
 * connection.removeChatRoomAllowlistMember({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
/**
 * 移除聊天室白名单成员。仅聊天室所有者和管理员有权限调用该方法。被移出白名单的成员会在 onChatroomEvent 的回调里收到 "operation:'removeAllowlistMember'" 回调。
 *
 * ```typescript
 * connection.removeChatRoomAllowlistMember({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
var removeChatRoomAllowlistMember = rmUsersFromChatRoomWhitelist;
/**
 * @hidden
 * @deprecated Use {@link getChatRoomAllowlist} instead.
 * Gets the allow list of the chat room. Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.getChatRoomWhitelist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link getChatRoomAllowlist} 代替。
 * 获取白聊天室白名单列表。仅聊天室所有者和管理员有权调用该方法。
 *
 * ```typescript
 * connection.getChatRoomWhitelist({chatRoomId: 'chatRoomId'})
 * ```
 */
function getChatRoomWhitelist(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms/' + chatRoomId + '/white/users',
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRoomAllowlist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_WHITE_USERS);
}
/**
 * Gets the allow list of the chat room.
 *
 * Only the chat room owner or admin can call this method.
 *
 * ```typescript
 * connection.getChatRoomWhitelist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 获取聊天室白名单列表。
 *
 * 仅聊天室所有者和管理员有权调用该方法。
 *
 * ```typescript
 * connection.getChatRoomWhitelist({chatRoomId: 'chatRoomId'})
 * ```
 */
var getChatRoomAllowlist = getChatRoomWhitelist;
/**
 * @hidden
 * @deprecated Use {@link isInChatRoomAllowlist} instead.
 * Checks whether chat room members are on the allow list. Only the chat room owner or admin can call this method. The chat room members can check themselves.
 *
 * ```typescript
 * connection.isChatRoomWhiteUser({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link isInChatRoomAllowlist} 代替。
 * 查询聊天室成员是否是在白名单中。
 *
 * 普通成员可查询自己是否在聊天室白名单中；聊天室所有者和管理员可查询其他成员是否在白名单中。
 *
 * ```typescript
 * connection.isChatRoomWhiteUser({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
function isChatRoomWhiteUser(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (typeof params.userName !== 'string' || params.userName === '') {
    throw Error('Invalid parameter: "userName"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var chatRoomId = params.chatRoomId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatrooms/' + chatRoomId + '/white/users/' + params.userName,
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call isInChatRoomAllowlist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.CHECK_CHATROOM_WHITE_USER);
}
/**
 * Checks whether chat room members are on the allow list.
 *
 * Only the chat room owner or admin can call this method. The chat room members can check themselves.
 *
 * ```typescript
 * connection.isInChatRoomAllowlist({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
/**
 * 查询聊天室成员是否是在白名单中。
 *
 * 普通成员可查询自己是否在聊天室白名单中；聊天室所有者和管理员可查询其他成员是否在白名单中。
 *
 * ```typescript
 * connection.isInChatRoomAllowlist({chatRoomId: 'chatRoomId', userName: 'user1'})
 * ```
 */
var isInChatRoomAllowlist = isChatRoomWhiteUser;
/**
 * Check whether you are on the chat room mute list.
 *
 * ```typescript
 * connection.isInChatRoomMutelist({chatRoomId: 'chatRoomId'})
 * ```
 */
/**
 * 查询自己是否在聊天室禁言列表中。
 *
 * ```typescript
 * connection.isInChatRoomMutelist({chatRoomId: 'chatRoomId'})
 * ```
 */
function isInChatRoomMutelist(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    userId = _a.userId;
  var url = this.apiUrl + '/' + orgName + '/' + appName + '/sdk/chatrooms/' + params.chatRoomId + '/mute/' + userId;
  var opts = {
    url: url,
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call isInChatRoomMutelist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts).then(function (result) {
    return result.data;
  });
}
/**
 * Gets the announcement of the chat room.
 *
 * ```typescript
 * connection.fetchChatRoomAnnouncement({roomId: 'roomId'})
 * ```
 */
/**
 * 获取聊天室公告。
 *
 * ```typescript
 * connection.fetchChatRoomAnnouncement({roomId: 'roomId'})
 * ```
 */
function fetchChatRoomAnnouncement(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter: "roomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var roomId = params.roomId;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(roomId, "/announcement"),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call fetchChatRoomAnnouncement', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_ANN);
}
/**
 * Updates the announcement of the chat room.
 *
 * ```typescript
 * connection.updateChatRoomAnnouncement({roomId: 'roomId', announcement: 'hello'})
 * ```
 */
/**
 * 更新聊天室公告。
 *
 * ```typescript
 * connection.updateChatRoomAnnouncement({roomId: 'roomId', announcement: 'hello'})
 * ```
 */
function updateChatRoomAnnouncement(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter: "roomId"');
  } else if (typeof params.announcement !== 'string') {
    throw Error('Invalid parameter: "announcement"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var roomId = params.roomId;
  var requestData = {
    announcement: params.announcement
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(roomId, "/announcement?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call updateChatRoomAnnouncement:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.UPDATE_CHATROOM_ANN);
}
/**
 * Uploads a shared file to the chat room.
 *
 * ```typescript
 * connection.uploadChatRoomSharedFile({roomId: 'roomId', file: 'file object', onFileUploadProgress: onFileUploadProgress, onFileUploadComplete: onFileUploadComplete,onFileUploadError:onFileUploadError,onFileUploadCanceled:onFileUploadCanceled})
 * ```
 */
/**
 * 上传一个聊天室共享文件。
 *
 * ```typescript
 * connection.uploadChatRoomSharedFile({roomId: 'roomId', file: 'file object', onFileUploadProgress: onFileUploadProgress, onFileUploadComplete: onFileUploadComplete,onFileUploadError:onFileUploadError,onFileUploadCanceled:onFileUploadCanceled})
 * ```
 */
function uploadChatRoomSharedFile(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter: "roomId"');
  }
  if (_typeof(params.file) !== 'object') {
    throw Error('Invalid parameter: "file"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    return;
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var roomId = params.roomId;
  _utils__WEBPACK_IMPORTED_MODULE_14__.uploadFile.call(this, {
    uploadUrl: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(roomId, "/share_files?resource=").concat(jid.clientResource),
    onFileUploadProgress: params.onFileUploadProgress,
    onFileUploadComplete: params.onFileUploadComplete,
    onFileUploadError: params.onFileUploadError,
    onFileUploadCanceled: params.onFileUploadCanceled,
    accessToken: accessToken,
    apiUrl: this.apiUrl,
    file: params.file,
    appKey: this.context.appKey
  }, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.UPLOAD_CHATROOM_FILE);
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call uploadChatRoomSharedFile', params);
}
/**
 * Deletes a shared file of the chat room.
 *
 * ```typescript
 * connection.deleteChatRoomSharedFile({roomId: 'roomId', fileId: 'fileId'})
 * ```
 */
/**
 * 删除一个聊天室共享文件。
 *
 * ```typescript
 * connection.deleteChatRoomSharedFile({roomId: 'roomId', fileId: 'fileId'})
 * ```
 */
function deleteChatRoomSharedFile(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter: "roomId"');
  } else if (typeof params.fileId !== 'string' || params.fileId === '') {
    throw Error('Invalid parameter: "fileId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var roomId = params.roomId;
  var fileId = params.fileId;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(roomId, "/share_files/").concat(fileId, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call deleteChatRoomSharedFile', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.DELETE_CHATROOM_FILE);
}
/**
 * @hidden
 * @deprecated Use {@link getChatRoomSharedFilelist}
 * Gets a list of shared files in the chat room.
 *
 * ```typescript
 * connection.fetchChatRoomSharedFileList({roomId: 'roomId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link getChatRoomSharedFilelist} 代替。
 * 获取聊天室共享文件列表。
 *
 * ```typescript
 * connection.fetchChatRoomSharedFileList({roomId: 'roomId'})
 * ```
 */
function fetchChatRoomSharedFileList(params) {
  if (typeof params.roomId !== 'string' || params.roomId === '') {
    throw Error('Invalid parameter: "roomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var roomId = params.roomId;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatrooms/").concat(roomId, "/share_files"),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json',
      accept: 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call fetchChatRoomSharedFileList', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_FILES);
}
/**
 * Gets the list of shared files in the chat room.
 *
 * ```typescript
 * connection.getChatRoomSharedFilelist({roomId: 'roomId'})
 * ```
 */
/**
 * 获取聊天室共享文件列表。
 *
 * ```typescript
 * connection.getChatRoomSharedFilelist({roomId: 'roomId'})
 * ```
 */
var getChatRoomSharedFilelist = fetchChatRoomSharedFileList;
/**
 * Gets all of the chat room custom attributes.
 *
 * ```typescript
 * connection.getChatRoomAttributes({chatRoomId: 'chatRoomId', attributes:["attributeKey1","attributeKey2"]})
 * ```
 */
/**
 * 获取聊天室全部的自定义属性。
 *
 * ```typescript
 * connection.getChatRoomAttributes({chatRoomId: 'chatRoomId', attributes:["attributeKey1","attributeKey2"]})
 * ```
 */
function getChatRoomAttributes(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter chatRoomId: ' + params.chatRoomId);
  }
  if (params.attributeKeys && !Array.isArray(params.attributeKeys)) {
    throw Error('"Invalid parameter attributeKeys": ' + params.attributeKeys);
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var chatRoomId = params.chatRoomId,
    attributeKeys = params.attributeKeys;
  var requestData = {
    keys: attributeKeys
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/chatroom/").concat(chatRoomId),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call getChatRoomAttributes:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.GET_CHATROOM_ATTR).then(function (res) {
    var resp = {
      data: res.data,
      type: res.type
    };
    return resp;
  });
}
/**
 * Sets the chat room attributes in batches.
 *
 * ```typescript
 * connection.setChatRoomAttributes({chatRoomId: 'chatRoomId', attributes: {"attributeKey1": "attributeValue1"}, autoDelete: true, isForced: false})
 * ```
 */
/**
 * 批量设置聊天室属性。
 *
 * ```typescript
 * connection.setChatRoomAttributes({chatRoomId: 'chatRoomId', attributes: {"attributeKey1": "attributeValue1"}, autoDelete: true, isForced: false})
 * ```
 */
function setChatRoomAttributes(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter chatRoomId: ' + params.chatRoomId);
  }
  if (_typeof(params.attributes) !== 'object') {
    throw Error('Invalid parameter attributes: ' + params.attributes);
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    userId = _a.userId;
  var chatRoomId = params.chatRoomId,
    attributes = params.attributes,
    _b = params.autoDelete,
    autoDelete = _b === void 0 ? true : _b,
    isForced = params.isForced;
  var isForcedRequest = isForced ? '/forced' : '';
  var requestData = {
    metaData: attributes,
    autoDelete: autoDelete ? 'DELETE' : 'NO_DELETE'
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/chatroom/").concat(chatRoomId, "/user/").concat(userId) + isForcedRequest,
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call setChatRoomAttributes:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.SET_CHATROOM_ATTR).then(function (res) {
    return (0,_utils__WEBPACK_IMPORTED_MODULE_15__.formatAttributesData)(res);
  });
}
/**
 * Sets a custom chat room attribute.
 *
 * ```typescript
 * connection.setChatroomAttribute({chatRoomId: 'chatRoomId', attributeKey: "attributeKey1", attributeValue: "attributeValue1", autoDelete: true, isForced: false})
 * ```
 */
/**
 * 设置单个聊天室自定义属性。
 *
 * ```typescript
 * connection.setChatRoomAttribute({chatRoomId: 'chatRoomId', attributeKey: "attributeKey1", attributeValue: "attributeValue1", autoDelete: true, isForced: false})
 * ```
 */
function setChatRoomAttribute(params) {
  var _a;
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter chatRoomId: ' + params.chatRoomId);
  }
  if (typeof params.attributeKey !== 'string' || params.attributeKey === '') {
    throw Error('Invalid parameter attributeKey: ' + params.attributeKey);
  }
  if (typeof params.attributeValue !== 'string' || params.attributeValue === '') {
    throw Error('Invalid parameter attributeValue: ' + params.attributeValue);
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _b = this.context,
    orgName = _b.orgName,
    appName = _b.appName,
    accessToken = _b.accessToken,
    userId = _b.userId;
  var chatRoomId = params.chatRoomId,
    attributeKey = params.attributeKey,
    attributeValue = params.attributeValue,
    _c = params.autoDelete,
    autoDelete = _c === void 0 ? true : _c,
    isForced = params.isForced;
  var isForcedRequest = isForced ? '/forced' : '';
  var requestData = {
    metaData: (_a = {}, _a[attributeKey] = attributeValue, _a),
    autoDelete: autoDelete ? 'DELETE' : 'NO_DELETE'
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/chatroom/").concat(chatRoomId, "/user/").concat(userId) + isForcedRequest,
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call setChatRoomAttribute:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.SET_CHATROOM_ATTR).then(function (res) {
    var error = (0,_utils__WEBPACK_IMPORTED_MODULE_15__.formatAttributeInfo)(res);
    if (error) {
      throw error;
    }
  });
}
/**
 * Removes custom chat room attributes.
 *
 * ```typescript
 * connection.removeChatRoomAttributes({chatRoomId: 'chatRoomId', attributeKeys: ['attributeKey1','attributeKey2'], isForced: false })
 * ```
 */
/**
 * 批量移除聊天室自定义属性。
 *
 * ```typescript
 * connection.removeChatRoomAttributes({chatRoomId: 'chatRoomId', attributeKeys: ['attributeKey1','attributeKey2'], isForced: false })
 * ```
 */
function removeChatRoomAttributes(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter chatRoomId: ' + params.chatRoomId);
  }
  if (!Array.isArray(params.attributeKeys)) {
    throw Error('"Invalid parameter attributes": ' + params.attributeKeys);
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    userId = _a.userId;
  var chatRoomId = params.chatRoomId,
    attributeKeys = params.attributeKeys,
    isForced = params.isForced;
  var isForcedRequest = isForced ? '/forced' : '';
  var requestData = {
    keys: attributeKeys
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/chatroom/").concat(chatRoomId, "/user/").concat(userId) + isForcedRequest,
    type: 'DELETE',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call removeChatRoomAttributes:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.DELETE_CHATROOM_ATTR).then(function (res) {
    return (0,_utils__WEBPACK_IMPORTED_MODULE_15__.formatAttributesData)(res);
  });
}
/**
 * Removes a chat room attribute.
 *
 * ```typescript
 * connection.removeChatRoomAttributes({chatRoomId: 'chatRoomId', attributeKeys: ['string1','string2'], isForced: boolean })
 * ```
 */
/**
 * 移除单个聊天室自定义属性。
 *
 * ```typescript
 * connection.removeChatRoomAttributes({chatRoomId: 'chatRoomId', attributeKeys: ['string1','string2'], isForced: boolean })
 * ```
 */
function removeChatRoomAttribute(params) {
  if (typeof params.chatRoomId !== 'string' || params.chatRoomId === '') {
    throw Error('Invalid parameter chatRoomId: ' + params.chatRoomId);
  }
  if (typeof params.attributeKey !== 'string' || params.attributeKey === '') {
    throw Error('"Invalid parameter attributeKey": ' + params.attributeKey);
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_15__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_13__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_12__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    userId = _a.userId;
  var chatRoomId = params.chatRoomId,
    attributeKey = params.attributeKey,
    isForced = params.isForced;
  var isForcedRequest = isForced ? '/forced' : '';
  var requestData = {
    keys: [attributeKey]
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/chatroom/").concat(chatRoomId, "/user/").concat(userId) + isForcedRequest,
    type: 'DELETE',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_16__.logger.debug('Call removeChatRoomAttribute:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_14__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_17__.OperationName.DELETE_CHATROOM_ATTR).then(function (res) {
    var error = (0,_utils__WEBPACK_IMPORTED_MODULE_15__.formatAttributeInfo)(res);
    if (error) {
      throw error;
    }
  });
}


/***/ }),

/***/ "./src/apis/formatLastMessage.ts":
/*!***************************************!*\
  !*** ./src/apis/formatLastMessage.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatMessage": function() { return /* binding */ formatMessage; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");


var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};

/**
 * @hidden
 * 格式化服务端返回的最新一条消息
 */
function formatMessage(lastMessage) {
  var _a, _b;
  var id = lastMessage.id,
    payload = lastMessage.payload,
    timestamp = lastMessage.timestamp,
    to = lastMessage.to;
  var msgBody = payload.bodies && payload.bodies.length > 0 ? payload.bodies[0] : {};
  var baseMessage = {};
  var extMessage = {};
  var chatType = payload.type ? payload.type : to.indexOf('@conference.easemob.com') > -1 ? 'groupChat' : 'singleChat';
  switch (msgBody.type) {
    case 'txt':
      {
        baseMessage = {
          id: id,
          type: 'txt',
          chatType: chatType,
          msg: msgBody.msg || '',
          to: payload.to || '',
          from: payload.from,
          time: timestamp,
          ext: payload.ext
        };
        break;
      }
    case 'img':
      {
        baseMessage = {
          id: id,
          type: 'img',
          chatType: chatType,
          to: payload.to,
          from: payload.from,
          time: timestamp,
          ext: payload.ext,
          width: ((_a = msgBody.size) === null || _a === void 0 ? void 0 : _a.width) || 0,
          height: ((_b = msgBody.size) === null || _b === void 0 ? void 0 : _b.height) || 0,
          secret: msgBody.secret || '',
          url: (msgBody === null || msgBody === void 0 ? void 0 : msgBody.url) || '',
          file: {}
        };
        break;
      }
    case 'video':
      {
        baseMessage = {
          id: id,
          type: 'video',
          chatType: chatType,
          from: payload.from,
          to: payload.to,
          url: (msgBody === null || msgBody === void 0 ? void 0 : msgBody.url) || '',
          secret: msgBody.secret || '',
          filename: msgBody.filename,
          length: msgBody.length || 0,
          file: {},
          file_length: msgBody.fileLength || 0,
          filetype: payload.ext.file_type || '',
          ext: payload.ext,
          time: timestamp
        };
        break;
      }
    case 'loc':
      {
        baseMessage = {
          id: id,
          type: 'loc',
          chatType: chatType,
          from: payload.from,
          to: payload.to,
          buildingName: msgBody.buildingName || '',
          addr: msgBody.addr,
          lat: msgBody.lat,
          lng: msgBody.lng,
          ext: payload.ext,
          time: timestamp
        };
        break;
      }
    case 'audio':
      {
        baseMessage = {
          id: id,
          type: 'audio',
          chatType: chatType,
          from: payload.from,
          to: payload.to,
          secret: msgBody.secret || '',
          ext: payload.ext,
          time: timestamp,
          url: (msgBody === null || msgBody === void 0 ? void 0 : msgBody.url) || '',
          file: {},
          filename: msgBody.filename,
          length: payload.ext.duration || 0,
          file_length: msgBody.fileLength || 0,
          filetype: payload.ext.file_type || ''
        };
        break;
      }
    case 'file':
      {
        baseMessage = {
          id: id,
          type: 'file',
          chatType: chatType,
          from: payload.from,
          to: payload.to,
          ext: payload.ext,
          time: timestamp,
          url: (msgBody === null || msgBody === void 0 ? void 0 : msgBody.url) || '',
          secret: msgBody.secret || '',
          file: {},
          filename: msgBody.filename || '',
          length: msgBody.length || 0,
          file_length: msgBody.file_length || 0,
          filetype: payload.ext.file_type || ''
        };
        break;
      }
    case 'cmd':
      {
        baseMessage = {
          id: id,
          type: 'cmd',
          chatType: chatType,
          from: payload.from,
          to: payload.to,
          ext: payload.ext,
          time: timestamp,
          action: msgBody.action || ''
        };
        break;
      }
    case 'custom':
      {
        baseMessage = {
          id: id,
          type: 'custom',
          chatType: chatType,
          from: payload.from,
          to: payload.to,
          ext: payload.ext,
          time: timestamp,
          customEvent: msgBody.customEvent || '',
          customExts: msgBody.customExts || ''
        };
        break;
      }
    default:
      _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error("unexpected message: ".concat(lastMessage));
      break;
  }
  payload.msgConfig ? extMessage.msgConfig = payload.msgConfig : null;
  if (payload === null || payload === void 0 ? void 0 : payload.meta) {
    var meta = payload.meta;
    if (meta.thread) {
      extMessage.chatThread = {
        messageId: meta.thread.msg_parent_id,
        parentId: meta.thread.muc_parent_id,
        chatThreadName: meta.thread.thread_name
      };
    }
    if (meta.reactions) {
      extMessage.reactions = meta.reactions;
    }
    if (meta.translations) {
      extMessage.translations = meta.translations;
    }
  }
  var formatMessage = __assign(__assign({}, baseMessage), extMessage);
  return formatMessage;
}


/***/ }),

/***/ "./src/apis/groupApi.ts":
/*!******************************!*\
  !*** ./src/apis/groupApi.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "acceptGroupInvite": function() { return /* binding */ acceptGroupInvite; },
/* harmony export */   "acceptGroupJoinRequest": function() { return /* binding */ acceptGroupJoinRequest; },
/* harmony export */   "addUsersToGroupAllowlist": function() { return /* binding */ addUsersToGroupAllowlist; },
/* harmony export */   "addUsersToGroupWhitelist": function() { return /* binding */ addUsersToGroupWhitelist; },
/* harmony export */   "agreeInviteIntoGroup": function() { return /* binding */ agreeInviteIntoGroup; },
/* harmony export */   "agreeJoinGroup": function() { return /* binding */ agreeJoinGroup; },
/* harmony export */   "blockGroup": function() { return /* binding */ blockGroup; },
/* harmony export */   "blockGroupMember": function() { return /* binding */ blockGroupMember; },
/* harmony export */   "blockGroupMembers": function() { return /* binding */ blockGroupMembers; },
/* harmony export */   "blockGroupMessages": function() { return /* binding */ blockGroupMessages; },
/* harmony export */   "changeGroupOwner": function() { return /* binding */ changeGroupOwner; },
/* harmony export */   "changeOwner": function() { return /* binding */ changeOwner; },
/* harmony export */   "createGroup": function() { return /* binding */ createGroup; },
/* harmony export */   "createGroupNew": function() { return /* binding */ createGroupNew; },
/* harmony export */   "deleteGroupSharedFile": function() { return /* binding */ deleteGroupSharedFile; },
/* harmony export */   "destroyGroup": function() { return /* binding */ destroyGroup; },
/* harmony export */   "disableSendGroupMsg": function() { return /* binding */ disableSendGroupMsg; },
/* harmony export */   "dissolveGroup": function() { return /* binding */ dissolveGroup; },
/* harmony export */   "downloadGroupSharedFile": function() { return /* binding */ downloadGroupSharedFile; },
/* harmony export */   "enableSendGroupMsg": function() { return /* binding */ enableSendGroupMsg; },
/* harmony export */   "fetchGroupAnnouncement": function() { return /* binding */ fetchGroupAnnouncement; },
/* harmony export */   "fetchGroupSharedFileList": function() { return /* binding */ fetchGroupSharedFileList; },
/* harmony export */   "getGroup": function() { return /* binding */ getGroup; },
/* harmony export */   "getGroupAdmin": function() { return /* binding */ getGroupAdmin; },
/* harmony export */   "getGroupAllowlist": function() { return /* binding */ getGroupAllowlist; },
/* harmony export */   "getGroupBlacklist": function() { return /* binding */ getGroupBlacklist; },
/* harmony export */   "getGroupBlacklistNew": function() { return /* binding */ getGroupBlacklistNew; },
/* harmony export */   "getGroupBlocklist": function() { return /* binding */ getGroupBlocklist; },
/* harmony export */   "getGroupInfo": function() { return /* binding */ getGroupInfo; },
/* harmony export */   "getGroupMemberAttributes": function() { return /* binding */ getGroupMemberAttributes; },
/* harmony export */   "getGroupMembersAttributes": function() { return /* binding */ getGroupMembersAttributes; },
/* harmony export */   "getGroupMsgReadUser": function() { return /* binding */ getGroupMsgReadUser; },
/* harmony export */   "getGroupMuteList": function() { return /* binding */ getGroupMuteList; },
/* harmony export */   "getGroupMutelist": function() { return /* binding */ getGroupMutelist; },
/* harmony export */   "getGroupSharedFilelist": function() { return /* binding */ getGroupSharedFilelist; },
/* harmony export */   "getGroupWhitelist": function() { return /* binding */ getGroupWhitelist; },
/* harmony export */   "getJoinedGroups": function() { return /* binding */ getJoinedGroups; },
/* harmony export */   "getMuted": function() { return /* binding */ getMuted; },
/* harmony export */   "getPublicGroups": function() { return /* binding */ getPublicGroups; },
/* harmony export */   "groupBlockMulti": function() { return /* binding */ groupBlockMulti; },
/* harmony export */   "groupBlockSingle": function() { return /* binding */ groupBlockSingle; },
/* harmony export */   "inviteToGroup": function() { return /* binding */ inviteToGroup; },
/* harmony export */   "inviteUsersToGroup": function() { return /* binding */ inviteUsersToGroup; },
/* harmony export */   "isGroupWhiteUser": function() { return /* binding */ isGroupWhiteUser; },
/* harmony export */   "isInGroupAllowlist": function() { return /* binding */ isInGroupAllowlist; },
/* harmony export */   "isInGroupMutelist": function() { return /* binding */ isInGroupMutelist; },
/* harmony export */   "isInGroupWhiteList": function() { return /* binding */ isInGroupWhiteList; },
/* harmony export */   "joinGroup": function() { return /* binding */ joinGroup; },
/* harmony export */   "leaveGroup": function() { return /* binding */ leaveGroup; },
/* harmony export */   "listGroupMember": function() { return /* binding */ listGroupMember; },
/* harmony export */   "listGroupMembers": function() { return /* binding */ listGroupMembers; },
/* harmony export */   "listGroups": function() { return /* binding */ listGroups; },
/* harmony export */   "modifyGroup": function() { return /* binding */ modifyGroup; },
/* harmony export */   "mute": function() { return /* binding */ mute; },
/* harmony export */   "muteGroupMember": function() { return /* binding */ muteGroupMember; },
/* harmony export */   "quitGroup": function() { return /* binding */ quitGroup; },
/* harmony export */   "rejectGroupInvite": function() { return /* binding */ rejectGroupInvite; },
/* harmony export */   "rejectGroupJoinRequest": function() { return /* binding */ rejectGroupJoinRequest; },
/* harmony export */   "rejectInviteIntoGroup": function() { return /* binding */ rejectInviteIntoGroup; },
/* harmony export */   "rejectJoinGroup": function() { return /* binding */ rejectJoinGroup; },
/* harmony export */   "removeAdmin": function() { return /* binding */ removeAdmin; },
/* harmony export */   "removeGroupAdmin": function() { return /* binding */ removeGroupAdmin; },
/* harmony export */   "removeGroupAllowlistMember": function() { return /* binding */ removeGroupAllowlistMember; },
/* harmony export */   "removeGroupBlockMulti": function() { return /* binding */ removeGroupBlockMulti; },
/* harmony export */   "removeGroupBlockSingle": function() { return /* binding */ removeGroupBlockSingle; },
/* harmony export */   "removeGroupMember": function() { return /* binding */ removeGroupMember; },
/* harmony export */   "removeGroupMembers": function() { return /* binding */ removeGroupMembers; },
/* harmony export */   "removeGroupWhitelistMember": function() { return /* binding */ removeGroupWhitelistMember; },
/* harmony export */   "removeMultiGroupMember": function() { return /* binding */ removeMultiGroupMember; },
/* harmony export */   "removeMute": function() { return /* binding */ removeMute; },
/* harmony export */   "removeSingleGroupMember": function() { return /* binding */ removeSingleGroupMember; },
/* harmony export */   "rmUsersFromGroupWhitelist": function() { return /* binding */ rmUsersFromGroupWhitelist; },
/* harmony export */   "setAdmin": function() { return /* binding */ setAdmin; },
/* harmony export */   "setGroupAdmin": function() { return /* binding */ setGroupAdmin; },
/* harmony export */   "setGroupMemberAttributes": function() { return /* binding */ setGroupMemberAttributes; },
/* harmony export */   "unblockGroupMember": function() { return /* binding */ unblockGroupMember; },
/* harmony export */   "unblockGroupMembers": function() { return /* binding */ unblockGroupMembers; },
/* harmony export */   "unmuteGroupMember": function() { return /* binding */ unmuteGroupMember; },
/* harmony export */   "updateGroupAnnouncement": function() { return /* binding */ updateGroupAnnouncement; },
/* harmony export */   "uploadGroupSharedFile": function() { return /* binding */ uploadGroupSharedFile; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.array.join.js */ "./node_modules/core-js/modules/es.array.join.js");
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
















var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






/**
 * @hidden
 * @deprecated Use {@link createGroup} instead.
 * Creates a group instance.
 *
 * ```typescript
 * connection.createGroupNew({
 *  data: {
 *      groupname: 'groupname',
 *      desc: 'this is my group',
 *      members: ['user1', 'user2'],
 *      public: true,
 *      approval: false,
 *      allowinvites: true,
 *      inviteNeedConfirm: false
 *  }
 *  })
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link createGroup} 代替。
 * 创建群组。
 *
 * ```typescript
 * connection.createGroupNew({
 * data: {
 *      groupname: 'groupname',
 *      desc: 'this is my group',
 *      members: ['user1', 'user2'],
 *      public: true,
 *      approval: false,
 *      allowinvites: true,
 *      inviteNeedConfirm: false
 *   }
 * })
 * ```
 */
function createGroupNew(params) {
  if (!(params && params.data)) {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var suc = function suc(respData) {
    params.success && params.success(respData);
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'POST',
    data: JSON.stringify({
      owner: this.user,
      groupname: params.data.groupname,
      desc: params.data.desc,
      members: params.data.members,
      "public": params.data["public"],
      approval: params.data.approval,
      allowinvites: params.data.allowinvites,
      invite_need_confirm: params.data.inviteNeedConfirm,
      maxusers: params.data.maxusers,
      custom: params.data.ext
    }),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: suc,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call createGroup:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.CREATE_GROUP);
}
/**
 * Creates a group instance.
 *
 * ```typescript
 * connection.createGroup({
 *  data: {
 *      groupname: 'groupname',
 *      desc: 'this is my group',
 *      members: ['user1', 'user2'],
 *      public: true,
 *      approval: false,
 *      allowinvites: true,
 *      inviteNeedConfirm: false,
 * 		ext: {info: 'group info'}
 *   }
 * })
 * ```
 */
/**
 * 创建群组。
 *
 * ```typescript
 * connection.createGroup({
 *  data: {
 *      groupname: 'groupname',
 *      desc: 'this is my group',
 *      members: ['user1', 'user2'],
 *      public: true,
 *      approval: false,
 *      allowinvites: true,
 *      inviteNeedConfirm: false,
 * 		ext: {info: 'group info'}
 *    }
 * })
 * ```
 */
var createGroup = createGroupNew;
/**
 * @hidden
 * @deprecated Use {@link blockGroupMessages} instead.
 * Blocks group messages. This method is only valid for mobile devices.
 * ```typescript
 * connection.blockGroup({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link blockGroupMessages} 代替。
 * 屏蔽群组消息，只对移动端有效。
 * ```typescript
 * connection.blockGroup({groupId: 'groupId'})
 * ```
 */
function blockGroup(params) {
  var _a;
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _b = this.context,
    orgName = _b.orgName,
    appName = _b.appName,
    accessToken = _b.accessToken,
    jid = _b.jid;
  var groupId = 'notification_ignore_' + params.groupId;
  var data = {
    entities: [(_a = {}, _a[groupId] = true, _a)]
  };
  var options = {
    type: 'PUT',
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user, "?resource=").concat(jid.clientResource),
    data: JSON.stringify(data),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call blockGroupMessages', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.BLOCK_GROUP);
}
/**
 * Blocks group messages. This method is only valid for mobile devices.
 * ```typescript
 * connection.blockGroupMessages({groupId: 'groupId'})
 * ```
 */
/**
 * 屏蔽群组消息。该方法只对移动终端有效。
 * ```typescript
 * connection.blockGroupMessages({groupId: 'groupId'})
 * ```
 */
var blockGroupMessages = blockGroup;
/**
 * @hidden
 * @deprecated Use {@link getPublicGroups} instead.
 * Gets public groups with pagination.
 *
 * ```typescript
 * connection.listGroups({limit: 20, cursor: null})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link getPublicGroups} 替换。
 * 分页获取公开群。
 *
 * ```typescript
 * connection.listGroups({limit: 20, cursor: null})
 * ```
 */
function listGroups(params) {
  if (typeof params.limit !== 'number') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var requestData = {
    limit: params.limit,
    cursor: params.cursor
  };
  if (!params.cursor) {
    delete requestData.cursor;
  }
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/publicchatgroups',
    type: 'GET',
    dataType: 'json',
    data: requestData,
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call listGroups', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.LIST_GROUP);
}
/**
 * Gets public groups with pagination.
 *
 * ```typescript
 * connection.getPublicGroups({limit: 20, cursor: null})
 * ```
 */
/**
 * 分页获取公开群。
 *
 * ```typescript
 * connection.getPublicGroups({limit: 20, cursor: null})
 * ```
 */
var getPublicGroups = listGroups;
/**
 * @hidden
 * @deprecated Use {@link getJoinedGroups} instead.
 * Lists all the groups a user has joined.
 *
 * ```typescript
 * connection.getGroup()
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getJoinedGroups} 代替。
 * 列出某用户加入的所有群组。
 *
 * ```typescript
 * connection.getGroup()
 * ```
 */
function getGroup(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/users/' + this.user + '/joined_chatgroups',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params && (params === null || params === void 0 ? void 0 : params.success),
    error: params && (params === null || params === void 0 ? void 0 : params.error)
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getJoinedGroups', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_USER_GROUP);
}
/**
 * Lists all the groups a user has joined.
 *
 * @note
 * If either `needAffiliations` or `needAffiliations` is set `true`, when you get data with pagination, the current page number (pageNum) starts from 0 and you can get a maximum of 20 groups (pageSize) on each page and
 * the function return type is `Promise<AsyncResult<GroupTypes.GroupInfo[]>`
 *
 * If neither of the parameters is set, when you get data with pagination, the current page number (pageNum) starts from 1 and you can get a maximum of 500 groups (pageSize) on each page and and
 * the function return type is `Promise<AsyncResult<GroupTypes.BaseGroupInfo[]>`
 *
 * ```typescript
 * connection.getJoinedGroups({
 * 		pageNum: 1,
 * 		pageSize: 500,
 * 		needAffiliations: false,
 * 		needRole: false
 * })
 * ```
 */
/**
 * 获取用户加入的所有群组。
 *
 * @note
 * 若设置了 `needAffiliations`  或 `needAffiliations` 参数为 `true`，分页获取时，当前页码 （pageNum）从 0 开始，每页获取的群组上限（pageSize）为 20 并且
 * 返回值为类型为 `Promise<AsyncResult<GroupTypes.GroupInfo[]>`
 *
 * 若不设置这两个参数，分页获取时，当前页码 （pageNum）从 1 开始，每页获取的群组上限（pageSize）为 500 并且
 * 返回值为类型为 `Promise<AsyncResult<GroupTypes.BaseGroupInfo[]>`
 *
 * ```typescript
 * connection.getJoinedGroups({
 * 		pageNum: 1,
 * 		pageSize: 500,
 * 		needAffiliations: false,
 * 		needRole: false
 * })
 * ```
 */
function getJoinedGroups(params) {
  if (typeof params.pageNum !== 'number' || typeof params.pageSize !== 'number') {
    throw Error('Invalid parameter: "pageNum or pageSize"');
  }
  if (params.pageNum < 0 || params.pageSize < 0) {
    throw Error('"pageNum" should >= 0 and "pageSize" should >= 0');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var requestUrl = params.needAffiliations || params.needRole ? "/chatgroups/user/".concat(this.user, "?pagenum=").concat(params.pageNum, "&pagesize=").concat(params.pageSize, "&needAffiliations=").concat(params.needAffiliations, "&needRole=").concat(params.needRole) : "/users/".concat(this.user, "/joined_chatgroups?pagenum=").concat(params.pageNum, "&pagesize=").concat(params.pageSize);
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + requestUrl,
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params && (params === null || params === void 0 ? void 0 : params.success),
    error: params && (params === null || params === void 0 ? void 0 : params.error)
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_USER_GROUP).then(function (res) {
    var uri = res.uri,
      entities = res.entities;
    var resp = [];
    if (uri.includes('joined_chatgroups')) {
      return res;
    } else {
      entities.forEach(function (item) {
        var resultData = {
          affiliationsCount: item.affiliations_count,
          groupName: item.name,
          groupId: item.groupId,
          role: item.permission,
          disabled: item.disabled,
          approval: item.membersonly,
          allowInvites: item.allowinvites,
          description: item.description,
          maxUsers: item.maxusers,
          "public": item["public"]
        };
        resp.push(resultData);
      });
      res.entities = resp;
      return res;
    }
  });
}
/**
 * @hidden
 * @deprecated Use {@link changeGroupOwner} instead.
 * Transfers a group. Only the group owner can call this method. Group members will receive "operation: 'changeOwner'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.changeOwner({groupId: 'groupId', newOwner: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link changeGroupOwner} 代替。
 * 转让群组。仅群主可调用此方法。群组成员会在 onGroupEvent 回调里收到 operation:'changeOwner'。
 *
 * ```typescript
 * connection.changeOwner({groupId: 'groupId', newOwner: 'user1'})
 * ```
 */
function changeOwner(params) {
  if (typeof params.groupId !== 'string' || typeof params.newOwner !== 'string') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var requestData = {
    newowner: params.newOwner
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(params.groupId, "?resource=").concat(jid.clientResource),
    type: 'PUT',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    data: JSON.stringify(requestData),
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call changeOwner', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.CHANGE_OWNER);
}
/**
 * Transfers a group. Only the group owner can call this method. Group members will receive "operation: 'changeOwner'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.changeGroupOwner({groupId: 'groupId', newOwner: 'user1'})
 * ```
 */
/**
 * 转让群组。仅群主可调用此方法。群成员会在 onGroupEvent 回调里收到 operation:'changeOwner'。
 *
 * ```typescript
 * connection.changeGroupOwner({groupId: 'groupId', newOwner: 'user1'})
 * ```
 */
var changeGroupOwner = changeOwner;
/**
 * Gets specifications of the group.
 * ```typescript
 * connection.getGroupInfo({groupId: groupId})
 * ```
 */
/**
 * 获取群组详情。
 * ```typescript
 * connection.getGroupInfo({groupId: groupId})
 * ```
 */
function getGroupInfo(params) {
  if (typeof params.groupId !== 'string' && !Array.isArray(params.groupId)) {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups/' + params.groupId + '?joined_time=true',
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupInfo', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_INFO);
}
/**
 * Modifies group information. Only the group admin can call this method.
 *
 * ```typescript
 * connection.modifyGroup({groupId: 'groupId', groupName: 'groupName', description:'description'})
 * ```
 */
/**
 * 修改群信息。仅群组管理员可调用此方法。
 *
 * ```typescript
 * connection.modifyGroup({groupId: 'groupId', groupName: 'groupName', description:'description', ext: {info: 'group info'}})
 * ```
 */
function modifyGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId,
    requestData = {
      groupname: params.groupName,
      description: params.description,
      custom: params.ext
    },
    options = {
      url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "?resource=").concat(jid.clientResource),
      type: 'PUT',
      data: JSON.stringify(requestData),
      dataType: 'json',
      headers: {
        Authorization: 'Bearer ' + accessToken,
        'Content-Type': 'application/json'
      },
      success: params.success,
      error: params.error
    };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call modifyGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.MODIFY_GROUP);
}
/**
 * @hidden
 * @deprecated Use {@link listGroupMembers} instead.
 * Lists all members of the group with pagination.
 *
 * ```typescript
 * connection.listGroupMember({pageNum: 1, pageSize: 20, groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 请用 {@link listGroupMembers} 代替。
 * 分页列出群组的所有成员。
 *
 * ```typescript
 * connection.listGroupMember({pageNum: 1, pageSize: 20, groupId: 'groupId'})
 * ```
 */
function listGroupMember(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (isNaN(params.pageNum) || params.pageNum <= 0) {
    throw Error('The parameter "pageNum" should be a positive number');
  } else if (isNaN(params.pageSize) || params.pageSize <= 0) {
    throw Error('The parameter "pageSize" should be a positive number');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var requestData = {
    pagenum: params.pageNum,
    pagesize: params.pageSize
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups' + '/' + params.groupId + '/users',
    dataType: 'json',
    type: 'GET',
    data: requestData,
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call listGroupMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.LIST_GROUP_MEMBER);
}
/**
 * Lists all members of the group with pagination.
 *
 * ```typescript
 * connection.listGroupMembers({pageNum: 1, pageSize: 20, groupId: 'groupId'})
 * ```
 */
/**
 * 分页列出群组的所有成员。
 *
 * ```typescript
 * connection.listGroupMembers({pageNum: 1, pageSize: 20, groupId: 'groupId'})
 * ```
 */
var listGroupMembers = listGroupMember;
/**
 * Gets all admins in the group.
 * ```typescript
 * connection.getGroupAdmin({groupId: 'groupId'})
 * ```
 */
/**
 * 获取群组下所有管理员。
 * ```typescript
 * connection.getGroupAdmin({groupId: 'groupId'})
 * ```
 */
function getGroupAdmin(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var groupId = params.groupId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups' + '/' + groupId + '/admin',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupAdmin', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_ADMIN);
}
/**
 * @hidden
 * @deprecated Use {@link setGroupAdmin} instead.
 * Sets a group admin. Only the group owner can call this method. The user set as an admin will receive "operation: 'setAdmin'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.setAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link setGroupAdmin} 代替。
 * 设置群管理员。仅群主可调用此方法。设置为管理员的用户会在 onGroupEvent 的回调里收到 operation: 'setAdmin'。
 *
 * ```typescript
 * connection.setAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
function setAdmin(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    newadmin: params.username
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/admin?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call setGroupAdmin', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.SET_GROUP_ADMIN);
}
/**
 * Sets a group admin. Only the group owner can call this method. The user set as an admin will receive "operation: 'setAdmin'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.setGroupAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * 设置群管理员。仅群主可调用此方法。设置为管理员的用户会在 onGroupEvent 的回调里收到 operation: 'setAdmin'。
 *
 * ```typescript
 * connection.setGroupAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
var setGroupAdmin = setAdmin;
/**
 * @hidden
 * @deprecated Use {@link removeGroupAdmin} instead.
 * Removes a group admin. Only the group owner can call this method. The user whose admin permissions are revoked will receive "operation: 'removeAdmin'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link removeGroupAdmin} 替换。
 * 移除群管理员。仅群主可调用此方法。被取消管理员权限的用户会在 onGroupEvent 的回调里收到 operation: 'removeAdmin'。
 *
 * ```typescript
 * connection.removeAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
function removeAdmin(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/admin/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call removeAdmin', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.REMOVE_GROUP_ADMIN);
}
/**
 * Removes a group admin. Only the group owner can call this method. The user whose admin permissions are revoked will receive "operation: 'removeAdmin'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeGroupAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * 移除群管理员。仅群主可调用此方法。被取消管理员权限的用户会在 onGroupEvent 的回调里收到 operation: 'removeAdmin'。
 *
 * ```typescript
 * connection.removeGroupAdmin({groupId: 'groupId', username: 'user1'})
 * ```
 */
var removeGroupAdmin = removeAdmin;
/**
 * @hidden
 * @deprecated Use {@link destroyGroup} instead.
 * Destroys a group. Only the group owner can call this method. Group members will receive "operation: 'destroy'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.dissolveGroup({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link destroyGroup} 代替。
 * 解散群组。仅群主可调用此方法。群组成员会在 onGroupEvent 的回调中收到 operation:'destroy'。
 *
 * ```typescript
 * connection.dissolveGroup({groupId: 'groupId'})
 * ```
 */
function dissolveGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  //?resource=${jid.clientResource}
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "?version=v3&resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call destroyGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.DISSOLVE_GROUP);
}
/**
 * Destroys a group. Only the group owner can call this method. Group members will receive "operation: 'destroy'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.destroyGroup({groupId: 'groupId'})
 * ```
 */
/**
 * 解散群组。仅群主可调用此方法。群组成员会在 onGroupEvent 的回调中收到 operation:'destroy'。
 *
 * ```typescript
 * connection.destroyGroup({groupId: 'groupId'})
 * ```
 */
var destroyGroup = dissolveGroup;
/**
 * @hidden
 * @deprecated Use {@link leaveGroup} instead.
 * Leaves the group. Group members will receive "operation: 'memberAbsence'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.quitGroup({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link leaveGroup} 替换。
 * 离开群组。群组成员会在 onGroupEvent 的回调中收到 operation: 'memberAbsence'。
 *
 * ```typescript
 * connection.quitGroup({groupId: 'groupId'})
 * ```
 */
function quitGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId,
    options = {
      url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/quit?resource=").concat(jid.clientResource),
      type: 'DELETE',
      dataType: 'json',
      headers: {
        Authorization: 'Bearer ' + accessToken,
        'Content-Type': 'application/json'
      },
      success: params.success,
      error: params.error
    };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call quitGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.QUIT_GROUP);
}
/**
 * Leaves the group. Group members will receive "operation: 'memberAbsence'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.leaveGroup({groupId: 'groupId'})
 * ```
 */
/**
 * 离开群组。群组成员会在 onGroupEvent 的回调中收到 operation: 'memberAbsence'。
 *
 * ```typescript
 * connection.leaveGroup({groupId: 'groupId'})
 * ```
 */
var leaveGroup = quitGroup;
/**
 * @hidden
 * @deprecated Use {@link inviteUsersToGroup} instead.
 * Invites users into a group.
 * Creates a group instance "inviteNeedConfirm:true", the invited users will receive "operation: 'inviteToJoin'" in the callback of onGroupEvent.
 * Creates a group instance "inviteNeedConfirm:false", the invited users will receive "operation: 'directJoined'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.inviteToGroup({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link inviteUsersToGroup} 代替。
 * 邀请用户加群。
 * 群组创建时 inviteNeedConfirm:true，被邀请的用户会在 onGroupEvent 的回调中收到 operation: 'inviteToJoin'。
 * 群组创建时 inviteNeedConfirm:false，被邀请的用户会在 onGroupEvent 的回调中收到 operation: 'directJoined'。
 *
 * ```typescript
 * connection.inviteToGroup({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
function inviteToGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!Array.isArray(params.users)) {
    throw Error('Invalid parameter: "users"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var groupId = params.groupId;
  var users = params.users;
  var requestData = {
    usernames: users
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/invite?resource=").concat(jid.clientResource),
    type: 'POST',
    data: JSON.stringify(requestData),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call inviteUsersToGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.INVITE_TO_GROUP);
}
/**
 * Invites users into a group.
 * Creates a group instance "inviteNeedConfirm:true", the invited users will receive "operation: 'inviteToJoin'" in the callback of onGroupEvent.
 * Creates a group instance "inviteNeedConfirm:false", the invited users will receive "operation: 'directJoined'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.inviteUsersToGroup({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
/**
 * 邀请用户加群。
 * 群组创建时 inviteNeedConfirm:true，被邀请的用户会在 onGroupEvent 的回调中收到 operation: 'inviteToJoin'。
 * 群组创建时 inviteNeedConfirm:false，被邀请的用户会在 onGroupEvent 的回调中收到 operation: 'directJoined'。
 *
 * ```typescript
 * connection.inviteUsersToGroup({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
var inviteUsersToGroup = inviteToGroup;
/**
 * Applies to join the group. The group owner and admin will receive "operation: 'requestToJoin'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.joinGroup({groupId: 'groupId', message: 'I want to join the group'})
 * ```
 */
/**
 * 申请加入群组。群主和管理员会在 onGroupEvent 的回调中收到 operation:'requestToJoin'。
 *
 * ```typescript
 * connection.joinGroup({groupId: 'groupId', message: 'I want to join the group'})
 * ```
 */
function joinGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(params.groupId, "/apply?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify({
      message: params.message || ''
    }),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call joinGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.JOIN_GROUP);
}
/**
 * @hidden
 * @deprecated Use {@link acceptGroupJoinRequest} instead.
 * Accepts a group request. Only the group owner or admin can call this method. The user joining the group will receive "operation: 'acceptRequest'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.agreeJoinGroup({applicant: 'user1', groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link acceptGroupJoinRequest} 代替。
 * 同意用户加入群。仅群主和管理员可调用此方法。加入群组的用户会在 onGroupEvent 的回调中收到 operation: 'acceptRequest'。
 *
 * ```typescript
 * connection.agreeJoinGroup({applicant: 'user1', groupId: 'groupId'})
 * ```
 */
function agreeJoinGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.applicant !== 'string' || params.applicant === '') {
    throw Error('Invalid parameter: "applicant"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    applicant: params.applicant,
    verifyResult: true,
    reason: 'no clue'
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/apply_verify?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call agreeJoinGroup', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.AGREE_JOIN_GROUP);
}
/**
 * Accepts a group request. Only the group owner or admin can call this method. The user who joins the group will receive "operation: 'acceptRequest'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.acceptGroupJoinRequest({applicant: 'user1', groupId: 'groupId'})
 * ```
 */
/**
 * 同意用户加入群。仅群主和管理员可调用此方法。加入群组的用户会在 onGroupEvent 的回调里收到 operation: 'acceptRequest'。
 *
 * ```typescript
 * connection.acceptGroupJoinRequest({applicant: 'user1', groupId: 'groupId'})
 * ```
 */
var acceptGroupJoinRequest = agreeJoinGroup;
/**
 * @hidden
 * @deprecated Use {@link rejectGroupJoinRequest} instead.
 * Declines a group request. Only the group owner or admin can call this method.
 *
 * ```typescript
 * connection.rejectJoinGroup({applicant: 'user1', groupId: 'groupId', reason: 'I do not like you'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link rejectGroupJoinRequest} 代替。
 * 拒绝入群申请。仅群主和管理员可调用此方法。
 *
 * ```typescript
 * connection.rejectJoinGroup({applicant: 'user1', groupId: 'groupId', reason: 'I do not like you'})
 * ```
 */
function rejectJoinGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.applicant !== 'string' || params.applicant === '') {
    throw Error('Invalid parameter: "applicant"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    applicant: params.applicant,
    verifyResult: false,
    reason: params.reason || ''
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/apply_verify?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call rejectGroupJoinRequest', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.REJECT_JOIN_GROUP);
}
/**
 * Declines a group request. Only the group owner or admin can call this method.
 *
 * ```typescript
 * connection.rejectGroupJoinRequest({applicant: 'user1', groupId: 'groupId', reason: 'I do not like you'})
 * ```
 */
/**
 * 拒绝入群申请。仅群主和管理员可调用此方法。
 *
 * ```typescript
 * connection.rejectGroupJoinRequest({applicant: 'user1', groupId: 'groupId', reason: 'I do not like you'})
 * ```
 */
var rejectGroupJoinRequest = rejectJoinGroup;
/**
 * @hidden
 * @deprecated Use {@link acceptGroupInvite} instead.
 * Accepts a group invitation. If a group member invites a user to join the group, the invitee can call this method to accept the invitation. The inviter will receive "operation: 'acceptInvite'" in the callback of onGroupEvent. The user who joins the group successfully will receive "operation: 'memberPresence'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.agreeInviteIntoGroup({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link acceptGroupInvite} 代替。
 * 接受入群邀请。群组成员邀请用户入群可调用该方法接受入群邀请。邀请者会在 onGroupEvent 的回调中收到 operation: 'acceptInvite'，加入成功之后群成员会在 onGroupEvent 的回调里收到 operation: 'memberPresence'。
 *
 * ```typescript
 * connection.agreeInviteIntoGroup({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
// TODO: 去掉 invitee
function agreeInviteIntoGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.invitee !== 'string' || params.invitee === '') {
    throw Error('Invalid parameter: "invitee"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    invitee: params.invitee,
    verifyResult: true
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/invite_verify?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call acceptGroupInvite', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.AGREE_INVITE_GROUP);
}
/**
 * Accepts a group invitation. If a group member invites a user to join the group, the invitee can call this method to accept the invitation. The inviter will receive "operation: 'acceptInvite'" in the callback of onGroupEvent. The new group member will receive "operation: 'memberPresence'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.acceptGroupInvite({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
/**
 * 接受入群邀请。群组成员邀请用户入群时，用户可调用该方法接受邀请。邀请者会在 onGroupEvent 的回调里收到 operation: 'acceptInvite'，加入成功之后群成员会在 onGroupEvent 的回调里收到 operation: 'memberPresence'。
 *
 * ```typescript
 * connection.acceptGroupInvite({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
var acceptGroupInvite = agreeInviteIntoGroup;
/**
 * @hidden
 * @deprecated Use {@link rejectGroupInvite} instead.
 * Declines a group invitation. If a group member invites a user to join a group, the invitee can call this method to decline the invitation.
 *
 * ```typescript
 * connection.rejectInviteIntoGroup({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link rejectGroupInvite} 代替。
 * 拒绝入群邀请。群组成员邀请用户入群时，用户可调用该方法拒绝该邀请。
 *
 * ```typescript
 * connection.rejectInviteIntoGroup({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
// TODO 被拒绝没有监听事件？
function rejectInviteIntoGroup(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.invitee !== 'string' || params.invitee === '') {
    throw Error('Invalid parameter: "invitee"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    invitee: params.invitee,
    verifyResult: false
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/invite_verify?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call rejectGroupInvite', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.REJECT_INVITE_GROUP);
}
/**
 * Declines a group invitation. If a group member invites a user to join a group, the invitee can call this method to decline this invitation.
 *
 * ```typescript
 * connection.rejectGroupInvite({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
/**
 * 拒绝入群邀请。群组成员邀请用户入群时，用户可调用该方法拒绝邀请。
 *
 * ```typescript
 * connection.rejectGroupInvite({invitee: 'myUserId', groupId: 'groupId'})
 * ```
 */
var rejectGroupInvite = rejectInviteIntoGroup;
/**
 * @hidden
 * @deprecated Use {@link removeGroupMember} instead.
 * Removes a member from the group. Only the group owner or admin can call this method. The removed member will receive "operation: 'removeMember' in the callback of onGroupEvent, and other group members will receive "operation: 'memberAbsence' in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeSingleGroupMember({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeGroupMember} 代替。
 * 将群成员移出群组。仅群主和管理员可调用此方法。被移出的成员会在 onGroupEvent 的回调中收到 operation:'removeMember'，其他群成员会在 onGroupEvent 的回调中收到 operation:'memberAbsence'。
 *
 * ```typescript
 * connection.removeSingleGroupMember({groupId: 'groupId', username: 'user1'})
 * ```
 */
function removeSingleGroupMember(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var groupId = params.groupId;
  var username = params.username;
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call removeGroupMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.REMOVE_GROUP_MEMBER);
}
/**
 * Removes a member from the group. Only the group owner or admin can call this method. The removed member will receive "operation: 'removeMember'" in the callback of onGroupEvent, and other group members will receive "operation: 'memberAbsence' in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeGroupMember({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * 将群成员移出群组。仅群主和管理员可调用此方法。被移出的成员会在 onGroupEvent 的回调中收到 operation:'removeMember'，其他群成员会在 onGroupEvent 的回调中收到 operation:'memberAbsence'。
 *
 * ```typescript
 * connection.removeGroupMember({groupId: 'groupId', username: 'user1'})
 * ```
 */
var removeGroupMember = removeSingleGroupMember;
/**
 * @hidden
 * @deprecated Use {@link removeGroupMembers} instead.
 *  Removes members from the group. Only the group owner or admin can call this method. The removed members will receive "operation: 'removeMember'" in the callback of onGroupEvent, and other group members will receive "operation: 'memberAbsence' in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeMultiGroupMember({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeGroupMembers} 代替。
 * 将多个群成员移出群组。仅群主和管理员可调用此方法。被移出的成员会在 onGroupEvent 的回调中收到 operation:'removeMember'，其他群成员会在 onGroupEvent 的回调中收到 operation:'memberAbsence'。
 *
 * ```typescript
 * connection.removeMultiGroupMember({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
function removeMultiGroupMember(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!Array.isArray(params.users)) {
    throw Error('Invalid parameter: "users"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var users = params.users.join(',');
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/users/").concat(users, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call removeGroupMembers', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.MULTI_REMOVE_GROUP_MEMBER);
}
/**
 * Removes members from the group. Only the group owner or admin can call this method. The removed members will receive "operation: 'removeMember'" in the callback of onGroupEvent, and other group members will receive "operation: 'memberAbsence'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeGroupMembers({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
/**
 * 将多个群成员移出群组。仅群主和管理员可调用此方法。被移出的成员会在 onGroupEvent 的回调中收到 operation:'removeMember'，其他群成员会在 onGroupEvent 的回调中收到 operation:'memberAbsence'。
 *
 * ```typescript
 * connection.removeGroupMembers({groupId: 'groupId', users: ['user1', 'user2']})
 * ```
 */
var removeGroupMembers = removeMultiGroupMember;
/**
 * @hidden
 * @deprecated Use {@link muteGroupMember} instead.
 * Mutes a group member. Only the group owner or admin can call this method. The muted member and other members will receive "operation:'muteMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.mute({username: 'user1', muteDuration: -1, groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link muteGroupMember} 代替。
 * 将一个组成员禁言。仅群主和管理员可调用此方法。禁言的成员和其他成员会在 onGroupEvent 的回调中收到 operation:'muteMember'。
 *
 * ```typescript
 * connection.mute({username: 'user1', muteDuration: -1, groupId: 'groupId'})
 * ```
 */
function mute(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!(Array.isArray(params.username) || typeof params.username === 'string' && params.username !== '')) {
    throw Error('Invalid parameter: "username"');
  } else if (typeof params.muteDuration !== 'number') {
    throw Error('Invalid parameter: "muteDuration"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    usernames: typeof params.username === 'string' ? [params.username] : params.username,
    mute_duration: params.muteDuration
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/mute?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'POST',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    data: JSON.stringify(requestData),
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call muteGroupMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.MUTE_GROUP_MEMBER);
}
/**
 * Mutes one or more group members. Only the group owner or admin can call this method. The muted member and other members will receive "operation:'muteMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.muteGroupMember({username: 'user1' || ['user1', 'user2'], muteDuration: -1, groupId: 'groupId'})
 * ```
 */
/**
 * 将一个或多个群组成员禁言。仅群主和管理员可调用此方法。禁言的成员和其他成员会在 onGroupEvent 的回调中收到 operation:'muteMember'。
 *
 * ```typescript
 * connection.muteGroupMember({username: 'user1' || ['user1', 'user2'], muteDuration: -1, groupId: 'groupId'})
 * ```
 */
var muteGroupMember = mute;
/**
 * @hidden
 * @deprecated Use {@link unmuteGroupMember} instead.
 * Unmute a group member. Only the group owner or admin can call this method. All members, including the muted, will receive "operation: 'unmuteMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeMute({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link unmuteGroupMember} 代替。
 * 解除禁言。仅群主和管理员可调用此方法。解除禁言的用户和其他用户会在 onGroupEvent 的回调里收到 operation: 'unmuteMember'。
 *
 * ```typescript
 * connection.removeMute({groupId: 'groupId', username: 'user1'})
 * ```
 */
function removeMute(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!(Array.isArray(params.username) || typeof params.username === 'string' && params.username !== '')) {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/mute/").concat(username, "?resource=").concat(jid.clientResource),
    dataType: 'json',
    type: 'DELETE',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call unmuteGroupMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.UNMUTE_GROUP_MEMBER);
}
/**
 * Unmutes one or more group members. Only the group owner or admin can call this method. The unmuted member and other members will receive "operation: 'unmuteMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.unmuteGroupMember({groupId: 'groupId', username: 'user1' || ['user1', 'user2']})
 * ```
 */
/**
 * 解除禁言。仅群主和管理员可调用此方法。解除禁言的用户和其他用户会在 onGroupEvent 的回调里收到 operation: 'unmuteMember'。
 *
 * ```typescript
 * connection.unmuteGroupMember({groupId: 'groupId', username: 'user1' || ['user1', 'user2']})
 * ```
 */
var unmuteGroupMember = removeMute;
/**
 * @hidden
 * @deprecated Use {@link getGroupMutelist} instead.
 * Gets the mute list of the group.
 * Only the group admin or above can call this method.
 * ```typescript
 * connection.getMuted({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getGroupMutelist} 代替。
 * 获取群组的禁言列表。
 * 仅群组管理员及以上身份可调用此方法。
 * ```typescript
 * connection.getMuted({groupId: 'groupId'})
 * ```
 */
function getMuted(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var groupId = params.groupId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups' + '/' + groupId + '/mute',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupMuteList', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_MUTE_LIST);
}
/**
 * @hidden
 * @deprecated
 */
var getGroupMuteList = getMuted;
/**
 * Gets the mute list of the group.
 * Only the group admin or above can call this method.
 * ```typescript
 * connection.getGroupMutelist({groupId: 'groupId'})
 * ```
 */
/**
 * 获取群组的禁言列表。
 * 仅群组管理员及以上身份可调用此方法。
 * ```typescript
 * connection.getGroupMutelist({groupId: 'groupId'})
 * ```
 */
var getGroupMutelist = getMuted;
/**
 * @hidden
 * @deprecated Use {@link blockGroupMember} instead.
 * Adds a member to the group blocklist. Only the group owner or admin can call this method. The member added to the blocklist will receive "operation: 'removeMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.groupBlockSingle({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link blockGroupMember} 代替。
 * 将单个成员加入群组黑名单。仅群主和管理员可调用此方法。添加到黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'removeMember'。
 *
 * ```typescript
 * connection.groupBlockSingle({groupId: 'groupId', username: 'user1'})
 * ```
 */
function groupBlockSingle(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/blocks/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call blockGroupMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.BLOCK_GROUP_MEMBER);
}
/**
 * Adds a member to the group blocklist. Only the group owner or admin can call this method. The member added to the blocklist will receive "operation: 'removeMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.blockGroupMember({groupId: 'groupId', username: 'user1'})
 * ```
 */
/**
 * 将单个成员加入群组黑名单。仅群主和管理员可调用此方法。添加到黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'removeMember'。
 *
 * ```typescript
 * connection.blockGroupMember({groupId: 'groupId', username: 'user1'})
 * ```
 */
var blockGroupMember = groupBlockSingle;
/**
 * @hidden
 * @deprecated Use {@link blockGroupMembers} instead.
 * Adds members to the group blocklist in bulk. Only the group admin can call this method. Members added to the blocklist will receive "operation: 'removeMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.groupBlockMulti({usernames: ['user1', 'user2'], groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link blockGroupMembers} 代替。
 * 批量添加成员至群组黑名单。仅群组管理员可调用此方法。添加到黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'removeMember'。
 *
 * ```typescript
 * connection.groupBlockMulti({usernames: ['user1', 'user2'], groupId: 'groupId'})
 * ```
 */
function groupBlockMulti(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!Array.isArray(params.usernames)) {
    throw Error('Invalid parameter: "usernames"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var usernames = params.usernames;
  var requestData = {
    usernames: usernames
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/blocks/users?resource=").concat(jid.clientResource),
    data: JSON.stringify(requestData),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call blockGroupMembers', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.BLOCK_GROUP_MEMBERS);
}
/**
 * Adds members to the group blocklist in bulk. Only the group admin can call this method. Members added to the blocklist will receive "operation: 'removeMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.blockGroupMembers({usernames: ['user1', 'user2'], groupId: 'groupId'})
 * ```
 */
/**
 * 批量添加成员至群组黑名单。仅群组管理员可调用此方法。添加到黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'removeMember'。
 *
 * ```typescript
 * connection.blockGroupMembers({usernames: ['user1', 'user2'], groupId: 'groupId'})
 * ```
 */
var blockGroupMembers = groupBlockMulti;
/**
 * @hidden
 * @deprecated Use {@link unblockGroupMember} instead.
 * Removes a member from the group blocklist. Only the group admin can call this method. Members who have been removed from the blocklist will receive "operation: 'unblockMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeGroupBlockSingle({groupId: 'groupId', username: 'user'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link unblockGroupMember} 代替。
 * 将单个成员从群组黑名单移除。仅群组管理员可调用此方法。移除黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'unblockMember'。
 *
 * ```typescript
 * connection.removeGroupBlockSingle({groupId: 'groupId', username: 'user'})
 * ```
 */
function removeGroupBlockSingle(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error('Invalid parameter: "username"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var username = params.username;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/blocks/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call unblockGroupMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.UNBLOCK_GROUP_MEMBER);
}
/**
 * Removes a member from the group blocklist. Only the group admin can call this method. Members who are removed from the blocklist will receive "operation: 'unblockMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.unblockGroupMember({groupId: 'groupId'})
 * ```
 */
/**
 * 将单个成员从群组黑名单移除。仅群组管理员可调用此方法。移除黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'unblockMember'。
 *
 * ```typescript
 * connection.unblockGroupMember({groupId: 'groupId', username: 'user'})
 * ```
 */
var unblockGroupMember = removeGroupBlockSingle;
/**
 * @hidden
 * @deprecated Use {@link unblockGroupMembers} instead.
 * Removes members from the group blocklist in bulk. Only the group owner or admin can call this method. Members who are removed from the blocklist will receive "operation: 'unblockMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeGroupBlockMulti({groupId: 'groupId', usernames: ['user1', 'user2']})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link unblockGroupMembers} 代替。
 * 将成员批量移出群组黑名单。仅群主和管理员可调用此方法。被移出黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'unblockMember'。
 *
 * ```typescript
 * connection.removeGroupBlockMulti({groupId: 'groupId', usernames: ['user1', 'user2']})
 * ```
 */
function removeGroupBlockMulti(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!Array.isArray(params.usernames)) {
    throw Error('Invalid parameter: "usernames"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var username = params.usernames.join(',');
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/blocks/users/").concat(username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call unblockGroupMembers', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.UNBLOCK_GROUP_MEMBERS);
}
/**
 * Removes members from the group blocklist in bulk. Only the group owner or admin can call this method. Members who are removed from the blocklist will receive "operation: 'unblockMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.unblockGroupMembers({groupId: 'groupId', usernames: ['user1', 'user2']})
 * ```
 */
/**
 * 将成员批量移除群组黑名单。仅群主和管理员可调用此方法。移除黑名单的成员会在 onGroupEvent 的回调中收到 operation: 'unblockMember'。
 *
 * ```typescript
 * connection.unblockGroupMembers({groupId: 'groupId', usernames: ['user1', 'user2']})
 * ```
 */
var unblockGroupMembers = removeGroupBlockMulti;
/**
 * @hidden
 * @deprecated Use {@link getGroupBlocklist} instead.
 * Gets the group blocklist.
 *
 * ```typescript
 * connection.getGroupBlacklistNew({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getGroupBlocklist} 代替。
 * 获取群组黑名单。
 *
 * ```typescript
 * connection.getGroupBlacklistNew({groupId: 'groupId'})
 * ```
 */
function getGroupBlacklistNew(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var groupId = params.groupId,
    options = {
      url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups/' + groupId + '/blocks/users',
      type: 'GET',
      dataType: 'json',
      headers: {
        Authorization: 'Bearer ' + accessToken,
        'Content-Type': 'application/json'
      },
      success: params.success,
      error: params.error
    };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupBlacklist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_BLACK_LIST);
}
/**
 * @hidden
 * @deprecated
 */
var getGroupBlacklist = getGroupBlacklistNew;
/**
 * Gets the group blocklist.
 *
 * ```typescript
 * connection.getGroupBlocklist({groupId: 'groupId'})
 * ```
 */
/**
 * 获取群组黑名单。
 *
 * ```typescript
 * connection.getGroupBlocklist({groupId: 'groupId'})
 * ```
 */
var getGroupBlocklist = getGroupBlacklistNew;
/**
 * Mutes all members. Only the group admin or above can call this method. Group members will receive "operation: 'muteAllMembers'" in the callback of onGroupEvent.
 *
 * ```typescript
 *  connection.disableSendGroupMsg({groupId: 'groupId'})
 * ```
 */
/**
 * 设置全员禁言。仅群组管理员及以上身份可调用此方法。群组成员会在 onGroupEvent 的回调里收到 operation: 'muteAllMembers'
 *
 * ```typescript
 *  connection.disableSendGroupMsg({groupId: 'groupId'})
 * ```
 */
function disableSendGroupMsg(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/ban?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call disableSendGroupMsg', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.DISABLED_SEND_GROUP_MSG);
}
/**
 * Unmute all members. Only the group admin or above can call this method. Group members will receive "operation: 'unmuteAllMembers'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.enableSendGroupMsg({groupId: 'groupId'})
 * ```
 */
/**
 * 解除全员禁言。仅群组管理员及以上身份可调用此方法。群组成员会在 onGroupEvent 的回调中收到 operation: 'unmuteAllMembers'。
 *
 * ```typescript
 * connection.enableSendGroupMsg({groupId: 'groupId'})
 * ```
 */
function enableSendGroupMsg(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/ban?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call enableSendGroupMsg', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.ENABLE_SEND_GROUP_MSG);
}
/**
 * @hidden
 * @deprecated Use {@link addUsersToGroupAllowlist} instead.
 * Adds members to the group allowlist. Members on the allowlist can still post messages even if they are muted in the group. Only the group admin or above can call this method. Members added to the allowlist will receive "operation: 'addUserToAllowlist'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.addUsersToGroupWhitelist({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link addUsersToGroupAllowlist} 代替。
 * 添加白名单。白名单里的成员可以在群禁言之后继续发言。仅群组管理员及以上身份可调用此方法。添加到白名单的成员会在 onGroupEvent 的回调里收到 operation: 'addUserToAllowlist'。
 *
 * ```typescript
 * connection.addUsersToGroupWhitelist({groupId: 'groupId'})
 * ```
 */
function addUsersToGroupWhitelist(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (!Array.isArray(params.users)) {
    throw Error('Invalid parameter: "users"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    usernames: params.users
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/white/users?resource=").concat(jid.clientResource),
    type: 'POST',
    data: JSON.stringify(requestData),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call addUsersToGroupWhitelist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.ADD_USERS_TO_GROUP_WHITE);
}
/**
 * Adds members to the group allowlist. Members on the allowlist can still post messages even if they are muted in the group. Only the group admin or above can call this method. Members added to the allowlist will receive "operation: 'addUserToAllowlist'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.addUsersToGroupAllowlist({groupId: 'groupId'})
 * ```
 */
/**
 * 添加白名单。白名单里的成员可以在群禁言之后继续发言。仅群组管理员及以上身份可调用此方法。添加到白名单的成员会在 onGroupEvent 的回调里收到 operation: 'addUserToAllowlist'。
 *
 * ```typescript
 * connection.addUsersToGroupAllowlist({groupId: 'groupId'})
 * ```
 */
var addUsersToGroupAllowlist = addUsersToGroupWhitelist;
/**
 * @hidden
 * @deprecated Use {@link removeGroupWhitelistMember} instead.
 * Removes a member from the group allowlist. Only the group admin or above can call this method. The user that is removed from the group allowlist will receive "operation:'removeAllowlistMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.rmUsersFromGroupWhitelist({groupId: 'groupId', userName: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeGroupAllowlistMember} 代替。
 * 移除白名单。仅群组管理员及以上身份可调用此方法。移除白名单的用户会在 onGroupEvent 的回调中收到 operation:'removeAllowlistMember'。
 *
 * ```typescript
 * connection.rmUsersFromGroupWhitelist({groupId: 'groupId', userName: 'user1'})
 * ```
 */
function rmUsersFromGroupWhitelist(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.userName !== 'string' || params.userName === '') {
    throw Error('Invalid parameter: "userName"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/white/users/").concat(params.userName, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call removeGroupAllowlistMember', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.REMOVE_GROUP_WHITE_MEMBER);
}
/**
 * @hidden
 * @deprecated
 */
var removeGroupWhitelistMember = rmUsersFromGroupWhitelist;
/**
 * Removes a member from the group allowlist. Only the group admin or above can call this method. The user that is removed from the group allowlist will receive "operation:'removeAllowlistMember'" in the callback of onGroupEvent.
 *
 * ```typescript
 * connection.removeGroupAllowlistMember({groupId: 'groupId', userName: 'user1'})
 * ```
 */
/**
 * 移除白名单。仅群组管理员及以上身份可调用此方法。移除白名单的用户会在 onGroupEvent 的回调中收到 operation:'removeAllowlistMember'。
 *
 * ```typescript
 * connection.removeGroupAllowlistMember({groupId: 'groupId', userName: 'user1'})
 * ```
 */
var removeGroupAllowlistMember = rmUsersFromGroupWhitelist;
/**
 * @hidden
 * @deprecated Use {@link getGroupAllowlist} instead.
 * Gets the group allowlist. Only the group admin or above can call this method.
 *
 * ```typescript
 * connection.getGroupWhitelist({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link getGroupAllowlist} 代替。
 * 获取群组白名单列表。仅群组管理员及以上身份可调用此方法。
 *
 * ```typescript
 * connection.getGroupWhitelist({groupId: 'groupId'})
 * ```
 */
function getGroupWhitelist(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var groupId = params.groupId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups/' + groupId + '/white/users',
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupAllowlist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_WHITE_LIST);
}
/**
 * Gets the group allowlist. Only the group admin or above can call this method.
 *
 * ```typescript
 * connection.getGroupAllowlist({groupId: 'groupId'})
 * ```
 */
/**
 * 获取群组白名单列表。仅群组管理员及以上身份可调用此方法。
 *
 * ```typescript
 * connection.getGroupAllowlist({groupId: 'groupId'})
 * ```
 */
var getGroupAllowlist = getGroupWhitelist;
/**
 * @hidden
 * @deprecated Use {@link isInGroupAllowlist} instead.
 * Checks whether the current member is on the allowlist. The app admin can check all users; app users can only check themselves.
 *
 * ```typescript
 * connection.isGroupWhiteUser({groupId: 'groupId', userName: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link isInGroupAllowlist} 代替。
 * 检查当前用户是否在群组白名单中。app admin 可查询所有用户；app user 可查询自己。
 *
 * ```typescript
 * connection.isGroupWhiteUser({groupId: 'groupId', userName: 'user1'})
 * ```
 */
function isGroupWhiteUser(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.userName !== 'string' || params.userName === '') {
    throw Error('Invalid parameter: "userName"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var groupId = params.groupId;
  var options = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups/' + groupId + '/white/users/' + params.userName,
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call isInGroupAllowlist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.IS_IN_GROUP_WHITE_LIST);
}
/**
 * @hidden
 * @deprecated
 */
var isInGroupWhiteList = isGroupWhiteUser;
/**
 * Checks whether the current member is on the allowlist. The app admin can check all users; app users can only check themselves.
 *
 * ```typescript
 * connection.isInGroupAllowlist({groupId: 'groupId', userName: 'user1'})
 * ```
 */
/**
 * 检查当前用户是否在群组白名单中。app admin 可查询所有用户；app user 可查询自己。
 *
 * ```typescript
 * connection.isInGroupAllowlist({groupId: 'groupId', userName: 'user1'})
 * ```
 */
var isInGroupAllowlist = isGroupWhiteUser;
/**
 * Check whether you are on the group mute list.
 *
 * ```typescript
 * connection.isInGroupMutelist({groupId: 'groupId'})
 * ```
 */
/**
 * 查询自己是否在群组禁言列表中。
 *
 * ```typescript
 * connection.isInGroupMutelist({groupId: 'groupId'})
 * ```
 */
function isInGroupMutelist(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "chatRoomId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    userId = _a.userId;
  var url = this.apiUrl + '/' + orgName + '/' + appName + '/sdk/group/' + params.groupId + '/mute/' + userId;
  var opts = {
    url: url,
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call isInGroupMutelist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts).then(function (result) {
    return result.data;
  });
}
/**
 * Checks which members have read group message. This is a [value-added function] and .
 *
 * ```typescript
 * connection.getGroupMsgReadUser({groupId: 'groupId', msgId: 'msgId'})
 * ```
 */
/**
 * 查询哪些成员读取了群组消息。[增值功能]仅旗舰版及以上支持，具体见 pricing。
 *
 * ```typescript
 * connection.getGroupMsgReadUser({groupId: 'groupId', msgId: 'msgId'})
 * ```
 */
// TODO: 分页
function getGroupMsgReadUser(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.msgId !== 'string' || params.msgId === '') {
    throw Error('Invalid parameter: "msgId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var opts = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/chatgroups/' + params.groupId + '/acks/' + params.msgId,
    dataType: 'json',
    type: 'GET',
    data: {
      limit: 500,
      key: undefined
    },
    headers: {
      Authorization: 'Bearer ' + accessToken
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupMsgReadUser', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_MSG_READ_USER);
}
/**
 * Gets the group announcement.
 *
 * ```typescript
 * connection.fetchGroupAnnouncement({groupId: 'groupId'})
 * ```
 */
/**
 * 获取群公告。
 *
 * ```typescript
 * connection.fetchGroupAnnouncement({groupId: 'groupId'})
 * ```
 */
function fetchGroupAnnouncement(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var groupId = params.groupId;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/announcement"),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call fetchGroupAnnouncement', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_ANN);
}
/**
 * Updates the group announcement.
 *
 * ```typescript
 * connection.updateGroupAnnouncement({groupId: 'groupId', announcement: 'hello'})
 * ```
 */
/**
 * 更新群公告。
 *
 * ```typescript
 * connection.updateGroupAnnouncement({groupId: 'groupId', announcement: 'hello'})
 * ```
 */
function updateGroupAnnouncement(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  } else if (typeof params.announcement !== 'string') {
    throw Error('Invalid parameter: "announcement"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var requestData = {
    announcement: params.announcement
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/announcement?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call updateGroupAnnouncement', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.UPDATE_GROUP_ANN);
}
/**
 * Uploads shared files to the group.
 *
 * ```typescript
 * connection.uploadGroupSharedFile({groupId: 'groupId', file: 'file object', onFileUploadProgress: onFileUploadProgress, onFileUploadComplete: onFileUploadComplete,onFileUploadError:onFileUploadError,onFileUploadCanceled:onFileUploadCanceled})
 * ```
 */
/**
 * 上传群组共享文件。
 *
 * ```typescript
 * connection.uploadGroupSharedFile({groupId: 'groupId', file: 'file object', onFileUploadProgress: onFileUploadProgress, onFileUploadComplete: onFileUploadComplete,onFileUploadError:onFileUploadError,onFileUploadCanceled:onFileUploadCanceled})
 * ```
 */
function uploadGroupSharedFile(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (_typeof(params.file) !== 'object') {
    throw Error('Invalid parameter: "file"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    return;
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  _utils__WEBPACK_IMPORTED_MODULE_18__.uploadFile.call(this, {
    uploadUrl: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/share_files?resource=").concat(jid.clientResource),
    onFileUploadProgress: params.onFileUploadProgress,
    onFileUploadComplete: params.onFileUploadComplete,
    onFileUploadError: params.onFileUploadError,
    onFileUploadCanceled: params.onFileUploadCanceled,
    accessToken: accessToken,
    apiUrl: this.apiUrl,
    file: params.file,
    appKey: this.context.appKey
  }, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.UPLOAD_GROUP_FILE);
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call uploadGroupSharedFile', params);
}
/**
 * Deletes shared files of the group.
 *
 * ```typescript
 * connection.deleteGroupSharedFile({groupId: 'groupId', fileId: 'fileId'})
 * ```
 */
/**
 * 删除群共享文件。
 *
 * ```typescript
 * connection.deleteGroupSharedFile({groupId: 'groupId', fileId: 'fileId'})
 * ```
 */
function deleteGroupSharedFile(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (typeof params.fileId !== 'string' || params.fileId === '') {
    throw Error('Invalid parameter: "file"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var groupId = params.groupId;
  var fileId = params.fileId;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/share_files/").concat(fileId, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call deleteGroupSharedFile', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.DELETE_GROUP_FILE);
}
/**
 * @hidden
 * @deprecated Use {@link getGroupSharedFilelist} instead.
 * Gets a list of shared files in the group.
 *
 * ```typescript
 * connection.fetchGroupSharedFileList({groupId: 'groupId'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link getGroupSharedFilelist} 代替。
 * 获取群共享文件列表。
 *
 * ```typescript
 * connection.fetchGroupSharedFileList({groupId: 'groupId'})
 * ```
 */
function fetchGroupSharedFileList(params) {
  if (typeof params.groupId !== 'string' || params.groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var pagenum = params.pageNum || 1;
  var pagesize = params.pageSize || 10;
  var groupId = params.groupId;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/share_files?pagenum=").concat(pagenum, "&pagesize=").concat(pagesize),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupSharedFilelist', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_FILE_LIST);
}
var getGroupSharedFilelist = fetchGroupSharedFileList;
/**
 * Down load group file.
 * ```typescript
 * connection.downloadGroupSharedFile({groupId: 'groupId', fileId: 'fileId', onFileDownloadComplete: (data)=>{console.log(data)}})
 * ```
 */
/**
 * 下载群文件。
 * ```typescript
 * connection.downloadGroupSharedFile({groupId: 'groupId', fileId: 'fileId', onFileDownloadComplete: (data)=>{console.log(data)}})
 * ```
 */
function downloadGroupSharedFile(params) {
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var apiUrl = this.apiUrl;
  var groupId = params.groupId;
  var fileId = params.fileId;
  _utils__WEBPACK_IMPORTED_MODULE_18__.download.call(this, {
    url: "".concat(apiUrl, "/").concat(orgName, "/").concat(appName, "/chatgroups/").concat(groupId, "/share_files/").concat(fileId),
    onFileDownloadComplete: params.onFileDownloadComplete,
    onFileDownloadError: params.onFileDownloadError,
    accessToken: accessToken,
    id: fileId,
    secret: params.secret
  }, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.DOWN_GROUP_FILE);
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call downloadGroupSharedFile', params);
}
/**
 * Sets custom attributes of a group member.
 * After custom attributes of a group member are set, other members in the group receive the `operation: 'memberAttributesUpdate'`  in the `onGroupEvent` callback and the other devices of the group member receive the  the `operation: 'memberAttributesUpdate'`  in the `onMultiDeviceEvent` callback.
 *
 * ```typescript
 * connection.setGroupMemberAttributes({groupId: 'groupId', userId: 'userId', memberAttributes: {key: 'value'}})
 * ```
 */
/**
 * 设置群成员自定义属性。
 * 设置后，群内其他成员会收到 `onGroupEvent` 回调，事件为 `memberAttributesUpdate`。该成员的其他设备会收到 `onMultiDeviceEvent` 回调，事件为 `memberAttributesUpdate`。
 *
 * ```typescript
 * connection.setGroupMemberAttributes({groupId: 'groupId', userId: 'userId', memberAttributes: {key: 'value'}})
 * ```
 */
function setGroupMemberAttributes(params) {
  return __awaiter(this, void 0, void 0, function () {
    var groupId, userId, memberAttributes, error, _a, orgName, appName, accessToken, jid, dt, opts;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          groupId = params.groupId, userId = params.userId, memberAttributes = params.memberAttributes;
          if (typeof groupId !== 'string' || groupId === '') {
            throw Error('Invalid parameter: "groupId"');
          }
          if (typeof userId !== 'string' || userId === '') {
            throw Error('Invalid parameter: "userId"');
          }
          if (_typeof(memberAttributes) !== 'object') {
            throw Error('Invalid parameter: "memberAttributes"');
          }
          if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, accessToken = _a.accessToken, jid = _a.jid;
          dt = {
            metaData: memberAttributes
          };
          opts = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/sdk/metadata/chatgroup/").concat(groupId, "/user/").concat(userId, "?resource=").concat(jid.clientResource),
            type: 'PUT',
            dataType: 'json',
            data: JSON.stringify(dt),
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            }
          };
          _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call setGroupMemberAttributes', params);
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.SET_GROUP_MEMBER_ATTRS)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * Gets all custom attributes of a group member.
 * ```typescript
 * connection.getGroupMemberAttributes({groupId: 'groupId', userId: 'userId'})
 * ```
 */
/**
 * 获取单个群成员所有自定义属性。
 * ```typescript
 * connection.getGroupMemberAttributes({groupId: 'groupId', userId: 'userId'})
 * ```
 */
function getGroupMemberAttributes(params) {
  var groupId = params.groupId,
    userId = params.userId;
  return getGroupMembersAttributes.call(this, {
    groupId: groupId,
    userIds: [userId]
  }).then(function (res) {
    var _a;
    return {
      type: res.type,
      data: (_a = res.data) === null || _a === void 0 ? void 0 : _a[userId]
    };
  });
}
/**
 * Gets custom attributes of multiple group members by attribute key.
 * ```typescript
 * connection.getGroupMembersAttributes({groupId: 'groupId', userIds: ['userId'], keys: ['avatar', 'nickname']})
 * ```
 */
/**
 * 根据指定的属性 key 获取多个群成员的自定义属性。
 * ```typescript
 * connection.getGroupMembersAttributes({groupId: 'groupId', userIds: ['userId'], keys: ['avatar', 'nickname']})
 * ```
 */
function getGroupMembersAttributes(params) {
  var groupId = params.groupId,
    userIds = params.userIds,
    _a = params.keys,
    keys = _a === void 0 ? [] : _a;
  if (typeof groupId !== 'string' || groupId === '') {
    throw Error('Invalid parameter: "groupId"');
  }
  if (!Array.isArray(userIds) || (userIds === null || userIds === void 0 ? void 0 : userIds.length) <= 0) {
    throw Error('Invalid parameter: "userIds"');
  }
  if (!Array.isArray(keys)) {
    throw Error('Invalid parameter: "keys"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_19__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_17__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_16__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _b = this.context,
    orgName = _b.orgName,
    appName = _b.appName,
    accessToken = _b.accessToken;
  var dt = {
    targets: userIds,
    properties: keys
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/sdk/metadata/chatgroup/").concat(groupId, "/get"),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(dt),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_20__.logger.debug('Call getGroupMembersAttributes', params);
  return _utils__WEBPACK_IMPORTED_MODULE_18__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_21__.OperationName.GET_GROUP_MEMBER_ATTR).then(function (res) {
    return {
      type: res.type,
      data: (res === null || res === void 0 ? void 0 : res.data) || {}
    };
  });
}


/***/ }),

/***/ "./src/apis/index.ts":
/*!***************************!*\
  !*** ./src/apis/index.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "acceptContactInvite": function() { return /* binding */ acceptContactInvite; },
/* harmony export */   "acceptInvitation": function() { return /* binding */ acceptInvitation; },
/* harmony export */   "addContact": function() { return /* binding */ addContact; },
/* harmony export */   "addReaction": function() { return /* binding */ addReaction; },
/* harmony export */   "addToBlackList": function() { return /* binding */ addToBlackList; },
/* harmony export */   "addUsersToBlacklist": function() { return /* binding */ addUsersToBlacklist; },
/* harmony export */   "addUsersToBlocklist": function() { return /* binding */ addUsersToBlocklist; },
/* harmony export */   "declineContactInvite": function() { return /* binding */ declineContactInvite; },
/* harmony export */   "declineInvitation": function() { return /* binding */ declineInvitation; },
/* harmony export */   "deleteContact": function() { return /* binding */ deleteContact; },
/* harmony export */   "deleteConversation": function() { return /* binding */ deleteConversation; },
/* harmony export */   "deleteReaction": function() { return /* binding */ deleteReaction; },
/* harmony export */   "deleteSession": function() { return /* binding */ deleteSession; },
/* harmony export */   "fetchHistoryMessages": function() { return /* binding */ fetchHistoryMessages; },
/* harmony export */   "fetchUserInfoById": function() { return /* binding */ fetchUserInfoById; },
/* harmony export */   "getBlacklist": function() { return /* binding */ getBlacklist; },
/* harmony export */   "getBlocklist": function() { return /* binding */ getBlocklist; },
/* harmony export */   "getChatToken": function() { return /* binding */ getChatToken; },
/* harmony export */   "getContacts": function() { return /* binding */ getContacts; },
/* harmony export */   "getConversationlist": function() { return /* binding */ getConversationlist; },
/* harmony export */   "getHistoryMessages": function() { return /* binding */ getHistoryMessages; },
/* harmony export */   "getReactionDetail": function() { return /* binding */ getReactionDetail; },
/* harmony export */   "getReactionList": function() { return /* binding */ getReactionList; },
/* harmony export */   "getReactionlist": function() { return /* binding */ getReactionlist; },
/* harmony export */   "getRoster": function() { return /* binding */ getRoster; },
/* harmony export */   "getSessionList": function() { return /* binding */ getSessionList; },
/* harmony export */   "modifyMessage": function() { return /* binding */ modifyMessage; },
/* harmony export */   "recallMessage": function() { return /* binding */ recallMessage; },
/* harmony export */   "removeFromBlackList": function() { return /* binding */ removeFromBlackList; },
/* harmony export */   "removeHistoryMessages": function() { return /* binding */ removeHistoryMessages; },
/* harmony export */   "removeRoster": function() { return /* binding */ removeRoster; },
/* harmony export */   "removeUserFromBlackList": function() { return /* binding */ removeUserFromBlackList; },
/* harmony export */   "removeUserFromBlocklist": function() { return /* binding */ removeUserFromBlocklist; },
/* harmony export */   "reportMessage": function() { return /* binding */ reportMessage; },
/* harmony export */   "updateCurrentUserNick": function() { return /* binding */ updateCurrentUserNick; },
/* harmony export */   "updateOwnUserInfo": function() { return /* binding */ updateOwnUserInfo; },
/* harmony export */   "updateUserInfo": function() { return /* binding */ updateUserInfo; },
/* harmony export */   "uploadPushToken": function() { return /* binding */ uploadPushToken; },
/* harmony export */   "uploadToken": function() { return /* binding */ uploadToken; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.array.join.js */ "./node_modules/core-js/modules/es.array.join.js");
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_array_reverse_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.reverse.js */ "./node_modules/core-js/modules/es.array.reverse.js");
/* harmony import */ var core_js_modules_es_array_reverse_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_reverse_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _handleMessages_handleChatMsg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../handleMessages/handleChatMsg */ "./src/handleMessages/handleChatMsg.ts");
/* harmony import */ var _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../handleMessages/handleRosterMsg */ "./src/handleMessages/handleRosterMsg.ts");
/* harmony import */ var Base64__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! Base64 */ "./node_modules/Base64/base64.js");
/* harmony import */ var Base64__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(Base64__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");
/* harmony import */ var _formatLastMessage__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./formatLastMessage */ "./src/apis/formatLastMessage.ts");




















/* eslint-disable @typescript-eslint/ban-ts-comment */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
/**
 * Contact contains the APIs for contact-related operations.
 * @module Contact
 */
// @category Connection










/**
 * @hidden
 * @deprecated Use {@link getBlocklist} instead.
 * Gets the blocklist.
 *
 * ```typescript
 * connection.getBlacklist()
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getBlocklist} 代替。
 * 获取黑名单列表。
 *
 * ```typescript
 * connection.getBlacklist()
 * ```
 */
function getBlacklist(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error_1 = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error_1);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var suc = function suc(data) {
    var list = {};
    data.data.forEach(function (v) {
      list[v] = {
        name: v
      };
    });
    typeof (params === null || params === void 0 ? void 0 : params.success) === 'function' && params.success(data);
  };
  var error = function error(res) {
    typeof (params === null || params === void 0 ? void 0 : params.error) === 'function' && params.error(res);
  };
  var opts = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/users/' + this.user + '/blocks/users',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken
    },
    success: suc,
    error: error
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call getBlocklist');
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.GET_BLACK_LIST);
}
/**
 * Gets the blocklist.
 *
 * ```typescript
 * connection.getBlocklist()
 * ```
 */
/**
 * 获取黑名单列表。
 *
 * ```typescript
 * connection.getBlocklist()
 * ```
 */
var getBlocklist = getBlacklist;
/**
 * @hidden
 * @deprecated Use {@link getContacts} instead.
 * Gets the contact list.
 *
 * ```typescript
 * connection.getRoster()
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getContacts} 代替。
 * 获取联系人列表。
 *
 * ```typescript
 * connection.getRoster()
 * ```
 */
var getRoster = getContacts;
/**
 * Gets the contact list.
 *
 * ```typescript
 * connection.getContacts()
 * ```
 */
/**
 * 获取联系人列表。
 *
 * ```typescript
 * connection.getContacts()
 * ```
 */
function getContacts(params) {
  var _this = this;
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error_2 = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error_2);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var suc = function suc(data) {
    var friends = [];
    data.data.forEach(function (v) {
      friends.push({
        name: v,
        subscription: 'both',
        jid: _this.context.jid
      });
    });
    typeof (params === null || params === void 0 ? void 0 : params.success) === 'function' && params.success(friends);
  };
  var error = function error(res) {
    typeof (params === null || params === void 0 ? void 0 : params.error) === 'function' && params.error(res);
  };
  var opts = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/users/' + this.user + '/contacts/users',
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken
    },
    success: suc,
    error: error
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call getContacts');
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.GET_CONTACTS);
}
/**
 * @hidden
 * @deprecated Use {@link uploadPushToken} instead.
 * Uploads the token to the server. This method is used when the SDK is used on a native client on which a third-party push service is to be integrated.
 *
 * ```typescript
 * connection.uploadToken({deviceId: 'deviceId', deviceToken: 'deviceToken', notifierName: 'notifierName'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link uploadPushToken} 代替。
 * 将 token 上传到服务器。该方法的使用场景是 SDK 用在原生客户端且准备在客户端集成第三方推送功能。
 *
 * ```typescript
 * connection.uploadToken({deviceId: 'deviceId', deviceToken: 'deviceToken', notifierName: 'notifierName'})
 * ```
 */
function uploadToken(params) {
  if (typeof params.deviceId !== 'string' || params.deviceId === '') {
    throw Error('Invalid parameter: "deviceId"');
  } else if (typeof params.deviceToken !== 'string' || params.deviceToken === '') {
    throw Error('Invalid parameter: "deviceToken"');
  } else if (typeof params.notifierName !== 'string' || params.notifierName === '') {
    throw Error('Invalid parameter: "notifierName"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user),
    type: 'PUT',
    data: JSON.stringify({
      device_id: params.deviceId,
      device_token: params.deviceToken,
      notifier_name: params.notifierName
    }),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call uploadPushToken', params);
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.UPLOAD_PUSH_TOKEN);
}
/**
 * Uploads the token to the server. This method is used when the SDK is used on a native client on which a third-party push service is to be integrated.
 *
 * ```typescript
 * connection.uploadPushToken({deviceId: 'deviceId', deviceToken: 'deviceToken', notifierName: 'notifierName'})
 * ```
 */
/**
 * 将 token 上传到服务器。该方法的使用场景是 SDK 用在原生客户端且准备在客户端集成第三方推送功能。
 *
 * ```typescript
 * connection.uploadPushToken({deviceId: 'deviceId', deviceToken: 'deviceToken', notifierName: 'notifierName'})
 * ```
 */
var uploadPushToken = uploadToken;
/**
 * @hidden
 * @deprecated Use {@link getConversationlist} instead.
 * Gets the conversation list.
 *
 * ```typescript
 * connection.getSessionList()
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getConversationlist} 代替。
 * 获取会话列表。
 *
 * ```typescript
 * connection.getSessionList()
 * ```
 */
function getSessionList(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user, "/user_channels"),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params && (params === null || params === void 0 ? void 0 : params.success),
    error: params && (params === null || params === void 0 ? void 0 : params.error)
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call getSessionList');
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.GET_SESSION_LIST);
}
/**
 * Gets the conversation list and the latest message under the conversation.
 *
 * ```typescript
 * connection.getConversationlist()
 * ```
 */
/**
 * 获取会话列表以及会话下的最新一条消息。
 *
 * ```typescript
 * connection.getConversationlist()
 * ```
 */
function getConversationlist(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var isPaging = !!(params && typeof params.pageNum === 'number' && typeof params.pageSize === 'number' && params.pageNum > 0 && params.pageSize > 0);
  var url = "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user, "/user_channels").concat(isPaging ? '/page' : '');
  var opts = {
    url: url,
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params && (params === null || params === void 0 ? void 0 : params.success),
    error: params && (params === null || params === void 0 ? void 0 : params.error)
  };
  if (isPaging) {
    opts.data = {
      pageNum: params.pageNum,
      pageSize: params.pageSize
    };
  }
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call getConversationlist');
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.GET_SESSION_LIST).then(function (res) {
    return formatLastMessage(res);
  });
}
function formatLastMessage(res) {
  var channelInfos = res.data.channel_infos;
  channelInfos === null || channelInfos === void 0 ? void 0 : channelInfos.forEach(function (item) {
    if (item.meta && JSON.stringify(item.meta) !== '{}') {
      item.meta.payload = JSON.parse(item.meta.payload);
      item.lastMessage = (0,_formatLastMessage__WEBPACK_IMPORTED_MODULE_29__.formatMessage)(item.meta);
    } else {
      item.lastMessage = item.meta;
    }
    delete item.meta;
  });
  return res;
}
/**
 * @hidden
 * @deprecated Use Use {@link deleteConversation} instead.
 * Deletes the conversation.
 *
 * ```typescript
 * connection.deleteSession()
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link deleteConversation} 代替。
 * 删除会话。
 *
 * ```typescript
 * connection.deleteSession()
 * ```
 */
function deleteSession(params) {
  if (params && typeof params.channel !== 'string') {
    throw Error("Invalid parameter channel: ".concat(params.channel));
  }
  if (params && params.chatType !== 'singleChat' && params.chatType !== 'groupChat') {
    throw Error("Invalid parameter chatType: ".concat(params.chatType));
  }
  if (params && typeof params.deleteRoam !== 'boolean') {
    throw Error("Invalid parameter deleteRoam: ".concat(params.deleteRoam));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var type;
  if (params.chatType === 'singleChat') {
    type = 'chat';
  } else {
    type = 'groupChat';
  }
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user, "/user_channel"),
    dataType: 'json',
    type: 'DELETE',
    data: JSON.stringify({
      channel: params.channel,
      type: type,
      delete_roam: params.deleteRoam
    }),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call deleteSession', params);
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, options, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.DELETE_SESSION);
}
/**
 * Deletes the conversation.
 *
 * ```typescript
 * connection.deleteConversation({
 *  channel: 'targetId',
 *  chatType: 'singleChat',
 *  deleteRoam: true
 * })
 * ```
 */
/**
 * 删除会话。
 *
 * ```typescript
 * connection.deleteConversation({
 *  channel: 'targetId',
 *  chatType: 'singleChat',
 *  deleteRoam: true
 * })
 * ```
 */
var deleteConversation = deleteSession;
/**
 * @hidden
 * @deprecated Use {@link updateUserInfo} instead.
 * Modifies the user's attributes.
 *
 * ```typescript
 * connection.updateOwnUserInfo({nickname: 'Tom', avatarurl: 'avatarurl', mail: 'abc@gmail,com', ext: JSON.stringify({hobby: 'football'})})
 *
 * connection.updateOwnUserInfo('nickname', 'Tom')
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link updateUserInfo} 替换。
 * 修改当前用户的用户属性。
 *
 * ```typescript
 * connection.updateOwnUserInfo({nickname: 'Tom', avatarurl: 'avatarurl', mail: 'abc@gmail,com', ext: JSON.stringify({hobby: 'football'})})
 *
 * connection.updateOwnUserInfo('nickname', 'Tom')
 * ```
 */
function updateOwnUserInfo(params, value) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var configurableKey = ['nickname', 'avatarurl', 'mail', 'phone', 'gender', 'sign', 'birth', 'ext'];
  var param = {};
  // @ts-ignore
  if (typeof wx !== 'undefined' || typeof qq !== 'undefined') {
    if (typeof params === 'string' && typeof value !== 'undefined') {
      if (configurableKey.includes(params)) {
        param[params] = value;
      } else {
        throw new Error('illegal key, only these keys: nickname, avatarurl, mail, phone, gender, sign, birth, ext are allowed');
      }
    } else if (Object.prototype.toString.call(params) === '[object Object]') {
      configurableKey.forEach(function (item) {
        if (configurableKey.includes(item) &&
        // @ts-ignore
        params[item] !== undefined) {
          // @ts-ignore
          param[item] = params[item];
        }
      });
    } else {
      throw new Error('illegal params');
    }
  } else {
    if (typeof params === 'string') {
      if (configurableKey.includes(params)) {
        param = params + '=' + value;
      } else {
        throw new Error('illegal key, only these keys: nickname, avatarurl, mail, phone, gender, sign, birth, ext are allowed');
      }
    } else if (Object.prototype.toString.call(params) === '[object Object]') {
      var formBody_1 = [];
      configurableKey.forEach(function (item) {
        if (configurableKey.includes(item) && params[item] !== undefined) {
          var encodedKey = encodeURIComponent(item);
          // @ts-ignore
          var encodedValue = encodeURIComponent(params[item]);
          formBody_1.push(encodedKey + '=' + encodedValue);
        }
      });
      param = formBody_1.join('&');
    } else {
      throw new Error('illegal params');
    }
  }
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/user/").concat(this.user),
    type: 'PUT',
    data: param,
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/x-www-form-urlencoded'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call updateOwnUserInfo', params);
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.UPDATE_USER_INFO);
}
/**
 * Modifies the user's attributes.
 *
 * ```typescript
 * connection.updateUserInfo({nickname: 'Tom', avatarurl: 'avatarurl', mail: 'abc@gmail,com', ext: JSON.stringify({hobby: 'football'})})
 *
 * connection.updateUserInfo('nickname', 'Tom')
 * ```
 */
/**
 * 修改用户属性。
 * ```typescript
 * connection.updateUserInfo({nickname: 'Tom', avatarurl: 'avatarurl', mail: 'abc@gmail,com', ext: JSON.stringify({hobby: 'football'})})
 *
 * connection.updateUserInfo('nickname', 'Tom')
 * ```
 */
var updateUserInfo = updateOwnUserInfo;
/**
 * Queries the user attributes.
 *
 * ```typescript
 * connection.fetchUserInfoById('user1') | fetchUserInfoById(['user1', 'user2'])
 * ```
 */
/**
 * 查询用户属性。
 *
 * ```typescript
 * connection.fetchUserInfoById('user1') | fetchUserInfoById(['user1', 'user2'])
 * ```
 */
function fetchUserInfoById( /** The array of IDs of users or user ID to query.  */
/** 要查询用户的ID。 */
userId, /** User properties to query. If the parameter is blank, query all. */
/** 要查询的用户属性，默认查询全部。 */
properties) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var configurableKey = ['nickname', 'avatarurl', 'mail', 'phone', 'gender', 'sign', 'birth', 'ext'];
  var targets = [];
  var querykeys = [];
  if (typeof userId === 'string') {
    targets = [userId];
  } else if (Object.prototype.toString.call(userId) === '[object Array]') {
    targets = userId;
  } else {
    throw new Error('illegal params');
  }
  if (typeof properties === 'string') {
    querykeys = [properties];
  } else if (properties && Object.prototype.toString.call(properties) === '[object Array]') {
    querykeys = properties;
  } else {
    querykeys = configurableKey;
  }
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/metadata/user/get"),
    type: 'POST',
    data: JSON.stringify({
      targets: targets,
      properties: querykeys
    }),
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call fetchUserInfoById', userId);
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.GET_USER_INFO);
}
/**
 * Changes the nickname shown when the message push notification is received. This nickname is specified during user registration and it's not the same as the nickname attribute of the user.
 *
 * ```typescript
 * connection.updateCurrentUserNick('Tom')
 * ```
 */
/**
 * 修改收到推送消息时显示的昵称。该昵称在用户注册时设置。不属于用户属性。
 *
 * ```typescript
 * connection.updateCurrentUserNick('Tom')
 * ```
 */
function updateCurrentUserNick( /** The nickname shown when a message push notification is received. */
/** 收到消息推送通知时显示的昵称。 */
nick) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user),
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify({
      nickname: nick
    }),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call updateCurrentUserNick', nick);
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts);
}
// 通过声网 token 换取 chat token(暂时没对外)
function getChatToken(agoraToken) {
  if (typeof agoraToken !== 'string' || agoraToken === '') {
    throw Error('Invalid parameter: "agoraToken"');
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName;
  var data = {
    grant_type: 'agora'
  };
  var opts = {
    url: this.apiUrl + '/' + orgName + '/' + appName + '/token',
    dataType: 'json',
    type: 'POST',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + agoraToken,
      'Content-Type': 'application/json'
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call getChatToken', agoraToken);
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.SDK_INTERNAL);
}
/**
 * @hidden
 * @deprecated Use {@link getHistoryMessages} instead.
 * Gets the message history.
 *
 * ```typescript
 * connection.fetchHistoryMessages({queue:'user1', count: 20})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link getHistoryMessages} 代替。
 * 获取对话历史消息。
 *
 * ```typescript
 * connection.fetchHistoryMessages({queue:'user1', count: 20})
 * ```
 */
function fetchHistoryMessages(options) {
  var _this = this;
  return new Promise(function (resolve, reject) {
    if (!options.queue) {
      throw Error('Invalid parameter: "specified"');
    }
    if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(_this)) {
      var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
        message: 'appkey or token error'
      });
      return Promise.reject(error);
    }
    function _readCacheMessages(options) {
      var _this = this;
      var count = options.count || 20;
      _fetchMessages.call(this, {
        count: count,
        isGroup: options.isGroup ? true : false,
        queue: options.queue,
        start: options.start,
        format: options.format,
        success: function success(data) {
          var length = data.msgs.length;
          if (length >= count || data.is_last) {
            // var result = this._utils.reverse(data.msgs.splice(0, count))
            var result = data.msgs.splice(0, count).reverse();
            options.success && options.success(result);
            resolve(result);
          } else {
            _readCacheMessages.call(_this, __assign(__assign({}, options), {
              start: null
            }));
          }
        },
        fail: function fail(err) {
          reject(err);
          options.fail && options.fail(err);
        }
      });
    }
    _readCacheMessages.call(_this, options);
    _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call fetchHistoryMessages', options);
  });
}
function _fetchMessages(options) {
  var _this = this;
  var queue = options.queue;
  var _dataQueue = this.mr_cache[queue] || (this.mr_cache[queue] = {
    msgs: []
  });
  var userId = this.context.userId;
  var start = options.start || -1;
  // 无历史消息或者缓存消息足够不再加载
  var count = options.count || 20;
  if (_dataQueue.msgs.length >= count || _dataQueue.is_last) {
    typeof options.success === 'function' && options.success(_dataQueue);
    return;
  }
  // 根据上一次拉取返回的last_key 进行本次消息拉取
  if (_dataQueue && _dataQueue.next_key) {
    start = _dataQueue.next_key;
  }
  if (options.start) {
    start = options.start;
  }
  var suffix = options.isGroup ? '@conference.easemob.com' : '@easemob.com';
  var data = {
    queue: queue + suffix,
    start: start,
    end: -1
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName;
  var suc = function suc(res) {
    var data = res === null || res === void 0 ? void 0 : res.data;
    if (!res.data.msgs) {
      typeof options.success === 'function' && options.success(_dataQueue);
      _dataQueue.is_last = true;
      _dataQueue.next_key = '';
      return;
    }
    var msgs = data.msgs;
    var length = msgs.length;
    _dataQueue.is_last = data.is_last;
    _dataQueue.next_key = data.next_key;
    var _parseMeta = function _parseMeta(meta) {
      var arr = [];
      meta = Base64__WEBPACK_IMPORTED_MODULE_26___default().atob(meta);
      for (var i = 0, j = meta.length; i < j; ++i) {
        arr.push(meta.charCodeAt(i));
      }
      //var tmpUint8Array = new Uint8Array(arr);
      var CommSyncDLMessage = _this.context.root.lookup('easemob.pb.Meta');
      CommSyncDLMessage = CommSyncDLMessage.decode(arr);
      var status = {
        errorCode: 0,
        reason: ''
      };
      if (CommSyncDLMessage.ns === 1) {
        var thirdMessage = _handleMessages_handleChatMsg__WEBPACK_IMPORTED_MODULE_24__["default"].call(_this, CommSyncDLMessage, status, true, options.format);
        return thirdMessage;
      }
    };
    for (var i = 0; i < length; i++) {
      var msgObj = _parseMeta(msgs[i].msg);
      // msgObj = _parseMsgMeta(msgObj);
      msgObj && _dataQueue.msgs.push(msgObj);
    }
    typeof options.success === 'function' && options.success(_dataQueue);
  };
  var error = function error(res) {
    if (res.error && res.error_description) {
      var error_3 = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.WEBIM_CONNCTION_AJAX_ERROR,
        message: 'fetch history messages error',
        data: res
      });
      _this.onError && _this.onError(error_3);
    }
  };
  var opts = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/messageroaming"),
    dataType: 'json',
    type: 'POST',
    headers: {
      Authorization: 'Bearer ' + this.token,
      'Content-Type': 'application/json'
    },
    data: JSON.stringify(data),
    success: suc,
    error: error
  };
  _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts, _dataReport_types__WEBPACK_IMPORTED_MODULE_28__.OperationName.GET_HISTORY_MSG)["catch"](function (e) {
    typeof options.fail === 'function' && options.fail(e);
  });
}
/**
 * Gets the message history.
 *
 * ```typescript
 * connection.getHistoryMessages({targetId:'targetId',chatType:'groupChat', pageSize: 20})
 * ```
 */
/**
 * 获取对话历史消息。
 *
 * ```typescript
 * connection.getHistoryMessages({targetId:'targetId',chatType:'groupChat', pageSize: 20})
 * ```
 */
function getHistoryMessages(options) {
  var _this = this;
  return new Promise(function (resolve, reject) {
    var targetId = options.targetId,
      _a = options.cursor,
      cursor = _a === void 0 ? -1 : _a,
      _b = options.pageSize,
      pageSize = _b === void 0 ? 20 : _b,
      chatType = options.chatType,
      searchDirection = options.searchDirection,
      _c = options.searchOptions,
      searchOptions = _c === void 0 ? {} : _c;
    var _d = searchOptions.msgTypes,
      msgTypes = _d === void 0 ? [] : _d,
      _e = searchOptions.startTime,
      startTime = _e === void 0 ? null : _e,
      _f = searchOptions.endTime,
      endTime = _f === void 0 ? null : _f,
      _g = searchOptions.from,
      from = _g === void 0 ? null : _g;
    if (typeof targetId !== 'string' || targetId === '') {
      throw Error('"Invalid parameter": "targetId"');
    }
    if (from && typeof from !== 'string') {
      throw Error('"Invalid parameter": "searchOptions.from"');
    }
    if (msgTypes && !Array.isArray(msgTypes)) {
      throw Error('"Invalid parameter": "searchOptions.msgTypes"');
    }
    if (startTime && typeof startTime !== 'number') {
      throw Error('"Invalid parameter": "searchOptions.startTime"');
    }
    if (endTime && typeof startTime !== 'number') {
      throw Error('"Invalid parameter": "searchOptions.endTime"');
    }
    if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(_this)) {
      var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
        message: 'appkey or token error'
      });
      return reject(error);
    }
    var _h = _this.context,
      orgName = _h.orgName,
      appName = _h.appName,
      userId = _h.userId;
    var suffix = options.chatType === 'groupChat' ? '@conference.easemob.com' : '@easemob.com';
    var data = {
      queue: "".concat(targetId).concat(suffix),
      start: cursor,
      pull_number: pageSize,
      is_positive: searchDirection === 'down' ? true : false,
      msgType: msgTypes.join(',') || '',
      end: -1,
      startTime: startTime,
      endTime: endTime,
      userId: chatType === 'singleChat' ? null : from
    };
    var suc = function suc(res) {
      var _a;
      var data = res === null || res === void 0 ? void 0 : res.data;
      var msgs = data.msgs || [];
      var _parseMeta = function _parseMeta(meta) {
        var arr = [];
        meta = Base64__WEBPACK_IMPORTED_MODULE_26___default().atob(meta);
        for (var i = 0, j = meta.length; i < j; ++i) {
          arr.push(meta.charCodeAt(i));
        }
        var CommSyncDLMessage = _this.context.root.lookup('easemob.pb.Meta');
        CommSyncDLMessage = CommSyncDLMessage.decode(arr);
        var status = {
          errorCode: 0,
          reason: ''
        };
        if (CommSyncDLMessage.ns === 1) {
          var thirdMessage = _handleMessages_handleChatMsg__WEBPACK_IMPORTED_MODULE_24__["default"].call(_this, CommSyncDLMessage, status, true, true //是否按照SDK V4.0格式化消息，默认true
          );

          return thirdMessage;
        }
      };
      var formatMsgs = [];
      for (var i = 0; i < msgs.length; i++) {
        var msgObj = _parseMeta(msgs[i].msg);
        msgObj && formatMsgs.push(msgObj);
      }
      data.msgs = formatMsgs;
      var response = {
        cursor: data.next_key,
        messages: formatMsgs
      };
      (_a = options.success) === null || _a === void 0 ? void 0 : _a.call(options, response);
      resolve(response);
    };
    var opts = {
      url: "".concat(_this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/messageroaming"),
      dataType: 'json',
      type: 'POST',
      headers: {
        Authorization: 'Bearer ' + _this.token,
        'Content-Type': 'application/json'
      },
      data: JSON.stringify(data),
      success: suc,
      error: options.fail
    };
    _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(_this, opts)["catch"](function (e) {
      reject(e);
    });
    _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call getHistoryMessages', options);
  });
}
/**
 * Adds a friend.
 *
 * ```typescript
 * connection.addContact('user1', 'I am Bob')
 * ```
 */
/**
 * 添加好友。
 *
 * ```typescript
 * connection.addContact('user1', 'I am Bob')
 * ```
 */
function addContact( /** The user ID of the other party. */
/** 对方的用户 ID。 */
to, /** The validation message. */
/** 验证消息。*/
message) {
  var id = this.getUniqueId();
  var options = {
    id: id,
    to: to,
    message: message
  };
  _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__["default"].operatRoster.call(this, options, 'add');
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call addContact', options);
}
/**
 * @hidden
 * @deprecated Use {@link deleteContact} instead.
 * Deletes the contact.
 *
 * ```typescript
 * connection.removeRoster('user1')
 * ```
 */
/**
 *  @hidden
 *  @deprecated 已废弃，请用 {@link deleteContact} 代替。
 *  删除指定好友。
 *
 * ```typescript
 * connection.removeRoster('user1')
 * ```
 */
var removeRoster = deleteContact;
/**
 * Deletes the contact.
 *
 * ```typescript
 * connection.deleteContact('user1')
 * ```
 */
/**
 *  删除指定好友。
 *
 * ```typescript
 * connection.deleteContact('user1')
 * ```
 */
function deleteContact( /** The user ID of the other party. */
/** 对方的用户 ID。 */
to) {
  var id = this.getUniqueId();
  var options = {
    id: id,
    to: to
  };
  _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__["default"].operatRoster.call(this, options, 'remove');
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call deleteContact', options);
}
/**
 * @hidden
 * @deprecated Use {@link acceptContactInvite} instead.
 * Accepts a friend request.
 *
 * ```typescript
 * connection.acceptInvitation('user1')
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link acceptContactInvite} 代替。
 * 接受好友申请。
 *
 * ```typescript
 * connection.acceptInvitation('user1')
 * ```
 */
function acceptInvitation( /** The user ID of the other party. */
/** 对方的用户 ID。 */
to) {
  var id = this.getUniqueId();
  var options = {
    id: id,
    to: to
  };
  _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__["default"].operatRoster.call(this, options, 'accept');
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call acceptInvitation', options);
}
/**
 * Accepts a friend request.
 *
 * ```typescript
 * connection.acceptContactInvite('user1')
 * ```
 */
/**
 * 接受好友申请。
 *
 * ```typescript
 * connection.acceptContactInvite('user1')
 * ```
 */
var acceptContactInvite = acceptInvitation;
/**
 * @hidden
 * @deprecated Use {@link declineContactInvite} instead.
 * Declines a friend request.
 *
 * ```typescript
 * connection.declineInvitation('user1')
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link declineContactInvite} 代替。
 * 拒绝好友申请。
 *
 * ```typescript
 * connection.declineInvitation('user1')
 * ```
 */
function declineInvitation( /** The user ID of the other party. */
/** 对方的用户 ID。 */
to) {
  var id = this.getUniqueId();
  var options = {
    id: id,
    to: to
  };
  _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__["default"].operatRoster.call(this, options, 'decline');
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call declineContactInvite', options);
}
/**
 * Declines a friend request.
 *
 * ```typescript
 * connection.declineContactInvite('user1')
 * ```
 */
/**
 * 拒绝好友申请。
 *
 * ```typescript
 * connection.declineContactInvite('user1')
 * ```
 */
var declineContactInvite = declineInvitation;
/**
 * @hidden
 * @deprecated Use {@link addUsersToBlocklist} instead.
 * Adds a contact to the blocklist.
 *
 * ```typescript
 * connection.addToBlackList({name: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link addUsersToBlocklist} 代替。
 * 添加联系人至黑名单。
 *
 * ```typescript
 * connection.addToBlackList({name: 'user1'})
 * ```
 */
function addToBlackList(options) {
  _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__["default"].operatRoster.call(this, {
    to: options.name
  }, 'ban');
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call addUsersToBlocklist', options);
}
/**
 * @hidden
 * @deprecated
 */
var addUsersToBlacklist = addToBlackList;
/**
 * Adds a contact to the blocklist.
 *
 * ```typescript
 * connection.addUsersToBlocklist({name: 'user1'})
 * ```
 */
/**
 * 添加联系人至黑名单。
 *
 * ```typescript
 * connection.addUsersToBlocklist({name: 'user1'})
 * ```
 */
var addUsersToBlocklist = addToBlackList;
/**
 * @hidden
 * @deprecated Use {@link removeUserFromBlackList} instead.
 *
 * Removes contacts from the blocklist.
 *
 * ```typescript
 * connection.removeFromBlackList({name: 'user1'})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃，请用 {@link removeUserFromBlackList} 代替。
 *
 * 将联系人从黑名单移除。
 *
 * ```typescript
 * connection.removeFromBlackList({name: 'user1'})
 * ```
 */
function removeFromBlackList(options) {
  _handleMessages_handleRosterMsg__WEBPACK_IMPORTED_MODULE_25__["default"].operatRoster.call(this, {
    to: options.name
  }, 'allow');
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call removeUserFromBlocklist', options);
}
/**
 * @hidden
 * @deprecated
 */
var removeUserFromBlackList = removeFromBlackList;
/**
 * Removes contacts from the blocklist.
 *
 * ```typescript
 * connection.removeUserFromBlocklist({name: 'user1'})
 * ```
 */
/**
 * 将联系人从黑名单中移除。
 *
 * ```typescript
 * connection.removeUserFromBlocklist({name: 'user1'})
 * ```
 */
var removeUserFromBlocklist = removeFromBlackList;
/**
 * Recalls a message.
 *
 * ```typescript
 * connection.recallMessage({mid: 'messageId', to: 'user1', type: 'singleChat'})
 * ```
 */
/**
 * 撤回消息。
 *
 * ```typescript
 * connection.recallMessage({mid: 'messageId', to: 'user1', type: 'singleChat'})
 * ```
 */
function recallMessage(option) {
  var id = this.getUniqueId();
  var params = {
    id: id,
    to: option.to
  };
  this._msgHash[id] = __assign({}, params);
  var chatType = '';
  if (typeof option.chatType !== 'undefined') {
    chatType = option.chatType;
  } else if (typeof option.type !== 'undefined') {
    chatType = option.type === 'chat' ? 'singleChat' : option.type;
  }
  var messageOption = {
    id: id,
    type: 'recall',
    chatType: chatType,
    ackId: option.mid,
    to: option.to,
    isChatThread: option.isChatThread || false,
    success: option.success,
    fail: option.fail
  };
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call recallMessage', option);
  return this.mSync.send(messageOption, this);
}
/**
 * Modify a message.
 *
 * ```typescript
 * connection.modifyMessage({messageId: 'messageId', message: message })
 * ```
 */
/**
 * 变更消息。
 *
 * ```typescript
 * connection.modifyMessage({messageId: 'messageId', message:message })
 * ```
 */
function modifyMessage(option) {
  var _a = option || {},
    messageId = _a.messageId,
    modifiedMessage = _a.modifiedMessage;
  _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call modifyMessage', messageId, modifiedMessage);
  if (messageId === '') {
    throw Error('Invalid parameter: "messageId"');
  }
  if (modifiedMessage.type !== 'txt') {
    throw Error('Invalid parameter: "modifiedMessage.type"');
  }
  return this.mSync.send(__assign({
    editMessageId: messageId
  }, modifiedMessage));
}
/**
 * Adds a reaction to the message.
 *
 * ```typescript
 * connection.addReaction({messageId: 'messageId', action: 'action'})
 * ```
 */
/**
 * 添加消息 Reaction。
 *
 * ```typescript
 * connection.addReaction({messageId: 'messageId', reaction: 'reaction'})
 * ```
 */
function addReaction(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, orgName, appName, accessToken, reaction, messageId, actionData, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (typeof params.messageId !== 'string' || !params.messageId) {
            throw Error("Invalid parameter messageId: ".concat(params.messageId));
          } else if (typeof params.reaction !== 'string' || !params.reaction) {
            throw Error("Invalid parameter reaction: ".concat(params.reaction));
          } else if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, accessToken = _a.accessToken;
          reaction = params.reaction, messageId = params.messageId;
          actionData = {
            msgId: messageId,
            message: reaction
          };
          options = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/reaction/user/").concat(this.user),
            type: 'POST',
            data: JSON.stringify(actionData),
            dataType: 'json',
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            }
          };
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * Removes a reaction from a message.
 *
 * ```typescript
 * connection.deleteReaction({reactionId: 'reactionId'})
 * ```
 */
/**
 * 删除消息的 Reaction。
 *
 * ```typescript
 * connection.deleteReaction({messageId: 'messageId', reaction: 'reaction'})
 * ```
 */
function deleteReaction(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, orgName, appName, accessToken, messageId, reaction, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (typeof params.reaction !== 'string' || !params.reaction) {
            throw Error("Invalid parameter reactionId: ".concat(params.reaction));
          } else if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, accessToken = _a.accessToken;
          messageId = params.messageId, reaction = params.reaction;
          options = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/reaction/user/").concat(this.user, "?msgId=").concat(messageId, "&message=").concat(reaction),
            type: 'DELETE',
            dataType: 'json',
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            }
          };
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * @hidden
 * @deprecated
 */
function getReactionList(params) {
  if (typeof params.chatType !== 'string' || !params.chatType) {
    throw Error("Invalid parameter chatType: ".concat(params.chatType));
  } else if (!params.messageId) {
    throw Error("Invalid parameter messageId: ".concat(params.messageId));
  } else if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var chatType = params.chatType,
    messageId = params.messageId,
    groupId = params.groupId;
  var msgType = chatType === 'singleChat' ? 'chat' : 'groupchat';
  var queryData = {
    msgIdList: typeof messageId === 'string' ? [messageId] : messageId,
    msgType: msgType,
    groupId: groupId || null
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/reaction/user/").concat(this.user),
    type: 'GET',
    data: queryData,
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, options).then(function (res) {
    var data = res.data;
    data === null || data === void 0 ? void 0 : data.forEach(function (item) {
      item === null || item === void 0 ? void 0 : item.reactionList.forEach(function (reaction) {
        reaction.isAddedBySelf = reaction.state;
        delete reaction.state;
        delete reaction.reactionId;
      });
    });
    return res;
  });
}
/**
 * Gets the reaction list for the message.
 *
 * ```typescript
 * connection.getReactionlist({chatType: 'chatType', messageId: 'messageId'})
 * ```
 */
/**
 * 获取消息的 Reaction 列表。
 *
 * ```typescript
 * connection.getReactionlist({chatType: 'chatType', messageId: 'messageId'})
 * ```
 */
var getReactionlist = getReactionList;
/**
 * Gets the details of a reaction.
 *
 * ```typescript
 * getReactionDetail({messageId: 'messageId', reaction: 'reaction', cursor: '', pageSize: 20})
 * ```
 */
/**
 * 获取 Reaction 详情。
 *
 * ```typescript
 * getReactionDetail({messageId: 'messageId', reaction: 'reaction', cursor: '', pageSize: 20})
 * ```
 */
function getReactionDetail(params) {
  if (typeof params.reaction !== 'string' || !params.reaction) {
    throw Error("Invalid parameter reaction: ".concat(params.reaction));
  } else if (typeof params.messageId !== 'string' || !params.messageId) {
    throw Error("Invalid parameter messageId: ".concat(params.messageId));
  } else if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var cursor = params.cursor,
    pageSize = params.pageSize,
    messageId = params.messageId,
    reaction = params.reaction;
  var queryData = {
    msgId: messageId,
    message: reaction,
    currentPage: cursor || null,
    pageSize: pageSize || 20
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/reaction/user/").concat(this.user, "/detail"),
    type: 'GET',
    data: queryData,
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, options).then(function (res) {
    res.data.isAddedBySelf = res.data.state;
    delete res.data.state;
    delete res.data.reactionId;
    return res;
  });
}
/**
 * Reports a message.
 *
 * ```typescript
 * reportMessage()
 * ```
 */
/**
 * 举报消息。
 *
 * ```typescript
 * reportMessage()
 * ```
 */
function reportMessage(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, orgName, appName, accessToken, reportType, reportReason, messageId, reportData, url, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (typeof params.reportType !== 'string' || !params.reportType) {
            throw Error("Invalid parameter reportType: ".concat(params.reportType));
          } else if (typeof params.messageId !== 'string' || !params.messageId) {
            throw Error("Invalid parameter messageId: ".concat(params.messageId));
          } else if (typeof params.reportReason !== 'string' || !params.reportReason) {
            throw Error("Invalid parameter messageId: ".concat(params.reportReason));
          } else if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, accessToken = _a.accessToken;
          reportType = params.reportType, reportReason = params.reportReason, messageId = params.messageId;
          reportData = {
            username: this.user,
            reportType: reportType,
            reportReason: reportReason
          };
          url = "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/user/").concat(this.user, "/moderation/report/message/").concat(messageId);
          options = {
            url: url,
            type: 'POST',
            data: JSON.stringify(reportData),
            dataType: 'json',
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            }
          };
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * Delete roaming messages.
 *
 * ```typescript
 * connection.removeHistoryMessages({targetId: 'userId', chatType: 'singleChat', beforeTimeStamp: Date.now()})
 *
 * connection.removeHistoryMessages({targetId: 'userId', chatType: 'singleChat', messageIds: ['messageId']})
 * ```
 */
/**
 * 单向删除漫游消息。
 *
 * ```typescript
 * connection.removeHistoryMessages({targetId: 'userId', chatType: 'singleChat', beforeTimeStamp: Date.now()})
 *
 * connection.removeHistoryMessages({targetId: 'userId', chatType: 'singleChat', messageIds: ['messageId']})
 * ```
 */
function removeHistoryMessages(options) {
  var _a;
  return __awaiter(this, void 0, void 0, function () {
    var error, _b, orgName, appName, userId, deleteType, chatTypeApi, url, opts;
    return __generator(this, function (_c) {
      switch (_c.label) {
        case 0:
          if (typeof options.targetId !== 'string' || options.targetId === '') {
            throw Error('"Invalid parameter targetId": ' + options.targetId);
          }
          if (!['singleChat', 'groupChat'].includes(options.chatType)) {
            throw Error('"Invalid parameter chatType": ' + options.chatType);
          }
          if (options.beforeTimeStamp && (typeof options.beforeTimeStamp !== 'number' || options.beforeTimeStamp < 0 || ((_a = options.beforeTimeStamp) === null || _a === void 0 ? void 0 : _a.toString().length) > 18)) {
            throw Error('"Invalid parameter beforeTimeStamp": ' + options.beforeTimeStamp);
          }
          if (options.messageIds && !(Array.isArray(options.messageIds) && options.messageIds.length > 0 && options.messageIds.length <= 20)) {
            throw Error('"Invalid parameter messageIds": ' + options.messageIds);
          }
          if (!options.messageIds && !options.beforeTimeStamp) {
            throw Error('messageIds or beforeTimeStamp field is required.');
          }
          if (!_utils__WEBPACK_IMPORTED_MODULE_20__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_22__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_21__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _b = this.context, orgName = _b.orgName, appName = _b.appName, userId = _b.userId;
          deleteType = options.chatType === 'singleChat' ? 'userId' : 'groupId';
          chatTypeApi = options.chatType === 'singleChat' ? 'chat' : 'group';
          url = options.messageIds ? "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/sdk/message/roaming/").concat(chatTypeApi, "/user/").concat(userId, "?").concat(deleteType, "=").concat(options.targetId, "&msgIdList=").concat(options.messageIds, "&resource=").concat(this.clientResource) : "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/sdk/message/roaming/").concat(chatTypeApi, "/user/").concat(userId, "/time?").concat(deleteType, "=").concat(options.targetId, "&delTime=").concat(options.beforeTimeStamp, "&&resource=").concat(this.clientResource);
          opts = {
            url: url,
            dataType: 'json',
            type: 'DELETE',
            headers: {
              Authorization: 'Bearer ' + this.token,
              'Content-Type': 'application/json'
            }
          };
          _logger__WEBPACK_IMPORTED_MODULE_27__.logger.debug('Call removeHistoryMessages', options);
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_23__.ajax.call(this, opts)];
        case 1:
          _c.sent();
          return [2 /*return*/];
      }
    });
  });
}



/***/ }),

/***/ "./src/apis/presenceApi.ts":
/*!*********************************!*\
  !*** ./src/apis/presenceApi.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPresenceStatus": function() { return /* binding */ getPresenceStatus; },
/* harmony export */   "getSubscribedPresenceList": function() { return /* binding */ getSubscribedPresenceList; },
/* harmony export */   "getSubscribedPresencelist": function() { return /* binding */ getSubscribedPresencelist; },
/* harmony export */   "publishPresence": function() { return /* binding */ publishPresence; },
/* harmony export */   "subscribePresence": function() { return /* binding */ subscribePresence; },
/* harmony export */   "unsubscribePresence": function() { return /* binding */ unsubscribePresence; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");










/**
 * Presence contains APIs for presence operations.
 * @module Presence
 */
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





/**
 * Publishes a custom presence state.
 *
 * ```typescript
 * connection.publishPresence({description: 'music'})
 * ```
 */
/**
 * 发布自定义在线状态。
 *
 * ```typescript
 * connection.publishPresence({description: 'music'})
 * ```
 */
function publishPresence(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, accessToken, orgName, appName, userId, clientResource, data, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (typeof params.description !== 'string') {
            throw Error('Invalid parameter: "description"');
          }
          if (!_utils__WEBPACK_IMPORTED_MODULE_11__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_12__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, accessToken = _a.accessToken, orgName = _a.orgName, appName = _a.appName, userId = _a.userId;
          clientResource = this.context.jid.clientResource;
          data = {
            ext: params.description
          };
          options = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/presence/").concat(clientResource, "/1"),
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(data),
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            },
            success: params.success,
            error: params.error
          };
          _logger__WEBPACK_IMPORTED_MODULE_14__.logger.debug('Call publishPresence:', params);
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_10__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * Subscribes to a user's presence states. If the subscription succeeds, the subscriber will receive the callback when the user's presence state changes.
 *
 * ```typescript
 * connection.subscribePresence({usernames: ['user1','user2'], expiry: 10000})
 * ```
 */
/**
 * 订阅指定用户的在线状态。订阅成功后，在线状态变更时订阅者会收到回调通知。
 *
 * ```typescript
 * connection.subscribePresence({usernames: ['user1','user2'], expiry: 10000})
 * ```
 */
function subscribePresence(params) {
  if (!Array.isArray(params.usernames)) {
    throw Error('Invalid parameter: "usernames"');
  }
  if (!params.usernames.length) {
    throw Error('"usernames" can not be empty');
  }
  if (typeof params.expiry !== 'number') {
    throw Error('Invalid parameter: "expiry"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_11__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_12__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId,
    accessToken = _a.accessToken;
  var data = {
    usernames: params.usernames
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/presence/").concat(params.expiry),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_14__.logger.debug('Call subscribePresence:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_10__.ajax.call(this, options).then(function (res) {
    res.data = {
      result: res === null || res === void 0 ? void 0 : res.result
    };
    return res;
  });
}
/**
 * Unsubscribes from a user's presence states.
 *
 * ```typescript
 * connection.unsubscribePresence({usernames: ['user1','user2']})
 * ```
 */
/**
 * 取消订阅指定用户的在线状态。
 *
 * ```typescript
 * connection.unsubscribePresence({usernames: ['user1','user2']})
 * ```
 */
function unsubscribePresence(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, orgName, appName, userId, accessToken, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (!Array.isArray(params.usernames)) {
            throw Error('Invalid parameter: "usernames"');
          }
          if (!params.usernames.length) {
            throw Error('"usernames" can not be empty');
          }
          if (!_utils__WEBPACK_IMPORTED_MODULE_11__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_12__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, userId = _a.userId, accessToken = _a.accessToken;
          options = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/presence"),
            type: 'DELETE',
            dataType: 'json',
            data: JSON.stringify(params.usernames),
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            },
            success: params.success,
            error: params.error
          };
          _logger__WEBPACK_IMPORTED_MODULE_14__.logger.debug('Call unsubscribePresence:', params);
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_10__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * @hidden
 * @deprecated Use {@link getSubscribedPresencelist} instead.
 * Uses pagination to get a list of users whose presence states you have subscribed to.
 *
 * ```typescript
 * connection.getSubscribedPresenceList({usernames: ['user1','user2']})
 * ```
 */
/**
 * @hidden
 * @deprecated 已废弃。请用 {@link getSubscribedPresencelist} 代替。
 * 分页查询当前用户订阅了哪些用户的在线状态。
 *
 * ```typescript
 * connection.getSubscribedPresenceList({usernames: ['user1','user2']})
 * ```
 */
function getSubscribedPresenceList(params) {
  if (typeof params.pageNum !== 'number' || typeof params.pageSize !== 'number') {
    throw Error('Invalid parameter: "pageNum or pageSize"');
  }
  if (params.pageNum < 0 || params.pageSize < 0) {
    throw Error('"pageNum" should >= 0 and "pageSize" should >= 0');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_11__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_12__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId,
    accessToken = _a.accessToken;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/presence/sublist?pageNum=").concat(params.pageNum, "&pageSize=").concat(params.pageSize),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_14__.logger.debug('Call getSubscribedPresenceList:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_10__.ajax.call(this, options).then(function (res) {
    res.data = {
      result: res === null || res === void 0 ? void 0 : res.result
    };
    return res;
  });
}
/**
 * Uses pagination to get a list of users whose presence states you have subscribed to.
 *
 * ```typescript
 * connection.getSubscribedPresencelist({usernames: ['user1','user2']})
 * ```
 */
/**
 * 分页查询当前用户订阅了哪些用户的在线状态。
 *
 * ```typescript
 * connection.getSubscribedPresencelist({usernames: ['user1','user2']})
 * ```
 */
var getSubscribedPresencelist = getSubscribedPresenceList;
/**
 * Gets the current presence state of users.
 *
 * ```typescript
 * connection.getPresenceStatus({usernames: ['user1','user2']})
 * ```
 */
/**
 * 查询指定用户的当前在线状态。
 *
 * ```typescript
 * connection.getPresenceStatus({usernames: ['user1','user2']})
 * ```
 */
function getPresenceStatus(params) {
  if (!Array.isArray(params.usernames)) {
    throw Error('Invalid parameter: "usernames"');
  }
  if (!params.usernames.length) {
    throw Error('"usernames" can not be empty');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_11__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_12__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var data = {
    usernames: params.usernames
  };
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId,
    accessToken = _a.accessToken;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/presence"),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_14__.logger.debug('Call getPresenceStatus:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_10__.ajax.call(this, options).then(function (res) {
    res.data = {
      result: res === null || res === void 0 ? void 0 : res.result
    };
    return res;
  });
}


/***/ }),

/***/ "./src/apis/silentModeApi.ts":
/*!***********************************!*\
  !*** ./src/apis/silentModeApi.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clearRemindTypeForConversation": function() { return /* binding */ clearRemindTypeForConversation; },
/* harmony export */   "getPushPerformLanguage": function() { return /* binding */ getPushPerformLanguage; },
/* harmony export */   "getSilentModeForAll": function() { return /* binding */ getSilentModeForAll; },
/* harmony export */   "getSilentModeForConversation": function() { return /* binding */ getSilentModeForConversation; },
/* harmony export */   "getSilentModeForConversations": function() { return /* binding */ getSilentModeForConversations; },
/* harmony export */   "setPushPerformLanguage": function() { return /* binding */ setPushPerformLanguage; },
/* harmony export */   "setSilentModeForAll": function() { return /* binding */ setSilentModeForAll; },
/* harmony export */   "setSilentModeForConversation": function() { return /* binding */ setSilentModeForConversation; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.array.join.js */ "./node_modules/core-js/modules/es.array.join.js");
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");








/**
 *  SilentMode contains APIs for silent mode operations.
 * @module SilentMode
 */





/**
 * Set the DND Settings for the current login user.
 *
 * ```typescript
 * connection.setSilentModeForAll({options: {paramType: 0, remindType: 'ALL'}})
 * ```
 */
/**
 * 设置当前登录用户的免打扰设置。
 *
 * ```typescript
 * connection.setSilentModeForAll({options: {paramType: 0, remindType: 'ALL'}})
 * ```
 */
function setSilentModeForAll(params) {
  if (!(params.options instanceof Object)) {
    throw Error('Invalid parameter: "options"');
  }
  var paramType = params.options.paramType;
  if (typeof paramType !== 'number' || paramType < 0 || paramType > 2) {
    throw Error('Invalid parameter: "options of paramType"');
  }
  if (paramType === 0) {
    var remindType = params.options.remindType;
    if (typeof remindType !== 'string') {
      throw Error('Invalid parameter: "options of remindType"');
    }
  } else if (paramType === 1) {
    var duration = params.options.duration;
    if (typeof duration !== 'number') {
      throw Error('Invalid parameter: "options of duration"');
    }
  } else if (paramType === 2) {
    var _a = params.options,
      startTime = _a.startTime,
      endTime = _a.endTime;
    if (!(startTime instanceof Object) || !Object.keys(startTime).length) {
      throw Error('Invalid parameter: "options of startTime"');
    }
    if (!startTime.hours || typeof startTime.hours !== 'number' || !startTime.minutes || typeof startTime.minutes !== 'number') {
      throw Error('Invalid parameter: "options of startTime of hours or minutes"');
    }
    if (!(endTime instanceof Object) || !Object.keys(endTime).length) {
      throw Error('Invalid parameter: "options of endTime"');
    }
    if (!endTime.hours || typeof endTime.hours !== 'number' || !endTime.minutes || typeof endTime.minutes !== 'number') {
      throw Error('Invalid parameter: "options of endTime of hours or minutes"');
    }
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _b = this.context,
    accessToken = _b.accessToken,
    orgName = _b.orgName,
    appName = _b.appName,
    userId = _b.userId;
  var data = {};
  switch (paramType) {
    case 0:
      var remindType = params.options.remindType;
      data = {
        type: remindType
      };
      break;
    case 1:
      var duration = params.options.duration;
      data = {
        ignoreDuration: duration
      };
      break;
    case 2:
      var _c = params.options,
        startTime = _c.startTime,
        endTime = _c.endTime;
      data = {
        ignoreInterval: "".concat(startTime.hours, ":").concat(startTime.minutes, "-").concat(endTime.hours, ":").concat(endTime.minutes)
      };
      break;
    default:
      break;
  }
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/user/").concat(userId),
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call setSilentModeForAll:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Get the DND Settings of the current user.
 *
 * ```typescript
 * connection.getSilentModeForAll()
 * ```
 */
/**
 * 获取当前用户的免打扰设置。
 *
 * ```typescript
 * connection.getSilentModeForAll()
 * ```
 */
function getSilentModeForAll(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    accessToken = _a.accessToken,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/user/").concat(userId),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params === null || params === void 0 ? void 0 : params.success,
    error: params === null || params === void 0 ? void 0 : params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call getSilentModeForAll:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Set the DND of the session.
 *
 * ```typescript
 * connection.setSilentModeForConversation({conversationId: '100', type: 'singleChat', params: {paramType: 0, remindType: 'ALL'}})
 * ```
 */
/**
 * 设置会话的免打扰。
 *
 * ```typescript
 * connection.setSilentModeForConversation({conversationId: '100', type: 'singleChat', params: {paramType: 0, remindType: 'ALL'}})
 * ```
 */
function setSilentModeForConversation(params) {
  if (typeof params.conversationId !== 'string' || !params.conversationId) {
    throw Error('Invalid parameter: "conversationId"');
  }
  if (typeof params.type !== 'string' || !params.type) {
    throw Error('Invalid parameter: "type"');
  }
  if (!(params.options instanceof Object)) {
    throw Error('Invalid parameter: "options"');
  }
  var paramType = params.options.paramType;
  if (typeof paramType !== 'number' || paramType < 0 || paramType > 2) {
    throw Error('Invalid parameter: "options of paramType"');
  }
  if (paramType === 0) {
    var remindType = params.options.remindType;
    if (typeof remindType !== 'string') {
      throw Error('Invalid parameter: "options of remindType"');
    }
  } else if (paramType === 1) {
    var duration = params.options.duration;
    if (typeof duration !== 'number') {
      throw Error('Invalid parameter: "options of duration"');
    }
  } else if (paramType === 2) {
    var _a = params.options,
      startTime = _a.startTime,
      endTime = _a.endTime;
    if (!(startTime instanceof Object) || !Object.keys(startTime).length) {
      throw Error('Invalid parameter: "options of startTime"');
    }
    if (!startTime.hours || typeof startTime.hours !== 'number' || !startTime.minutes || typeof startTime.minutes !== 'number') {
      throw Error('Invalid parameter: "options of startTime of hours or minutes"');
    }
    if (!(endTime instanceof Object) || !Object.keys(endTime).length) {
      throw Error('Invalid parameter: "options of endTime"');
    }
    if (!endTime.hours || typeof endTime.hours !== 'number' || !endTime.minutes || typeof endTime.minutes !== 'number') {
      throw Error('Invalid parameter: "options of endTime of hours or minutes"');
    }
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _b = this.context,
    accessToken = _b.accessToken,
    orgName = _b.orgName,
    appName = _b.appName,
    userId = _b.userId;
  var type = 'chatgroup';
  var data = {};
  switch (paramType) {
    case 0:
      var remindType = params.options.remindType;
      data = {
        type: remindType
      };
      break;
    case 1:
      var duration = params.options.duration;
      data = {
        ignoreDuration: duration
      };
      break;
    case 2:
      var _c = params.options,
        startTime = _c.startTime,
        endTime = _c.endTime;
      data = {
        ignoreInterval: "".concat(startTime.hours, ":").concat(startTime.minutes, "-").concat(endTime.hours, ":").concat(endTime.minutes)
      };
      break;
    default:
      break;
  }
  if (params.type === 'singleChat') {
    type = 'user';
  }
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/").concat(type, "/").concat(params.conversationId),
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call setSilentModeForConversation:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Clear the setting of offline push notification type for the session.
 *
 * ```typescript
 * connection.clearRemindTypeForConversation({conversationId: '123', type: 'singleChat'})
 * ```
 */
/**
 * 清除会话的离线推送提醒类型设置。
 *
 * ```typescript
 * connection.clearRemindTypeForConversation({conversationId: '123', type: 'singleChat'})
 * ```
 */
function clearRemindTypeForConversation(params) {
  if (typeof params.conversationId !== 'string' || !params.conversationId) {
    throw Error('Invalid parameter: "conversationId"');
  }
  if (typeof params.type !== 'string' || !params.type) {
    throw Error('Invalid parameter: "type"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    accessToken = _a.accessToken,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId;
  var type = 'chatgroup';
  var data = {
    type: 'DEFAULT'
  };
  if (params.type === 'singleChat') {
    type = 'user';
  }
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/").concat(type, "/").concat(params.conversationId),
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call clearRemindTypeForConversation:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Gets the DND setting of the session.
 *
 * ```typescript
 * connection.getSilentModeForConversation({conversationId: 'conversationId', type: 'singleChat'})
 * ```
 */
/**
 * 获取会话的免打扰设置。
 *
 * ```typescript
 * connection.getSilentModeForConversation({conversationId: 'conversationId', type: 'singleChat'})
 * ```
 */
function getSilentModeForConversation(params) {
  if (typeof params.conversationId !== 'string' || !params.conversationId) {
    throw Error('Invalid parameter: "conversationId"');
  }
  if (typeof params.type !== 'string' || !params.type) {
    throw Error('Invalid parameter: "type"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    accessToken = _a.accessToken,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId;
  var type = 'chatgroup';
  if (params.type === 'singleChat') {
    type = 'user';
  }
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/").concat(type, "/").concat(params.conversationId),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call getSilentModeForConversation:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Obtain the DND Settings of specified sessions in batches.
 *
 * ```typescript
 * connection.getSilentModeForConversations({conversationList:[{id: 'userId', type: 'singleChat'}, {id: 'groupId', type: 'groupChat'}]})
 * ```
 */
/**
 * 批量获取指定会话的免打扰设置。(单次最多 20)
 *
 * ```typescript
 * connection.getSilentModeForConversations({conversationList:[{id: 'userId', type: 'singleChat'}, {id: 'groupId', type: 'groupChat'}]})
 * ```
 */
function getSilentModeForConversations(params) {
  if (!Array.isArray(params.conversationList)) {
    throw Error('Invalid parameter: "conversationList"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    accessToken = _a.accessToken,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId;
  var users = [];
  var groups = [];
  params.conversationList.forEach(function (item) {
    if (item.type === 'singleChat') {
      users.push(item.id);
    } else {
      groups.push(item.id);
    }
  });
  var usersId = users.length ? users.join(',') : '';
  var groupsId = groups.length ? groups.join(',') : '';
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification?user=").concat(usersId, "&group=").concat(groupsId),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call getSilentModeForConversations:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Set user push translation language.
 *
 * ```typescript
 * connection.setPushPerformLanguage({language: 'EU'})
 * ```
 */
/**
 * 设置用户推送翻译语言。
 *
 * ```typescript
 * connection.setPushPerformLanguage({language: 'EU'})
 * ```
 */
function setPushPerformLanguage(params) {
  if (typeof params.language !== 'string' || !params.language) {
    throw Error('Invalid parameter: "language"');
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var data = {
    translationLanguage: params.language
  };
  var _a = this.context,
    accessToken = _a.accessToken,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/language"),
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(data),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params.success,
    error: params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call setPushPerformLanguage:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}
/**
 * Gets the push translation language set by the user.
 *
 * ```typescript
 * connection.getPushPerformLanguage()
 * ```
 */
/**
 * 获取用户设置的推送翻译语言。
 *
 * ```typescript
 * connection.getPushPerformLanguage()
 * ```
 */
function getPushPerformLanguage(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_9__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_10__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_11__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    accessToken = _a.accessToken,
    orgName = _a.orgName,
    appName = _a.appName,
    userId = _a.userId;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(userId, "/notification/language"),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    },
    success: params === null || params === void 0 ? void 0 : params.success,
    error: params === null || params === void 0 ? void 0 : params.error
  };
  _logger__WEBPACK_IMPORTED_MODULE_12__.logger.debug('Call getPushPerformLanguage:', params);
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, options);
}


/***/ }),

/***/ "./src/apis/threadApi.ts":
/*!*******************************!*\
  !*** ./src/apis/threadApi.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "changeChatThreadName": function() { return /* binding */ changeChatThreadName; },
/* harmony export */   "createChatThread": function() { return /* binding */ createChatThread; },
/* harmony export */   "destroyChatThread": function() { return /* binding */ destroyChatThread; },
/* harmony export */   "getChatThreadDetail": function() { return /* binding */ getChatThreadDetail; },
/* harmony export */   "getChatThreadLastMessage": function() { return /* binding */ getChatThreadLastMessage; },
/* harmony export */   "getChatThreadMembers": function() { return /* binding */ getChatThreadMembers; },
/* harmony export */   "getChatThreads": function() { return /* binding */ getChatThreads; },
/* harmony export */   "getJoinedChatThreads": function() { return /* binding */ getJoinedChatThreads; },
/* harmony export */   "joinChatThread": function() { return /* binding */ joinChatThread; },
/* harmony export */   "leaveChatThread": function() { return /* binding */ leaveChatThread; },
/* harmony export */   "removeChatThreadMember": function() { return /* binding */ removeChatThreadMember; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _formatLastMessage__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./formatLastMessage */ "./src/apis/formatLastMessage.ts");













/**
 * Thread contains the APIs for thread operations.
 * @module Thread
 */
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





/**
 * Creates a message thread.
 *
 * ```typescript
 * connection.createChatThread({parentId: 'parentId',name: 'threadName',messageId: 'messageId'})
 * ```
 */
/**
 * 创建子区。
 *
 * ```typescript
 * connection.createChatThread({parentId: 'parentId',name: 'threadName',messageId: 'messageId'})
 * ```
 */
function createChatThread(params) {
  if (typeof params.name !== 'string' || params.name === '') {
    throw Error("Invalid parameter name: ".concat(params.name));
  } else if (typeof params.messageId !== 'string' || params.messageId === '') {
    throw Error("Invalid parameter messageId: ".concat(params.messageId));
  } else if (typeof params.parentId !== 'string' || params.parentId === '') {
    throw Error("Invalid parameter parentId: ".concat(params.parentId));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var requestData = {
    name: params.name,
    msg_id: params.messageId,
    group_id: params.parentId,
    owner: this.user
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options).then(function (res) {
    var chatThreadId = res.data.thread_id;
    res.data = {
      chatThreadId: chatThreadId
    };
    return res;
  });
}
/**
 * Joins a message thread.
 *
 * ```typescript
 * connection.joinChatThread({chatThreadId: 'chatThreadId'})
 * ```
 */
/**
 * 加入子区。
 *
 * ```typescript
 * connection.joinChatThread({chatThreadId: 'chatThreadId'})
 * ```
 */
function joinChatThread(params) {
  if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
    throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId, "/user/").concat(this.user, "/join?resource=").concat(jid.clientResource),
    type: 'POST',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options).then(function (res) {
    var detail = res.data.detail;
    detail.messageId = detail.msgId;
    detail.parentId = detail.groupId;
    delete detail.msgId;
    delete detail.groupId;
    return res;
  });
}
/**
 * Leaves the message thread.
 *
 * ```typescript
 * connection.leaveChatThread({chatThreadId: 'chatThreadId'})
 * ```
 */
/**
 * 退出子区。
 *
 * ```typescript
 * connection.leaveChatThread({chatThreadId: 'chatThreadId'})
 * ```
 */
function leaveChatThread(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, orgName, appName, accessToken, jid, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
            throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
          }
          if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, accessToken = _a.accessToken, jid = _a.jid;
          options = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId, "/user/").concat(this.user, "/quit?resource=").concat(jid.clientResource),
            type: 'DELETE',
            dataType: 'json',
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            }
          };
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * Destroy the message thread.
 *
 * Only the owner and admins of the group to which the message thread belongs can call this method.
 *
 * ```typescript
 * connection.destroyChatThread({chatThreadId: 'chatThreadId'})
 * ```
 */
/**
 * 解散子区。
 *
 * 仅子区所属群组的群主和管理员可以调用该方法。
 *
 * ```typescript
 * connection.destroyChatThread({chatThreadId: 'chatThreadId'})
 * ```
 */
function destroyChatThread(params) {
  return __awaiter(this, void 0, void 0, function () {
    var error, _a, orgName, appName, accessToken, jid, options;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
            throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
          }
          if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
            error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
              message: 'appkey or token error'
            });
            return [2 /*return*/, Promise.reject(error)];
          }
          _a = this.context, orgName = _a.orgName, appName = _a.appName, accessToken = _a.accessToken, jid = _a.jid;
          options = {
            url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId, "?resource=").concat(jid.clientResource),
            type: 'DELETE',
            dataType: 'json',
            headers: {
              Authorization: 'Bearer ' + accessToken,
              'Content-Type': 'application/json'
            }
          };
          return [4 /*yield*/, _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options)];
        case 1:
          _b.sent();
          return [2 /*return*/];
      }
    });
  });
}
/**
 * Changes the message thread name.
 *
 * ```typescript
 * connection.changeChatThreadName({chatThreadId: 'chatThreadId',name: 'name'})
 * ```
 */
/**
 * 修改子区名称。
 *
 * ```typescript
 * connection.changeChatThreadName({chatThreadId: 'chatThreadId',name: 'name'})
 * ```
 */
function changeChatThreadName(params) {
  if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
    throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
  } else if (typeof params.name !== 'string' || params.name === '') {
    throw Error("Invalid parameter name: ".concat(params.name));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var requestData = {
    name: params.name
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId, "?resource=").concat(jid.clientResource),
    type: 'PUT',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options);
}
/**
 * Gets members in the message thread with pagination.
 *
 * ```typescript
 * connection.getChatThreadMembers({chatThreadId: 'chatThreadId',pageSize:20,cursor:'cursor'})
 * ```
 */
/**
 * 分页获取子区成员。
 *
 * ```typescript
 * connection.getChatThreadMembers({chatThreadId: 'chatThreadId ',pageSize:20,cursor:'cursor'})
 * ```
 */
function getChatThreadMembers(params) {
  if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
    throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var requestData = {
    limit: params.pageSize || 20,
    cursor: params.cursor || ''
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId, "/users"),
    type: 'GET',
    dataType: 'json',
    data: requestData,
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options);
}
/**
 * Removes a member from the message thread.
 *
 * ```typescript
 * connection.removeChatThreadMember({chatThreadId: 'chatThreadId',username:'username'})
 * ```
 */
/**
 * 移除子区成员。
 *
 * ```typescript
 * connection.removeChatThreadMember({chatThreadId: 'chatThreadId',username:'username'})
 * ```
 */
function removeChatThreadMember(params) {
  if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
    throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
  } else if (typeof params.username !== 'string' || params.username === '') {
    throw Error("Invalid parameter username: ".concat(params.username));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken,
    jid = _a.jid;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId, "/users/").concat(params.username, "?resource=").concat(jid.clientResource),
    type: 'DELETE',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options);
}
/**
 * Uses the pagination to get the message threads that the current user has joined.
 *
 * ```typescript
 * connection.getJoinedChatThreads({parentId: 'parentId',cursor: 'cursor',pageSize: 50})
 * ```
 */
/**
 * 分页获取当前用户加入的子区列表。
 *
 * ```typescript
 * connection.getJoinedChatThreads({parentId: 'parentId',cursor: 'cursor',pageSize: 50})
 * ```
 */
function getJoinedChatThreads(params) {
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var requestData = {
    limit: params.pageSize || 20,
    cursor: params.cursor || ''
  };
  var optionUrl = params.parentId ? "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/threads/chatgroups/").concat(params.parentId, "/user/").concat(this.user) : "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/threads/user/").concat(this.user);
  var options = {
    url: optionUrl,
    type: 'GET',
    dataType: 'json',
    data: requestData,
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options).then(function (res) {
    var entities = res.entities;
    entities === null || entities === void 0 ? void 0 : entities.forEach(function (item) {
      item.parentId = item.groupId;
      item.messageId = item.msgId;
      delete item.groupId;
      delete item.msgId;
    });
    return res;
  });
}
/**
 * Use the pagination to get the list of message threads that the current user has joined in the specified group.
 *
 * ```typescript
 * connection.getChatThreads({parentId: 'parentId, cursor:'cursor' ,pageSize: 50})
 * ```
 */
/**
 * 分页获取当前用户加入指定群组的子区列表。
 *
 * ```typescript
 * connection.getChatThreads({parentId: 'parentId, cursor:'cursor' ,pageSize: 50})
 * ```
 */
function getChatThreads(params) {
  if (typeof params.parentId !== 'string' || params.parentId === '') {
    throw Error("Invalid parameter parentId: ".concat(params.parentId));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var requestData = {
    cursor: params.cursor || '',
    limit: params.pageSize || 20
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/threads/chatgroups/").concat(params.parentId),
    type: 'GET',
    dataType: 'json',
    data: requestData,
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options).then(function (res) {
    var entities = res.entities;
    entities === null || entities === void 0 ? void 0 : entities.forEach(function (item) {
      item.parentId = item.groupId;
      item.messageId = item.msgId;
      delete item.groupId;
      delete item.msgId;
    });
    return res;
  });
}
/**
 * Gets the last threaded reply in the specified message threads.
 *
 * ```typescript
 * connection.getChatThreadLastMessage({chatThreadIds: ['chatThreadId1','chatThreadId2']})
 * ```
 */
/**
 * 批量获取指定子区中的最新一条消息。
 *
 * ```typescript
 * connection.getChatThreadLastMessage({chatThreadIds: ['chatThreadId1','chatThreadId2']})
 * ```
 */
function getChatThreadLastMessage(params) {
  if (!Array.isArray(params.chatThreadIds)) {
    throw Error("Invalid parameter chatThreadIds: ".concat(params.chatThreadIds));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var requestData = {
    threadIds: params.chatThreadIds
  };
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/message"),
    type: 'POST',
    dataType: 'json',
    data: JSON.stringify(requestData),
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options).then(function (res) {
    return formatLastMessage(res);
  });
}
function formatLastMessage(res) {
  var entities = res.entities;
  entities === null || entities === void 0 ? void 0 : entities.forEach(function (item) {
    item.chatThreadId = item.thread_id;
    if (item.last_message && JSON.stringify(item.last_message) !== '{}') {
      item.lastMessage = (0,_formatLastMessage__WEBPACK_IMPORTED_MODULE_17__.formatMessage)(item.last_message);
    } else {
      item.lastMessage = item.last_message;
    }
    delete item.thread_id;
    delete item.last_message;
  });
  return res;
}
/**
 * Gets the details of the message thread.
 *
 * ```typescript
 * connection.getChatThreadDetail({chatThreadId: 'chatThreadId'})
 * ```
 */
/**
 * 获取子区详情。
 *
 * ```typescript
 * connection.getChatThreadDetail({chatThreadId: 'chatThreadId'})
 * ```
 */
function getChatThreadDetail(params) {
  if (typeof params.chatThreadId !== 'string' || params.chatThreadId === '') {
    throw Error("Invalid parameter chatThreadId: ".concat(params.chatThreadId));
  }
  if (!_utils__WEBPACK_IMPORTED_MODULE_16__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_14__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_13__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var options = {
    url: "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/thread/").concat(params.chatThreadId),
    type: 'GET',
    dataType: 'json',
    headers: {
      Authorization: 'Bearer ' + accessToken,
      'Content-Type': 'application/json'
    }
  };
  return _utils__WEBPACK_IMPORTED_MODULE_15__.ajax.call(this, options).then(function (res) {
    res.data.affiliationsCount = res.data.affiliations_count;
    res.data.messageId = res.data.msgId;
    res.data.parentId = res.data.groupId;
    delete res.data.affiliations_count;
    delete res.data.msgId;
    delete res.data.groupId;
    return res;
  });
}


/***/ }),

/***/ "./src/apis/translation.ts":
/*!*********************************!*\
  !*** ./src/apis/translation.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSupportedLanguages": function() { return /* binding */ getSupportedLanguages; },
/* harmony export */   "translateMessage": function() { return /* binding */ translateMessage; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./src/apis/utils.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");




/**
 * Translation contains the APIs for translation operations.
 * @module Translation
 */





/**
 * Gets the list of supported languages for translation.
 *
 * ```typescript
 * connection.getSupportedLanguages()
 * ```
 */
/**
 * 获取翻译服务支持的语言。
 *
 * ```typescript
 * connection.getSupportedLanguages()
 * ```
 */
function getSupportedLanguages() {
  if (!_utils__WEBPACK_IMPORTED_MODULE_4__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_6__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_5__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var url = "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user, "/translate/support/language");
  var opts = {
    url: url,
    dataType: 'json',
    type: 'GET',
    headers: {
      Authorization: 'Bearer ' + accessToken
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_7__.logger.debug('Call getSupportedLanguages');
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, opts);
}
/**
 * Translates the text.
 *
 * ```typescript
 * connection.translateMessage('hello', 'zh')
 * ```
 */
/**
 * 翻译消息。
 *
 * ```typescript
 * connection.translateMessage('hello', 'zh')
 * ```
 */
function translateMessage(params) {
  if (typeof params.text !== 'string' || params.text === '') {
    throw Error('Invalid parameter: "text"');
  } else if (!Array.isArray(params.languages)) {
    throw Error('Invalid parameter: "language"');
  } else if (!_utils__WEBPACK_IMPORTED_MODULE_4__.checkStatus.call(this)) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_6__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_5__.Code.REST_PARAMS_STATUS,
      message: 'appkey or token error'
    });
    return Promise.reject(error);
  }
  var _a = this.context,
    orgName = _a.orgName,
    appName = _a.appName,
    accessToken = _a.accessToken;
  var url = "".concat(this.apiUrl, "/").concat(orgName, "/").concat(appName, "/users/").concat(this.user, "/translate");
  var postData = {
    text: params.text,
    to: params.languages
  };
  var opts = {
    url: url,
    dataType: 'json',
    type: 'POST',
    data: JSON.stringify(postData),
    headers: {
      Authorization: 'Bearer ' + accessToken
    }
  };
  _logger__WEBPACK_IMPORTED_MODULE_7__.logger.debug('Call translateMessage');
  return _utils__WEBPACK_IMPORTED_MODULE_8__.ajax.call(this, opts);
}


/***/ }),

/***/ "./src/apis/utils.ts":
/*!***************************!*\
  !*** ./src/apis/utils.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "checkStatus": function() { return /* binding */ checkStatus; },
/* harmony export */   "formatAttributeInfo": function() { return /* binding */ formatAttributeInfo; },
/* harmony export */   "formatAttributesData": function() { return /* binding */ formatAttributesData; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");








/** @hidden */
function checkAppkey() {
  var appName = this.context.appName;
  var orgName = this.context.orgName;
  if (!appName || !orgName) {
    this.onError && this.onError({
      type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.WEBIM_CONNCTION_AUTH_ERROR,
      message: 'appName or orgName is illegal'
    });
    return false;
  }
  return true;
}
/** @hidden */
function checkToken() {
  var _a;
  var token = this.context.accessToken;
  if (!token) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_7__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR,
      message: 'token not assign error'
    });
    this.onError && this.onError(error);
    (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onError', error);
    return false;
  }
  return true;
}
/** @hidden */
function checkStatus() {
  return checkToken.call(this) && checkAppkey.call(this);
}
function formatAttributesData(attributesData) {
  var data = attributesData.data,
    type = attributesData.type;
  var status;
  Object.keys(data.errorKeys).length > 0 ? status = 'fail' : status = 'success';
  var resp = {
    data: {
      status: status,
      errorKeys: data.errorKeys,
      successKeys: data.successKeys
    },
    type: type
  };
  return resp;
}
function formatAttributeInfo(attributesData) {
  var data = attributesData.data;
  var error = undefined;
  if (Object.keys(data.errorKeys).length > 0) {
    Object.keys(data.errorKeys).forEach(function (item) {
      var errorMessage = data.errorKeys[item];
      if (errorMessage.includes('is not part of you')) {
        error = _error_error__WEBPACK_IMPORTED_MODULE_7__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.NO_PERMISSION,
          message: errorMessage
        });
      } else if (errorMessage.includes('size of metadata for this single chatroom exceeds the user defined limit') || errorMessage.includes('total size of chatroom metadata for this app exceeds the user defined limit') || errorMessage.includes('is exceeding maximum limit')) {
        error = _error_error__WEBPACK_IMPORTED_MODULE_7__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.MAX_LIMIT,
          message: errorMessage
        });
      } else if (errorMessage.includes('is not Legal')) {
        error = _error_error__WEBPACK_IMPORTED_MODULE_7__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.REQUEST_PARAMETER_ERROR,
          message: errorMessage
        });
      } else if (errorMessage.includes('Failed to update userMetadata. Concurrent updates not allowed')) {
        error = _error_error__WEBPACK_IMPORTED_MODULE_7__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.OPERATION_NOT_ALLOWED,
          message: errorMessage
        });
      } else {
        error = _error_error__WEBPACK_IMPORTED_MODULE_7__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_6__.Code.WEBIM_CONNCTION_AJAX_ERROR,
          message: errorMessage
        });
      }
    });
  }
  return error;
}


/***/ }),

/***/ "./src/dataReport/const.ts":
/*!*********************************!*\
  !*** ./src/dataReport/const.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_ACCESS_CHANNEL": function() { return /* binding */ DEFAULT_ACCESS_CHANNEL; },
/* harmony export */   "EVENT_IDS": function() { return /* binding */ EVENT_IDS; },
/* harmony export */   "EVENT_RPT_BIZ": function() { return /* binding */ EVENT_RPT_BIZ; },
/* harmony export */   "EVENT_RPT_TOKEN": function() { return /* binding */ EVENT_RPT_TOKEN; },
/* harmony export */   "FRIEND_OPT_REPORTS": function() { return /* binding */ FRIEND_OPT_REPORTS; },
/* harmony export */   "NET_WORK_ERROR_CODE": function() { return /* binding */ NET_WORK_ERROR_CODE; },
/* harmony export */   "RPT_MAP_MAX_SIZE": function() { return /* binding */ RPT_MAP_MAX_SIZE; },
/* harmony export */   "SEND_MSG_REPORTS": function() { return /* binding */ SEND_MSG_REPORTS; },
/* harmony export */   "WEB_IM_OS": function() { return /* binding */ WEB_IM_OS; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.map.js */ "./node_modules/core-js/modules/es.map.js");
/* harmony import */ var core_js_modules_es_map_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_map_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_4__);





// webim 默认OS
var WEB_IM_OS = 7;
// 好友操作wss上报
var FRIEND_OPT_REPORTS = new Map();
// 发送消息上行延时上报
var SEND_MSG_REPORTS = new Map();
// biz 代表业务线，传错虽然可以上报成功，但后续的应用会出问题
var EVENT_RPT_BIZ = 'im';
// 上报Token
var EVENT_RPT_TOKEN = '32f24ab2ddb74f508aa9286c356cec84';
// 好友操作,消息上行延时Map最大Size
var RPT_MAP_MAX_SIZE = 1000;
// 上报EVENT IDS
var EVENT_IDS = {
  INIT: 9674,
  API: 9675
};
// 上报accessChannel默认值
var DEFAULT_ACCESS_CHANNEL = 'direct';
// 网络错误
var NET_WORK_ERROR_CODE = -1;


/***/ }),

/***/ "./src/dataReport/index.ts":
/*!*********************************!*\
  !*** ./src/dataReport/index.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _upload__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./upload */ "./src/dataReport/upload/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils */ "./src/dataReport/utils.ts");
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./const */ "./src/dataReport/const.ts");












var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};




var DEFAULT_REQUEST_OPTIONS = {
  requestName: '',
  subrequestid: '1',
  requestMethod: 'GET',
  requestUrl: '',
  requestElapse: 0,
  code: 0,
  codeDesc: '',
  isLastApi: 0,
  isSuccess: 1
};
var SUCCESS_CODE = 200;
var DataReport = /** @class */function () {
  function DataReport(opt) {
    this.platform = _utils__WEBPACK_IMPORTED_MODULE_12__.utils.getEnvInfo();
    this.isReportDt = opt.isReport || false;
    // 默认采集数据
    this.isCollectDt = true;
    if ((0,_utils__WEBPACK_IMPORTED_MODULE_14__.isMiniProgram)(this.platform) && !this.isReportDt) {
      // 小程序不进行数据上报则不采集数据
      this.isCollectDt = false;
    }
    this.eventQueue = [];
    this.accessChannel = _const__WEBPACK_IMPORTED_MODULE_15__.DEFAULT_ACCESS_CHANNEL;
    this.options = (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getBaseOptions)(opt, this.platform);
    this.sid = this.options.sdkServiceId;
    this.init(opt);
  }
  DataReport.getInstance = function () {
    return DataReport.instance;
  };
  // 获取sid
  DataReport.prototype.getServiceId = function () {
    return this.sid || 'sid_0';
  };
  // 设置是否上报
  DataReport.prototype.setIsReportDt = function (isReport) {
    this.isReportDt = isReport;
    if (isReport) {
      this.rptEventQueue();
    }
  };
  // 设置是否采集数据
  DataReport.prototype.setIsCollectDt = function (isCollect) {
    this.isCollectDt = isCollect;
    if (!isCollect) {
      // 清空采集的数据
      this.eventQueue = [];
    }
  };
  // 如果存在未上报数据,则进行上报
  DataReport.prototype.rptEventQueue = function () {
    var _this = this;
    if (this.eventQueue.length) {
      this.eventQueue.forEach(function (item, idx) {
        _upload__WEBPACK_IMPORTED_MODULE_13__.eventReport.send(item.eventId, item.dt);
        if (idx >= _this.eventQueue.length - 1) {
          _this.eventQueue = [];
        }
      });
    }
  };
  DataReport.prototype.init = function (opt) {
    if (!DataReport.instance) {
      DataReport.instance = this;
      _upload__WEBPACK_IMPORTED_MODULE_13__.eventReport.init({
        biz: _const__WEBPACK_IMPORTED_MODULE_15__.EVENT_RPT_BIZ,
        token: _const__WEBPACK_IMPORTED_MODULE_15__.EVENT_RPT_TOKEN,
        appId: opt.appkey,
        debug: false
      });
      this.reportInit();
    }
  };
  // 上报初始化sdk
  DataReport.prototype.reportInit = function () {
    if (!this.isCollectDt) {
      return;
    }
    var _a = this.options,
      did = _a.did,
      os = _a.os,
      sdkVersion = _a.sdkVersion,
      deviceId = _a.deviceId;
    this.reportData(_const__WEBPACK_IMPORTED_MODULE_15__.EVENT_IDS.INIT, {
      did: did,
      os: os,
      sdkVersion: sdkVersion,
      deviceId: deviceId
    });
  };
  // 获取API操作上报方法
  DataReport.prototype.geOperateFun = function (operateOpt) {
    var _this = this;
    if (!this.isCollectDt) {
      // eslint-disable-next-line @typescript-eslint/no-empty-function
      return function () {};
    }
    // 重试次数从1开始
    var retryTimes = 1;
    // 汇总事件code
    var oprCode = 0;
    // 汇总事件desc
    var oprDesc = '';
    // 操作开始时间
    var startTime = (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getTimestamp)();
    var uid = operateOpt.uid,
      operationName = operateOpt.operationName;
    // 如果存在uid,则更新uid
    if (uid) {
      this.uid = uid;
    }
    var dt = {
      uid: this.uid,
      operationId: "opr_".concat(_utils__WEBPACK_IMPORTED_MODULE_12__.utils.getUniqueId(), "_").concat((0,_utils__WEBPACK_IMPORTED_MODULE_14__.getRandom)()),
      requestid: "req_".concat(_utils__WEBPACK_IMPORTED_MODULE_12__.utils.getUniqueId(), "_").concat((0,_utils__WEBPACK_IMPORTED_MODULE_14__.getRandom)()),
      operationName: operationName
    };
    return function (options) {
      var _a, _b, _c, _d;
      if (options.data.isSuccess) {
        oprCode = 0;
        oprDesc = '';
      } else {
        // 操作失败 code 0 改为 -1
        if (options.data.code === 0) {
          options.data.code = _const__WEBPACK_IMPORTED_MODULE_15__.NET_WORK_ERROR_CODE;
        }
        oprCode = (_a = options.data.code) !== null && _a !== void 0 ? _a : oprCode;
        oprDesc = (_b = options.data.codeDesc) !== null && _b !== void 0 ? _b : oprDesc;
      }
      // 存在accessChannel则更新
      if ((_c = options.data) === null || _c === void 0 ? void 0 : _c.accessChannel) {
        _this.accessChannel = (_d = options.data) === null || _d === void 0 ? void 0 : _d.accessChannel;
      }
      // 如果重试，则不更新reqID,并增加重试次数
      if (options.isRetry) {
        retryTimes++;
        options.data.subrequestid = "".concat(retryTimes);
      } else {
        dt.requestid = "req_".concat(_utils__WEBPACK_IMPORTED_MODULE_12__.utils.getUniqueId(), "_").concat((0,_utils__WEBPACK_IMPORTED_MODULE_14__.getRandom)());
        retryTimes = 1;
      }
      // 如果操作结束，则计算该操作的耗时
      if (options.data.isLastApi) {
        var endTime = (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getTimestamp)();
        options.data.requestElapse = endTime - startTime;
        options.data.requestMethod = '';
        options.data.subrequestid = '0';
        options.data.code = oprCode === SUCCESS_CODE ? 0 : oprCode;
        options.data.codeDesc = oprDesc;
      } else {
        // 操作未结束,且没有requestName, 则requestName = operationName
        if (!options.data.requestName) {
          options.data.requestName = operationName;
        }
      }
      // WSS操作不存在耗时,则手动添加耗时
      if (!options.data.requestElapse) {
        options.data.requestElapse = (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getTimestamp)() - startTime;
      }
      _this.reportData.call(_this, _const__WEBPACK_IMPORTED_MODULE_15__.EVENT_IDS.API, __assign(__assign(__assign(__assign({}, DEFAULT_REQUEST_OPTIONS), dt), options.data), {
        accessChannel: _this.accessChannel,
        operationType: (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getOperationType)(operationName)
      }));
      // isEndApi为true表示该api结束即操作结束，追加一个操作结束event
      if (options.isEndApi) {
        _this.reportData.call(_this, _const__WEBPACK_IMPORTED_MODULE_15__.EVENT_IDS.API, __assign(__assign(__assign({}, dt), DEFAULT_REQUEST_OPTIONS), {
          isSuccess: options.data.isSuccess,
          isLastApi: 1,
          subrequestid: '0',
          requestMethod: '',
          code: oprCode === SUCCESS_CODE ? 0 : oprCode,
          codeDesc: oprDesc,
          requestElapse: options.data.requestElapse,
          accessChannel: _this.accessChannel,
          operationType: (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getOperationType)(operationName)
        }));
      }
    };
  };
  // 上报数据
  DataReport.prototype.reportData = function (eventId, opt) {
    return __awaiter(this, void 0, void 0, function () {
      var lts, net, _a, appkey, sdkServiceId, sdkProduct, dt, error_1;
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            _b.trys.push([0, 3,, 4]);
            lts = (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getTimestamp)();
            net = 0;
            if (!(eventId === _const__WEBPACK_IMPORTED_MODULE_15__.EVENT_IDS.API)) return [3 /*break*/, 2];
            return [4 /*yield*/, (0,_utils__WEBPACK_IMPORTED_MODULE_14__.getNetworkType)(this.platform)];
          case 1:
            net = _b.sent();
            _b.label = 2;
          case 2:
            _a = this.options, appkey = _a.appkey, sdkServiceId = _a.sdkServiceId, sdkProduct = _a.sdkProduct;
            dt = __assign({
              lts: lts,
              net: net,
              appkey: appkey,
              sdkServiceId: sdkServiceId,
              sdkProduct: sdkProduct
            }, opt);
            if (this.isReportDt) {
              _upload__WEBPACK_IMPORTED_MODULE_13__.eventReport.send(eventId, dt);
            } else {
              if (this.isCollectDt) {
                // 收集未上报数据
                this.eventQueue.push({
                  eventId: eventId,
                  dt: dt
                });
              }
            }
            return [3 /*break*/, 4];
          case 3:
            error_1 = _b.sent();
            console.warn(error_1);
            return [3 /*break*/, 4];
          case 4:
            return [2 /*return*/];
        }
      });
    });
  };

  return DataReport;
}();
/* harmony default export */ __webpack_exports__["default"] = (DataReport);

/***/ }),

/***/ "./src/dataReport/types.ts":
/*!*********************************!*\
  !*** ./src/dataReport/types.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NetworkType": function() { return /* binding */ NetworkType; },
/* harmony export */   "OperationName": function() { return /* binding */ OperationName; },
/* harmony export */   "OperationType": function() { return /* binding */ OperationType; },
/* harmony export */   "RequestName": function() { return /* binding */ RequestName; },
/* harmony export */   "SdkProductType": function() { return /* binding */ SdkProductType; },
/* harmony export */   "WSS_CODE": function() { return /* binding */ WSS_CODE; }
/* harmony export */ });
var OperationType;
(function (OperationType) {
  OperationType[OperationType["UNKNOWOPERATION"] = -1] = "UNKNOWOPERATION";
  OperationType[OperationType["REST_GET_SESSION_LIST"] = 1] = "REST_GET_SESSION_LIST";
  OperationType[OperationType["REST_DEL_SESSION"] = 2] = "REST_DEL_SESSION";
  OperationType[OperationType["REST_GET_HISTORY_MESSAGE"] = 3] = "REST_GET_HISTORY_MESSAGE";
  OperationType[OperationType["REST_OPERATE"] = 10] = "REST_OPERATE";
  OperationType[OperationType["MSYNC_SENDMESSAGE"] = 11] = "MSYNC_SENDMESSAGE";
  OperationType[OperationType["MSYNC_RECALLMESSAGE"] = 12] = "MSYNC_RECALLMESSAGE";
  OperationType[OperationType["MSYNC_OPERATE"] = 20] = "MSYNC_OPERATE";
  OperationType[OperationType["ROSTER_ADD"] = 21] = "ROSTER_ADD";
  OperationType[OperationType["ROSTER_REMOVE"] = 22] = "ROSTER_REMOVE";
  OperationType[OperationType["ROSTER_ACCEPT"] = 23] = "ROSTER_ACCEPT";
  OperationType[OperationType["ROSTER_DECLINE"] = 24] = "ROSTER_DECLINE";
  OperationType[OperationType["ROSTER_BAN"] = 25] = "ROSTER_BAN";
  OperationType[OperationType["ROSTER_ALLOW"] = 26] = "ROSTER_ALLOW";
  OperationType[OperationType["ROSTER_BLACKLIST"] = 27] = "ROSTER_BLACKLIST";
  OperationType[OperationType["ROSTER_CONTACTS"] = 28] = "ROSTER_CONTACTS";
  OperationType[OperationType["ROSTER_OPERATE"] = 30] = "ROSTER_OPERATE";
  OperationType[OperationType["USER_LOGIN"] = 31] = "USER_LOGIN";
  OperationType[OperationType["USER_CREATE"] = 32] = "USER_CREATE";
  OperationType[OperationType["USER_UPDATE_USERINFO"] = 33] = "USER_UPDATE_USERINFO";
  OperationType[OperationType["USER_FETCH_USERINFO"] = 34] = "USER_FETCH_USERINFO";
  OperationType[OperationType["USER_UPDATE_NICK"] = 35] = "USER_UPDATE_NICK";
  OperationType[OperationType["USER_UPLOAD_PUSH_TOKEN"] = 36] = "USER_UPLOAD_PUSH_TOKEN";
  OperationType[OperationType["USER_OPERATE"] = 40] = "USER_OPERATE";
  OperationType[OperationType["GROUP_CREATEGROUP"] = 41] = "GROUP_CREATEGROUP";
  OperationType[OperationType["GROUP_BLOCK_MESSAGE"] = 42] = "GROUP_BLOCK_MESSAGE";
  OperationType[OperationType["GROUP_FETCH_PUBLICGROUPS_WITHCURSOR"] = 43] = "GROUP_FETCH_PUBLICGROUPS_WITHCURSOR";
  OperationType[OperationType["GROUP_FETCH_USERS_GROUP"] = 44] = "GROUP_FETCH_USERS_GROUP";
  OperationType[OperationType["GROUP_CHANGE_OWNER"] = 45] = "GROUP_CHANGE_OWNER";
  OperationType[OperationType["GROUP_FETCH_SPECIFICATION"] = 46] = "GROUP_FETCH_SPECIFICATION";
  OperationType[OperationType["GROUP_CHANGE_GROUPATTRIBUTE"] = 47] = "GROUP_CHANGE_GROUPATTRIBUTE";
  OperationType[OperationType["GROUP_FETCH_MEMEBERS"] = 48] = "GROUP_FETCH_MEMEBERS";
  OperationType[OperationType["GROUP_GET_ADMIN"] = 49] = "GROUP_GET_ADMIN";
  OperationType[OperationType["GROUP_SET_ADMIN"] = 50] = "GROUP_SET_ADMIN";
  OperationType[OperationType["GROUP_REMOVE_ADMIN"] = 51] = "GROUP_REMOVE_ADMIN";
  OperationType[OperationType["GROUP_DESTOTYGROUP"] = 52] = "GROUP_DESTOTYGROUP";
  OperationType[OperationType["GROUP_LEAVEGROUP"] = 53] = "GROUP_LEAVEGROUP";
  OperationType[OperationType["GROUP_INVITE_TO_GROUP"] = 54] = "GROUP_INVITE_TO_GROUP";
  OperationType[OperationType["GROUP_JOIN_PUBLICGROUP"] = 55] = "GROUP_JOIN_PUBLICGROUP";
  OperationType[OperationType["GROUP_ACCEPT_JOINPUBLICGROUPAPPL"] = 56] = "GROUP_ACCEPT_JOINPUBLICGROUPAPPL";
  OperationType[OperationType["GROUP_DECLINE_JOINPUBLICGROUPAPPL"] = 57] = "GROUP_DECLINE_JOINPUBLICGROUPAPPL";
  OperationType[OperationType["GROUP_ACCEPT_INVITATION"] = 58] = "GROUP_ACCEPT_INVITATION";
  OperationType[OperationType["GROUP_DECLINE_INVITATION"] = 59] = "GROUP_DECLINE_INVITATION";
  OperationType[OperationType["GROUP_REMOVE_MEMBER"] = 60] = "GROUP_REMOVE_MEMBER";
  OperationType[OperationType["GROUP_REMOVE_MEMBERS"] = 61] = "GROUP_REMOVE_MEMBERS";
  OperationType[OperationType["GROUP_MUTE_MEMBERS"] = 62] = "GROUP_MUTE_MEMBERS";
  OperationType[OperationType["GROUP_UNMUTE_MEMBERS"] = 63] = "GROUP_UNMUTE_MEMBERS";
  OperationType[OperationType["GROUP_FETCH_MUTES"] = 64] = "GROUP_FETCH_MUTES";
  OperationType[OperationType["GROUP_BLOCK_MEMBER"] = 65] = "GROUP_BLOCK_MEMBER";
  OperationType[OperationType["GROUP_BLOCK_MEMBERS"] = 66] = "GROUP_BLOCK_MEMBERS";
  OperationType[OperationType["GROUP_UNBLOCK_MEMBER"] = 67] = "GROUP_UNBLOCK_MEMBER";
  OperationType[OperationType["GROUP_UNBLOCK_MEMBERS"] = 68] = "GROUP_UNBLOCK_MEMBERS";
  OperationType[OperationType["GROUP_GET_BLOCK_LIST"] = 69] = "GROUP_GET_BLOCK_LIST";
  OperationType[OperationType["GROUP_MUTE_ALLMEMBERS"] = 70] = "GROUP_MUTE_ALLMEMBERS";
  OperationType[OperationType["GROUP_UNMUTE_ALLMEMBERS"] = 71] = "GROUP_UNMUTE_ALLMEMBERS";
  OperationType[OperationType["GROUP_ADD_WHITELIST"] = 72] = "GROUP_ADD_WHITELIST";
  OperationType[OperationType["GROUP_REMOVE_WHITELIST"] = 73] = "GROUP_REMOVE_WHITELIST";
  OperationType[OperationType["GROUP_FETCH_WHITELIST"] = 74] = "GROUP_FETCH_WHITELIST";
  OperationType[OperationType["GROUP_IS_IN_WHITELIST"] = 75] = "GROUP_IS_IN_WHITELIST";
  OperationType[OperationType["GROUP_GET_READ_USERS"] = 76] = "GROUP_GET_READ_USERS";
  OperationType[OperationType["GROUP_FETCH_ANNOUNCEMENT"] = 77] = "GROUP_FETCH_ANNOUNCEMENT";
  OperationType[OperationType["GROUP_UPDATE_ANNOUNCEMENT"] = 78] = "GROUP_UPDATE_ANNOUNCEMENT";
  OperationType[OperationType["GROUP_UPLOAD_SHAREDFILE"] = 79] = "GROUP_UPLOAD_SHAREDFILE";
  OperationType[OperationType["GROUP_DELETE_SHAREDFILE"] = 80] = "GROUP_DELETE_SHAREDFILE";
  OperationType[OperationType["GROUP_FETCH_SHAREDFILE"] = 81] = "GROUP_FETCH_SHAREDFILE";
  OperationType[OperationType["GROUP_DOWNLOAD_SHAREDFILE"] = 82] = "GROUP_DOWNLOAD_SHAREDFILE";
  OperationType[OperationType["GROUP_MEMBER_SET_META_DATA"] = 83] = "GROUP_MEMBER_SET_META_DATA";
  OperationType[OperationType["GROUP_MEMBER_FETCH_META_DATA"] = 84] = "GROUP_MEMBER_FETCH_META_DATA";
  OperationType[OperationType["GROUP_OPERATE"] = 100] = "GROUP_OPERATE";
  OperationType[OperationType["CHATROOM_FETCH_CHATROOMSWITHPAGE"] = 101] = "CHATROOM_FETCH_CHATROOMSWITHPAGE";
  OperationType[OperationType["CHATROOM_CREATECHATROOM"] = 102] = "CHATROOM_CREATECHATROOM";
  OperationType[OperationType["CHATROOM_DESTORYCHATROOM"] = 103] = "CHATROOM_DESTORYCHATROOM";
  OperationType[OperationType["CHATROOM_FETCH_SPECIFICATION"] = 104] = "CHATROOM_FETCH_SPECIFICATION";
  OperationType[OperationType["CHATROOM_CHANGE_ATTRIBUTE"] = 105] = "CHATROOM_CHANGE_ATTRIBUTE";
  OperationType[OperationType["CHATROOM_REMOVE_MEMBER"] = 106] = "CHATROOM_REMOVE_MEMBER";
  OperationType[OperationType["CHATROOM_REMOVE_MEMBERS"] = 107] = "CHATROOM_REMOVE_MEMBERS";
  OperationType[OperationType["CHATROOM_ADD_MEMBERS"] = 108] = "CHATROOM_ADD_MEMBERS";
  OperationType[OperationType["CHATROOM_JOINCAHTROOM"] = 109] = "CHATROOM_JOINCAHTROOM";
  OperationType[OperationType["CHATROOM_LEAVECAHTROOM"] = 110] = "CHATROOM_LEAVECAHTROOM";
  OperationType[OperationType["CHATROOM_FETCH_MEMBERS"] = 111] = "CHATROOM_FETCH_MEMBERS";
  OperationType[OperationType["CHATROOM_GET_ADMIN"] = 112] = "CHATROOM_GET_ADMIN";
  OperationType[OperationType["CHATROOM_SET_ADMIN"] = 113] = "CHATROOM_SET_ADMIN";
  OperationType[OperationType["CHATROOM_REMOVE_ADMIN"] = 114] = "CHATROOM_REMOVE_ADMIN";
  OperationType[OperationType["CHATROOM_MUTE_USER"] = 115] = "CHATROOM_MUTE_USER";
  OperationType[OperationType["CHATROOM_UNMUTE_USER"] = 116] = "CHATROOM_UNMUTE_USER";
  OperationType[OperationType["CHATROOM_FETCH_MUTES"] = 117] = "CHATROOM_FETCH_MUTES";
  OperationType[OperationType["CHATROOM_BLOCK_USER"] = 118] = "CHATROOM_BLOCK_USER";
  OperationType[OperationType["CHATROOM_BLOCK_USERS"] = 119] = "CHATROOM_BLOCK_USERS";
  OperationType[OperationType["CHATROOM_UNBLOCK_USER"] = 120] = "CHATROOM_UNBLOCK_USER";
  OperationType[OperationType["CHATROOM_UNBLOCK_USERS"] = 121] = "CHATROOM_UNBLOCK_USERS";
  OperationType[OperationType["CHATROOM_FETCH_BANS"] = 122] = "CHATROOM_FETCH_BANS";
  OperationType[OperationType["CHATROOM_MUTE_ALLMEMEBERS"] = 123] = "CHATROOM_MUTE_ALLMEMEBERS";
  OperationType[OperationType["CHATROOM_UNMUTE_ALLMEMEBERS"] = 124] = "CHATROOM_UNMUTE_ALLMEMEBERS";
  OperationType[OperationType["CHATROOM_ADD_WHITELIST"] = 125] = "CHATROOM_ADD_WHITELIST";
  OperationType[OperationType["CHATROOM_REMOVE_WHITELIST"] = 126] = "CHATROOM_REMOVE_WHITELIST";
  OperationType[OperationType["CHATROOM_FETCH_WHITELIST"] = 127] = "CHATROOM_FETCH_WHITELIST";
  OperationType[OperationType["CHATROOM_FETCH_MEMBERIN_WHITELIST"] = 128] = "CHATROOM_FETCH_MEMBERIN_WHITELIST";
  OperationType[OperationType["CHATROOM_FETCH_ANNOUNCEMENT"] = 129] = "CHATROOM_FETCH_ANNOUNCEMENT";
  OperationType[OperationType["CHATROOM_UPDATE_ANNOUNCEMENT"] = 130] = "CHATROOM_UPDATE_ANNOUNCEMENT";
  OperationType[OperationType["CHATROOM_REMOVE_SHARE_FILE"] = 131] = "CHATROOM_REMOVE_SHARE_FILE";
  OperationType[OperationType["CHATROOM_GET_SHARE_FILE_LIST"] = 132] = "CHATROOM_GET_SHARE_FILE_LIST";
  OperationType[OperationType["CHATROOM_UPLOAD_FILE"] = 133] = "CHATROOM_UPLOAD_FILE";
  OperationType[OperationType["CHATROOM_SET_META_DATA"] = 134] = "CHATROOM_SET_META_DATA";
  OperationType[OperationType["CHATROOM_DELETE_META_DATA"] = 135] = "CHATROOM_DELETE_META_DATA";
  OperationType[OperationType["CHATROOM_FETCH_META_DATA"] = 136] = "CHATROOM_FETCH_META_DATA";
  OperationType[OperationType["CHATROOM_OPERATE"] = 150] = "CHATROOM_OPERATE";
})(OperationType || (OperationType = {}));
var OperationName;
(function (OperationName) {
  /** SDK内部调用上报标识, 存在则ajax请求中不上报,且不删除extraInfo,由内部代码处理上报  */
  OperationName["SDK_INTERNAL"] = "SDK_INTERNAL";
  /** 登录相关 */
  OperationName["LOGIN"] = "USER_LOGIN";
  OperationName["REGISTER"] = "USER_CREATE";
  /** 聊天室操作 */
  OperationName["GET_CHATROOM_LIST"] = "CHATROOM_FETCH_CHATROOMSWITHPAGE";
  OperationName["CREATE_CHATROOM"] = "CHATROOM_CREATECHATROOM";
  OperationName["DESTROY_CHATROOM"] = "CHATROOM_DESTORYCHATROOM";
  OperationName["GET_CHATROOM_DETAIL"] = "CHATROOM_FETCH_SPECIFICATION";
  OperationName["MODIFY_CHATROOM"] = "CHATROOM_CHANGE_ATTRIBUTE";
  OperationName["REMOVE_CHATROOM_MEMBER"] = "CHATROOM_REMOVE_MEMBER";
  OperationName["MULTI_REMOVE_CHATROOM_MEMBER"] = "CHATROOM_REMOVE_MEMBERS";
  OperationName["ADD_USERS_TO_CHATROOM"] = "CHATROOM_ADD_MEMBERS";
  OperationName["JOIN_CHATROOM"] = "CHATROOM_JOINCAHTROOM";
  OperationName["QUIT_CHATROOM"] = "CHATROOM_LEAVECAHTROOM";
  OperationName["LIST_CHATROOM_MEMBERS"] = "CHATROOM_FETCH_MEMBERS";
  OperationName["GET_CHATROOM_ADMIN"] = "CHATROOM_GET_ADMIN";
  OperationName["SET_CHATROOM_ADMIN"] = "CHATROOM_SET_ADMIN";
  OperationName["REMOVE_CHATROOM_ADMIN"] = "CHATROOM_REMOVE_ADMIN";
  OperationName["MUTE_CHATROOM_MEMBER"] = "CHATROOM_MUTE_USER";
  OperationName["REMOVE_MUTE_CHATROOM_MEMBER"] = "CHATROOM_UNMUTE_USER";
  OperationName["GET_MUTE_CHATROOM_MEMBERS"] = "CHATROOM_FETCH_MUTES";
  OperationName["SET_CHATROOM_MEMBER_TO_BLACK"] = "CHATROOM_BLOCK_USER";
  OperationName["MULTI_SET_CHATROOM_MEMBER_TO_BLACK"] = "CHATROOM_BLOCK_USERS";
  OperationName["REMOVE_CHATROOM_MEMBER_BLACK"] = "CHATROOM_UNBLOCK_USER";
  OperationName["MULTI_REMOVE_CHATROOM_MEMBER_BLACK"] = "CHATROOM_UNBLOCK_USERS";
  OperationName["GET_CHATROOM_BLOCK_MEMBERS"] = "CHATROOM_FETCH_BANS";
  OperationName["DISABLED_CHATROOM_SEND_MSG"] = "CHATROOM_MUTE_ALLMEMEBERS";
  OperationName["ENABLE_CHATROOM_SEND_MSG"] = "CHATROOM_UNMUTE_ALLMEMEBERS";
  OperationName["ADD_CHATROOM_WHITE_USERS"] = "CHATROOM_ADD_WHITELIST";
  OperationName["REMOVE_CHATROOM_WHITE_USERS"] = "CHATROOM_REMOVE_WHITELIST";
  OperationName["GET_CHATROOM_WHITE_USERS"] = "CHATROOM_FETCH_WHITELIST";
  OperationName["CHECK_CHATROOM_WHITE_USER"] = "CHATROOM_FETCH_MEMBERIN_WHITELIST";
  OperationName["GET_CHATROOM_ANN"] = "CHATROOM_FETCH_ANNOUNCEMENT";
  OperationName["UPDATE_CHATROOM_ANN"] = "CHATROOM_UPDATE_ANNOUNCEMENT";
  OperationName["DELETE_CHATROOM_FILE"] = "CHATROOM_REMOVE_SHARE_FILE";
  OperationName["GET_CHATROOM_FILES"] = "CHATROOM_GET_SHARE_FILE_LIST";
  OperationName["UPLOAD_CHATROOM_FILE"] = "CHATROOM_UPLOAD_FILE";
  OperationName["SET_CHATROOM_ATTR"] = "CHATROOM_SET_META_DATA";
  OperationName["DELETE_CHATROOM_ATTR"] = "CHATROOM_DELETE_META_DATA";
  OperationName["GET_CHATROOM_ATTR"] = "CHATROOM_FETCH_META_DATA";
  /** 群组操作 */
  OperationName["CREATE_GROUP"] = "GROUP_CREATEGROUP";
  OperationName["BLOCK_GROUP"] = "GROUP_BLOCK_MESSAGE";
  OperationName["LIST_GROUP"] = "GROUP_FETCH_PUBLICGROUPS_WITHCURSOR";
  OperationName["GET_USER_GROUP"] = "GROUP_FETCH_USERS_GROUP";
  OperationName["CHANGE_OWNER"] = "GROUP_CHANGE_OWNER";
  OperationName["GET_GROUP_INFO"] = "GROUP_FETCH_SPECIFICATION";
  OperationName["MODIFY_GROUP"] = "GROUP_CHANGE_GROUPATTRIBUTE";
  OperationName["LIST_GROUP_MEMBER"] = "GROUP_FETCH_MEMEBERS";
  OperationName["GET_GROUP_ADMIN"] = "GROUP_GET_ADMIN";
  OperationName["SET_GROUP_ADMIN"] = "GROUP_SET_ADMIN";
  OperationName["REMOVE_GROUP_ADMIN"] = "GROUP_REMOVE_ADMIN";
  OperationName["DISSOLVE_GROUP"] = "GROUP_DESTOTYGROUP";
  OperationName["QUIT_GROUP"] = "GROUP_LEAVEGROUP";
  OperationName["INVITE_TO_GROUP"] = "GROUP_INVITE_TO_GROUP";
  OperationName["JOIN_GROUP"] = "GROUP_JOIN_PUBLICGROUP";
  OperationName["AGREE_JOIN_GROUP"] = "GROUP_ACCEPT_JOINPUBLICGROUPAPPL";
  OperationName["REJECT_JOIN_GROUP"] = "GROUP_DECLINE_JOINPUBLICGROUPAPPL";
  OperationName["AGREE_INVITE_GROUP"] = "GROUP_ACCEPT_INVITATION";
  OperationName["REJECT_INVITE_GROUP"] = "GROUP_DECLINE_INVITATION";
  OperationName["REMOVE_GROUP_MEMBER"] = "GROUP_REMOVE_MEMBER";
  OperationName["MULTI_REMOVE_GROUP_MEMBER"] = "GROUP_REMOVE_MEMBERS";
  OperationName["MUTE_GROUP_MEMBER"] = "GROUP_MUTE_MEMBERS";
  OperationName["UNMUTE_GROUP_MEMBER"] = "GROUP_UNMUTE_MEMBERS";
  OperationName["GET_GROUP_MUTE_LIST"] = "GROUP_FETCH_MUTES";
  OperationName["BLOCK_GROUP_MEMBER"] = "GROUP_BLOCK_MEMBER";
  OperationName["BLOCK_GROUP_MEMBERS"] = "GROUP_BLOCK_MEMBERS";
  OperationName["UNBLOCK_GROUP_MEMBER"] = "GROUP_UNBLOCK_MEMBER";
  OperationName["UNBLOCK_GROUP_MEMBERS"] = "GROUP_UNBLOCK_MEMBERS";
  OperationName["GET_GROUP_BLACK_LIST"] = "GROUP_GET_BLOCK_LIST";
  OperationName["DISABLED_SEND_GROUP_MSG"] = "GROUP_MUTE_ALLMEMBERS";
  OperationName["ENABLE_SEND_GROUP_MSG"] = "GROUP_UNMUTE_ALLMEMBERS";
  OperationName["ADD_USERS_TO_GROUP_WHITE"] = "GROUP_ADD_WHITELIST";
  OperationName["REMOVE_GROUP_WHITE_MEMBER"] = "GROUP_REMOVE_WHITELIST";
  OperationName["GET_GROUP_WHITE_LIST"] = "GROUP_FETCH_WHITELIST";
  OperationName["IS_IN_GROUP_WHITE_LIST"] = "GROUP_IS_IN_WHITELIST";
  OperationName["GET_GROUP_MSG_READ_USER"] = "GROUP_GET_READ_USERS";
  OperationName["GET_GROUP_ANN"] = "GROUP_FETCH_ANNOUNCEMENT";
  OperationName["UPDATE_GROUP_ANN"] = "GROUP_UPDATE_ANNOUNCEMENT";
  OperationName["UPLOAD_GROUP_FILE"] = "GROUP_UPLOAD_SHAREDFILE";
  OperationName["DELETE_GROUP_FILE"] = "GROUP_DELETE_SHAREDFILE";
  OperationName["GET_GROUP_FILE_LIST"] = "GROUP_FETCH_SHAREDFILE";
  OperationName["DOWN_GROUP_FILE"] = "GROUP_DOWNLOAD_SHAREDFILE";
  OperationName["SET_GROUP_MEMBER_ATTRS"] = "GROUP_MEMBER_SET_META_DATA";
  OperationName["GET_GROUP_MEMBER_ATTR"] = "GROUP_MEMBER_FETCH_META_DATA";
  /** REST */
  OperationName["GET_SESSION_LIST"] = "REST_GET_SESSION_LIST";
  OperationName["DELETE_SESSION"] = "REST_DEL_SESSION";
  OperationName["GET_HISTORY_MSG"] = "REST_GET_HISTORY_MESSAGE";
  /** USER */
  OperationName["UPDATE_USER_INFO"] = "USER_UPDATE_USERINFO";
  OperationName["GET_USER_INFO"] = "USER_FETCH_USERINFO";
  OperationName["UPDATE_USER_NICK"] = "USER_UPDATE_NICK";
  OperationName["UPLOAD_PUSH_TOKEN"] = "USER_UPLOAD_PUSH_TOKEN";
  /** 好友操作 */
  OperationName["GET_BLACK_LIST"] = "ROSTER_BLACKLIST";
  OperationName["GET_CONTACTS"] = "ROSTER_CONTACTS";
  OperationName["add"] = "ROSTER_ADD";
  OperationName["remove"] = "ROSTER_REMOVE";
  OperationName["accept"] = "ROSTER_ACCEPT";
  OperationName["decline"] = "ROSTER_DECLINE";
  OperationName["ban"] = "ROSTER_BAN";
  OperationName["allow"] = "ROSTER_ALLOW";
  /** 发送消息 */
  OperationName["SEND_MSG"] = "MSYNC_SENDMESSAGE";
  OperationName["UPLOAD_MSG_ATTACH"] = "UPLOAD_MSG_ATTACH";
  OperationName["SEND_RECALL_MSG"] = "MSYNC_RECALLMESSAGE";
})(OperationName || (OperationName = {}));
var RequestName;
(function (RequestName) {
  RequestName["GET_DNS"] = "REST_DNSLIST";
  RequestName["LOGIN_BY_AGORA_TOKEN"] = "LOGIN_BY_AGORA_TOKEN";
  RequestName["LOGIN_BY_PWD"] = "LOGIN_BY_PWD";
  RequestName["RESISTER"] = "REGISTER";
})(RequestName || (RequestName = {}));
var NetworkType;
(function (NetworkType) {
  NetworkType[NetworkType["5G"] = 7] = "5G";
  NetworkType[NetworkType["4G"] = 7] = "4G";
  NetworkType[NetworkType["3G"] = 7] = "3G";
  NetworkType[NetworkType["2G"] = 7] = "2G";
  NetworkType[NetworkType["SLOW-2G"] = 7] = "SLOW-2G";
  NetworkType[NetworkType["WIFI"] = 2] = "WIFI";
  NetworkType[NetworkType["LAN"] = 1] = "LAN";
  NetworkType[NetworkType["DISCONNECTED"] = 0] = "DISCONNECTED";
  NetworkType[NetworkType["NONE"] = 0] = "NONE";
  NetworkType[NetworkType["UNKNOWN"] = -1] = "UNKNOWN";
  NetworkType[NetworkType["WEBIM UNABLE TO GET"] = -2] = "WEBIM UNABLE TO GET";
})(NetworkType || (NetworkType = {}));
var WSS_CODE;
(function (WSS_CODE) {
  WSS_CODE[WSS_CODE["success"] = 200] = "success";
  WSS_CODE[WSS_CODE["failed"] = 500] = "failed";
})(WSS_CODE || (WSS_CODE = {}));
var SdkProductType;
(function (SdkProductType) {
  SdkProductType[SdkProductType["web"] = 0] = "web";
  SdkProductType[SdkProductType["native"] = 1] = "native";
})(SdkProductType || (SdkProductType = {}));


/***/ }),

/***/ "./src/dataReport/upload/event-queue.ts":
/*!**********************************************!*\
  !*** ./src/dataReport/upload/event-queue.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventQueue": function() { return /* binding */ EventQueue; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/web.timers.js */ "./node_modules/core-js/modules/web.timers.js");
/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.filter.js */ "./node_modules/core-js/modules/es.array.filter.js");
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.map.js */ "./node_modules/core-js/modules/es.array.map.js");
/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ "./src/dataReport/upload/utils/index.ts");









var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var STOCK = 1000;
var EventQueue = /** @class */function () {
  function EventQueue(config) {
    this.eventQueue = [];
    this.stock = STOCK; // 每分钟限制上报数量 1000
    this.config = config;
    this.governor();
  }
  EventQueue.prototype.add = function (params) {
    if (this.stock <= 0) {
      console.warn("Event Report limit ".concat(STOCK, " per minute"));
      return;
    }
    this.eventQueue.push(params);
    this.consume();
    this.stock -= 1;
  };
  EventQueue.prototype.consume = function () {
    var _this = this;
    if (this.eventQueue.length === 0) {
      return;
    }
    if (this.timer && this.eventQueue.length <= 10) {
      clearTimeout(this.timer);
    }
    this.timer = setTimeout(function () {
      var _a;
      var batchEvents = _this.eventQueue.splice(0, 10);
      var reportEvents = batchEvents.filter(function (item) {
        return item.appId === batchEvents[0].appId;
      });
      var filterEvents = batchEvents.filter(function (item) {
        return item.appId !== batchEvents[0].appId;
      });
      (_a = _this.eventQueue).unshift.apply(_a, filterEvents);
      _this.batchSend(reportEvents);
    }, 1000);
  };
  EventQueue.prototype.governor = function () {
    var _this = this;
    var timer = setInterval(function () {
      _this.stock = STOCK;
    }, 60 * 1000);
    if (typeof addEventListener !== 'undefined') {
      addEventListener('beforeunload', function () {
        clearInterval(timer);
      });
    }
  };
  EventQueue.prototype.batchSend = function (params) {
    var _a, _b;
    if (params === void 0) {
      params = [];
    }
    if (params.length === 0) {
      return;
    }
    try {
      var jsons = params.map(function (item) {
        var biz = item.biz,
          appId = item.appId,
          eventId = item.eventId,
          restParams = __rest(item, ["biz", "appId", "eventId"]);
        return {
          eventId: Number(eventId),
          body: restParams
        };
      });
      var dt = jsons;
      (0,_utils__WEBPACK_IMPORTED_MODULE_9__.request)(this.config.token, {
        biz: (_a = params[0]) === null || _a === void 0 ? void 0 : _a.biz,
        appId: (_b = params[0]) === null || _b === void 0 ? void 0 : _b.appId,
        data: dt,
        debug: this.config.debug,
        onSuccess: this.consume.bind(this)
      });
    } catch (err) {
      console.error(err);
    }
  };
  return EventQueue;
}();


/***/ }),

/***/ "./src/dataReport/upload/index.ts":
/*!****************************************!*\
  !*** ./src/dataReport/upload/index.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventReport": function() { return /* binding */ EventReport; },
/* harmony export */   "eventReport": function() { return /* binding */ eventReport; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./src/dataReport/upload/utils/index.ts");
/* harmony import */ var _event_queue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./event-queue */ "./src/dataReport/upload/event-queue.ts");




var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};


var EventReport = /** @class */function () {
  function EventReport(params) {
    this.inited = false;
    this.appId = '';
    this.biz = '';
    this.eventQueue = {};
    this.config = _utils__WEBPACK_IMPORTED_MODULE_4__.defaultConfigParams;
    if (params) {
      this.init(params);
    }
  }
  EventReport.prototype.init = function (params) {
    var _a;
    if (params === void 0) {
      params = {};
    }
    if (!params.biz || !params.token) {
      throw new Error('Event Report: biz or token is not defined');
    }
    try {
      this.appId = (_a = params.appId) !== null && _a !== void 0 ? _a : '';
      this.biz = params.biz;
      this.config = __assign(__assign({}, _utils__WEBPACK_IMPORTED_MODULE_4__.defaultConfigParams), params);
      this.eventQueue = new _event_queue__WEBPACK_IMPORTED_MODULE_5__.EventQueue(this.config); // 初始化事件队列
      this.log(params);
      this.inited = true;
    } catch (err) {
      console.error(err);
    }
  };
  EventReport.prototype.send = function (eventId, data, config) {
    var _a;
    if (data === void 0) {
      data = {};
    }
    if (!this.inited) {
      console.error('Event Report: init is not called');
      return;
    }
    var event = __assign(__assign({}, data), {
      eventId: Number(eventId),
      biz: this.biz,
      appId: (_a = config === null || config === void 0 ? void 0 : config.appId) !== null && _a !== void 0 ? _a : this.appId
    });
    this.eventQueue.add(event);
    this.log(event);
  };
  EventReport.prototype.log = function (params) {
    try {
      if (this.config.debug) {
        var payload = params.payload,
          restParams = __rest(params, ["payload"]);
        console.log("%c Event Report: ".concat(this.config.biz, " "), 'background: #8A97FC; color: #fff');
        console.table(restParams);
        if (payload) {
          console.info('payload:');
          console.table(payload);
        }
      }
    } catch (err) {
      console.error(err);
    }
  };
  return EventReport;
}();

var eventReport = new EventReport();

/***/ }),

/***/ "./src/dataReport/upload/utils/const.ts":
/*!**********************************************!*\
  !*** ./src/dataReport/upload/utils/const.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TRACE_CONFIG": function() { return /* binding */ TRACE_CONFIG; },
/* harmony export */   "defaultConfigParams": function() { return /* binding */ defaultConfigParams; }
/* harmony export */ });
var defaultConfigParams = {
  biz: '',
  debug: false,
  token: ''
};
var TRACE_CONFIG = {
  url: 'https://data-reporting.agora.io/report',
  debugUrl: 'https://data-reporting.sh.agoralab.co/report',
  appid: '',
  biz: '' // biz 代表业务线，传错虽然可以上报成功，但后续的应用会出问题
};

/***/ }),

/***/ "./src/dataReport/upload/utils/index.ts":
/*!**********************************************!*\
  !*** ./src/dataReport/upload/utils/index.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TRACE_CONFIG": function() { return /* reexport safe */ _const__WEBPACK_IMPORTED_MODULE_0__.TRACE_CONFIG; },
/* harmony export */   "defaultConfigParams": function() { return /* reexport safe */ _const__WEBPACK_IMPORTED_MODULE_0__.defaultConfigParams; },
/* harmony export */   "request": function() { return /* reexport safe */ _request__WEBPACK_IMPORTED_MODULE_1__.request; }
/* harmony export */ });
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const */ "./src/dataReport/upload/utils/const.ts");
/* harmony import */ var _request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request */ "./src/dataReport/upload/utils/request.ts");



/***/ }),

/***/ "./src/dataReport/upload/utils/request.ts":
/*!************************************************!*\
  !*** ./src/dataReport/upload/utils/request.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "request": function() { return /* binding */ request; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ "./src/dataReport/upload/utils/const.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils */ "./src/utils/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils */ "./src/dataReport/utils.ts");

/* eslint-disable @typescript-eslint/no-empty-function */



var CURRENT_ENV = {};
var request = function request(token, params) {
  try {
    var biz = params.biz,
      appId = params.appId,
      data = params.data,
      debug = params.debug,
      onSuccess_1 = params.onSuccess;
    if (!biz) {
      throw new Error('biz is not defined');
    }
    if (!CURRENT_ENV.global) {
      CURRENT_ENV = _utils__WEBPACK_IMPORTED_MODULE_2__.utils.getEnvInfo();
    }
    var platForm = CURRENT_ENV;
    // 如果不是小程序
    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_3__.isMiniProgram)(platForm)) {
      var xhr_1 = new XMLHttpRequest();
      xhr_1.onreadystatechange = function () {
        if (xhr_1.readyState === 2) {
          onSuccess_1 === null || onSuccess_1 === void 0 ? void 0 : onSuccess_1();
        }
      };
      xhr_1.open('POST', debug ? _const__WEBPACK_IMPORTED_MODULE_1__.TRACE_CONFIG.debugUrl : _const__WEBPACK_IMPORTED_MODULE_1__.TRACE_CONFIG.url);
      xhr_1.setRequestHeader('Content-Type', 'application/json');
      xhr_1.setRequestHeader('token', token);
      xhr_1.setRequestHeader('appid', appId !== null && appId !== void 0 ? appId : _const__WEBPACK_IMPORTED_MODULE_1__.TRACE_CONFIG.appid);
      xhr_1.setRequestHeader('sendts', "".concat(Math.floor(new Date().getTime() / 1000)));
      xhr_1.setRequestHeader('biz', biz);
      xhr_1.setRequestHeader('debug', "".concat(debug));
      xhr_1.send(JSON.stringify(data));
    } else {
      var reqData = {
        url: debug ? _const__WEBPACK_IMPORTED_MODULE_1__.TRACE_CONFIG.debugUrl : _const__WEBPACK_IMPORTED_MODULE_1__.TRACE_CONFIG.url,
        data: data,
        method: 'POST',
        success: function success() {
          onSuccess_1 === null || onSuccess_1 === void 0 ? void 0 : onSuccess_1();
        },
        fail: function fail() {},
        complete: function complete() {}
      };
      var headers = {
        token: token,
        appid: appId !== null && appId !== void 0 ? appId : _const__WEBPACK_IMPORTED_MODULE_1__.TRACE_CONFIG.appid,
        sendts: "".concat(Math.floor(new Date().getTime() / 1000)),
        biz: biz,
        debug: "".concat(debug)
      };
      if (platForm.platform === 'zfb' || platForm.platform === 'dd') {
        reqData.headers = headers;
      } else {
        reqData.header = headers;
      }
      if (platForm.platform === 'dd') {
        return platForm.global.httpRequest(reqData);
      }
      platForm.global.request(reqData);
    }
  } catch (err) {
    console.error(err);
  }
};

/***/ }),

/***/ "./src/dataReport/utils.ts":
/*!*********************************!*\
  !*** ./src/dataReport/utils.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getBaseOptions": function() { return /* binding */ getBaseOptions; },
/* harmony export */   "getNetworkType": function() { return /* binding */ getNetworkType; },
/* harmony export */   "getOperationType": function() { return /* binding */ getOperationType; },
/* harmony export */   "getRandom": function() { return /* binding */ getRandom; },
/* harmony export */   "getRandomInt": function() { return /* binding */ getRandomInt; },
/* harmony export */   "getTimestamp": function() { return /* binding */ getTimestamp; },
/* harmony export */   "isMiniProgram": function() { return /* binding */ isMiniProgram; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./const */ "./src/dataReport/const.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./types */ "./src/dataReport/types.ts");










var getOperationType = function getOperationType(name) {
  var idx = Number(_types__WEBPACK_IMPORTED_MODULE_9__.OperationType[name]);
  if (idx === _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.USER_LOGIN) return 'MANUALLOGIN';
  if (idx === _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.MSYNC_SENDMESSAGE) return 'SENDMESSAGE';
  if (idx > _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.UNKNOWOPERATION && idx < _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.REST_OPERATE) {
    return 'REST';
  }
  if (idx > _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.REST_OPERATE && idx < _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.MSYNC_OPERATE) {
    return 'MESSAGE';
  }
  if (idx > _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.MSYNC_OPERATE && idx < _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.ROSTER_OPERATE) {
    return 'ROSTER';
  }
  if (idx > _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.ROSTER_OPERATE && idx < _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.USER_OPERATE) {
    return 'USER';
  }
  if (idx > _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.USER_OPERATE && idx < _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.GROUP_OPERATE) {
    return 'GROUP';
  }
  if (idx > _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.GROUP_OPERATE && idx < _types__WEBPACK_IMPORTED_MODULE_9__.OperationType.CHATROOM_OPERATE) {
    return 'CHATROOM';
  }
  return 'OPERATION';
};
var getTimestamp = function getTimestamp() {
  return new Date().getTime();
};
var isMiniProgram = function isMiniProgram(envInfo) {
  return [_utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.BAIDU, _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.WX, _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.DD, _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.ZFB, _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.TT, _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.QUICK_APP, _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.UNI].includes(envInfo.platform);
};
var getNetworkType = function getNetworkType(envInfo) {
  return new Promise(function (resolve) {
    var _a;
    if (!envInfo.platform) {
      envInfo = _utils__WEBPACK_IMPORTED_MODULE_7__.utils.getEnvInfo();
    }
    var netType = '';
    if (envInfo.platform === _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.WEB) {
      // @ts-ignore
      var connection = navigator.connection;
      if (connection === null || connection === void 0 ? void 0 : connection.type) {
        (connection === null || connection === void 0 ? void 0 : connection.type) === 'wifi';
        netType = _types__WEBPACK_IMPORTED_MODULE_9__.NetworkType.WIFI;
      } else {
        if (connection === null || connection === void 0 ? void 0 : connection.effectiveType) {
          netType = _types__WEBPACK_IMPORTED_MODULE_9__.NetworkType[connection.effectiveType.toLocaleUpperCase()];
        }
      }
      resolve(netType);
    } else if (envInfo.platform === _utils__WEBPACK_IMPORTED_MODULE_7__.PLATFORM.NODE) {
      netType = _types__WEBPACK_IMPORTED_MODULE_9__.NetworkType.UNKNOWN;
      resolve(netType);
    } else {
      (_a = envInfo.global) === null || _a === void 0 ? void 0 : _a.getNetworkType({
        success: function success(res) {
          netType = _types__WEBPACK_IMPORTED_MODULE_9__.NetworkType[res.networkType.toLocaleUpperCase()];
          resolve(netType);
        }
      });
    }
  });
};
// 获取两个值之间的随机整数
var getRandomInt = function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值
};
// 获取1-99999随机数
var getRandom = function getRandom() {
  return getRandomInt(1, 99999);
};
var getBaseOptions = function getBaseOptions(opt, envInfo) {
  if (!envInfo.platform) {
    envInfo = _utils__WEBPACK_IMPORTED_MODULE_7__.utils.getEnvInfo();
  }
  var org = opt.org,
    appkey = opt.appkey,
    deviceId = opt.deviceId,
    sdkVersion = opt.sdkVersion;
  var did = (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent) || "".concat(envInfo.platform, "_mini_program");
  var sdkServiceId = "sid_".concat(_utils__WEBPACK_IMPORTED_MODULE_7__.utils.getUniqueId(), "_").concat(getRandom());
  return {
    org: org,
    appkey: appkey,
    deviceId: deviceId,
    sdkServiceId: sdkServiceId,
    did: did,
    sdkVersion: sdkVersion,
    os: _const__WEBPACK_IMPORTED_MODULE_8__.WEB_IM_OS,
    sdkProduct: _types__WEBPACK_IMPORTED_MODULE_9__.SdkProductType.web
  };
};


/***/ }),

/***/ "./src/engineCore/connection.ts":
/*!**************************************!*\
  !*** ./src/engineCore/connection.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Connection": function() { return /* binding */ Connection; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.object.define-property.js */ "./node_modules/core-js/modules/es.object.define-property.js");
/* harmony import */ var core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_property_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/web.timers.js */ "./node_modules/core-js/modules/web.timers.js");
/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.array.filter.js */ "./node_modules/core-js/modules/es.array.filter.js");
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _mSync__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./mSync */ "./src/engineCore/mSync.ts");
/* harmony import */ var _eventHandler__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./eventHandler */ "./src/engineCore/eventHandler.ts");
/* harmony import */ var _listen__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./listen */ "./src/engineCore/listen.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _dataReport__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../dataReport */ "./src/dataReport/index.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");
/* harmony import */ var _apis_index__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../apis/index */ "./src/apis/index.ts");
/* harmony import */ var _apis_groupApi__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../apis/groupApi */ "./src/apis/groupApi.ts");
/* harmony import */ var _apis_chatRoomApi__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../apis/chatRoomApi */ "./src/apis/chatRoomApi.ts");
/* harmony import */ var _apis_presenceApi__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../apis/presenceApi */ "./src/apis/presenceApi.ts");
/* harmony import */ var _apis_silentModeApi__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../apis/silentModeApi */ "./src/apis/silentModeApi.ts");
/* harmony import */ var _apis_threadApi__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../apis/threadApi */ "./src/apis/threadApi.ts");
/* harmony import */ var _apis_translation__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../apis/translation */ "./src/apis/translation.ts");















var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
/**
 * The connection module is the module where the SDK creates long link, And all about links, friends, groups, and chat apis are all in this module
 *
 * @module Connection
 */
















var platForm = _utils__WEBPACK_IMPORTED_MODULE_16__.utils.getEnvInfo();
var isHttpDNS = platForm.platform === 'web' ? true : false;
var EMPTY_FUN = function EMPTY_FUN() {
  // do nothing
};
var SOCKJS_STATUS = {
  CLOSED: 3,
  CLOSING: 2,
  CONNECTING: 0,
  OPEN: 1
};
var Connection = /** @class */function () {
  function Connection(options) {
    var _a;
    this.name = 'connection';
    this.isDebug = options.isDebug || false;
    this.isReport = false;
    this.isHttpDNS = options.isHttpDNS === undefined ? isHttpDNS : options.isHttpDNS;
    this.heartBeatWait = options.heartBeatWait || 30000;
    this.autoReconnectNumMax = options.autoReconnectNumMax || 5;
    this.refreshDNSIntervals = this.autoReconnectNumMax < 5 ? this.autoReconnectNumMax : 5;
    this.delivery = options.delivery || false;
    this.dnsArr = ['https://rs.easemob.com', 'https://rs.chat.agora.io', 'http://59.110.89.59', 'http://39.97.193.190', 'http://39.97.193.187'];
    this.dnsIndex = 0;
    this.dnsTotal = this.dnsArr.length;
    this.restHosts = [];
    this.restTotal = 0;
    this.restIndex = 0;
    this.hostIndex = 0;
    this.socketHost = [];
    this.hostTotal = 0;
    this.times = 1; // 重联次数
    this.autoReconnectNumTotal = 0;
    this.domain = 'easemob.com';
    this.appKey = options.appKey;
    this.appName = '';
    this.orgName = '';
    this.token = '';
    this.grantType = '';
    this.apiUrl = options.apiUrl || '';
    this.url = options.url || '';
    this.https = options.https || typeof window !== 'undefined' && ((_a = window.location) === null || _a === void 0 ? void 0 : _a.protocol) === 'https:';
    // mysnc config
    this.version = '4.1.5';
    this.deviceId = options.deviceId || 'webim';
    this.osType = 16;
    this.useOwnUploadFun = options.useOwnUploadFun || false;
    this.compressType = [0];
    this.encryptType = [0];
    this.clientResource = '';
    this.expiresIn = 0;
    this.expirationTime = 0;
    this.logOut = true;
    this.context = {
      jid: {
        appKey: '',
        clientResource: '',
        domain: 'easemob.com',
        name: ''
      },
      userId: '',
      appKey: '',
      status: 0,
      restTokenData: '',
      appName: '',
      orgName: '',
      root: {},
      accessToken: ''
    };
    this._msgHash = {};
    this._msgPromiseHash = {};
    this._queues = [];
    // this.root = {}
    this._load_msg_cache = [];
    this.unSendMsgArr = [];
    this.mr_cache = {};
    this.closeInfo = null;
    this.reconnecting = false;
    if (typeof this.appKey !== 'string' || this.appKey.split('#').length !== 2) {
      throw Error("Illegal appKey: ".concat(this.appKey));
    }
    var devInfos = this.appKey.split('#');
    this.orgName = devInfos[0];
    this.appName = devInfos[1];
    this.listen = _listen__WEBPACK_IMPORTED_MODULE_20__["default"].bind(this);
    this.mSync = this.usePlugin(_mSync__WEBPACK_IMPORTED_MODULE_18__["default"]);
    this.eventHandler = this.usePlugin(_eventHandler__WEBPACK_IMPORTED_MODULE_19__.EventHandler);
    Object.assign(Connection.prototype, _apis_index__WEBPACK_IMPORTED_MODULE_24__);
    Object.assign(Connection.prototype, _apis_groupApi__WEBPACK_IMPORTED_MODULE_25__);
    Object.assign(Connection.prototype, _apis_chatRoomApi__WEBPACK_IMPORTED_MODULE_26__);
    Object.assign(Connection.prototype, _apis_presenceApi__WEBPACK_IMPORTED_MODULE_27__);
    Object.assign(Connection.prototype, _apis_silentModeApi__WEBPACK_IMPORTED_MODULE_28__);
    Object.assign(Connection.prototype, _apis_threadApi__WEBPACK_IMPORTED_MODULE_29__);
    Object.assign(Connection.prototype, _apis_translation__WEBPACK_IMPORTED_MODULE_30__);
    // 初始化DataReport
    this.dataReport = new _dataReport__WEBPACK_IMPORTED_MODULE_22__["default"]({
      appkey: this.appKey,
      org: this.orgName,
      sdkVersion: this.version,
      deviceId: this.deviceId,
      isReport: this.isReport
    });
    // util.ajax = util.ajax.bind(this);
    var _ajaxUnconventionalErrorTimes = 0;
    // eslint-disable-next-line @typescript-eslint/no-this-alias
    var _self = this;
    Object.defineProperty(_utils__WEBPACK_IMPORTED_MODULE_16__.utils, 'ajaxUnconventionalErrorTimes', {
      set: function set(value) {
        if (value === 0) {
          return;
        }
        _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug("rest api request fail times: ".concat(value));
        _ajaxUnconventionalErrorTimes = value;
        if (_ajaxUnconventionalErrorTimes % 5 === 0 && this.isHttpDNS) {
          _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('refresh dns config when rest request fail.');
          getHttpDNS.call(_self, 'refresh', {}, {});
        }
      },
      get: function get() {
        return _ajaxUnconventionalErrorTimes;
      }
    });
  }
  /**
   * @hidden
   */
  Connection.prototype.usePlugin = function (plugin, name) {
    if (name) {
      this[name] = new plugin(this);
    } else {
      return new plugin(this);
    }
  };
  /**
   * @hidden
   * @deprecated
   * Registers the listener function.
   */
  /**
   * @hidden
   * @deprecated
   * 注册监听函数。
   */
  Connection.prototype.listen = function (parameters) {
    //
  };
  /**
   * Registers the listener function.
   */
  /**
   * 注册监听函数。
   */
  Connection.prototype.addEventHandler = function (id, handler) {
    //
  };
  /**
   * Removes the listener function.
   */
  /**
   * 移除监听函数。
   */
  Connection.prototype.removeEventHandler = function (id) {
    //
  };
  /** Registers a user. */
  /** 注册用户。 */
  Connection.prototype.registerUser = function (params) {
    var _this = this;
    return new Promise(function (resolve, reject) {
      var rpt = _this.dataReport.geOperateFun({
        uid: params.username,
        operationName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.OperationName.REGISTER
      });
      if (_this.isHttpDNS) {
        _this.dnsIndex = 0;
        var options = __assign(__assign({}, params), {
          user: params.username,
          pwd: params.password,
          promise: {
            resolve: resolve,
            reject: reject
          }
        });
        getHttpDNS.call(_this, 'signup', options, {
          rpt: rpt
        });
      } else {
        var options = __assign(__assign({}, params), {
          promise: {
            resolve: resolve,
            reject: reject
          }
        });
        signup.call(_this, options, {
          rpt: rpt
        });
      }
    });
  };
  /** Logs in. */
  /** 登录。 */
  Connection.prototype.open = function (parameters) {
    var _this = this;
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('open');
    return new Promise(function (resolve, reject) {
      if (!_checkOpenParams.call(_this, parameters)) {
        return;
      }
      if (parameters.accessToken) {
        _this.token = parameters.accessToken;
      }
      var params = __assign(__assign({}, parameters), {
        promise: {
          resolve: resolve,
          reject: reject
        }
      });
      var rpt = _this.dataReport.geOperateFun({
        uid: parameters.user,
        operationName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.OperationName.LOGIN
      });
      if (_this.isHttpDNS) {
        getHttpDNS.call(_this, 'login', params, {
          rpt: rpt
        });
      } else {
        login.call(_this, params, {
          rpt: rpt
        });
      }
    });
  };
  /** Checks the connection status. - `true`: Connected; - (Default)`false`: Not connected.  */
  /** 监测连接状态。-`true`：已连接；- `false`：未连接。*/
  Connection.prototype.isOpened = function () {
    return this.sock && this.sock.readyState === SOCKJS_STATUS.OPEN || false;
  };
  /** Closes the connection. */
  /** 关闭连接。 */
  Connection.prototype.close = function () {
    this.logOut = true;
    this.reconnecting = false;
    this.context.status = _status__WEBPACK_IMPORTED_MODULE_17__.Code.STATUS_CLOSING;
    this.sock && this.sock.close();
    this.stopHeartBeat();
    this.rejectMessage();
    this.context.status = _status__WEBPACK_IMPORTED_MODULE_17__.Code.STATUS_CLOSED;
    this._load_msg_cache = [];
    this.unSendMsgArr = [];
    this._queues = [];
    this._msgHash = {};
    this.mr_cache = {};
    this.token = '';
    this.context.accessToken = '';
  };
  /**
   * @hidden
   */
  Connection.prototype.stopHeartBeat = function () {
    clearInterval(this.heartBeatID);
  };
  /** @hidden */
  Connection.prototype.clear = function () {
    this.restTotal = 0;
    this.restIndex = 0;
    this.hostIndex = 0;
    this.hostTotal = 0;
  };
  /** @hidden */
  Connection.prototype.heartBeat = function () {
    //
  };
  /** Updates token. */
  /** 更新 token。 */
  Connection.prototype.renewToken = function (agoraToken) {
    var _this = this;
    if (!this.isOpened()) {
      return Promise.reject({
        status: false
      });
    }
    return this.getChatToken(agoraToken).then(function (res) {
      var currentTime = Date.now();
      _this.expirationTime = res.expire_timestamp;
      _this.expiresIn = res.expire_timestamp - currentTime;
      _this.token = res.access_token;
      _this.context.accessToken = res.access_token;
      _this.clearTokenTimeout();
      _this.tokenExpireTimeCountDown(_this.expiresIn);
      return {
        status: true,
        token: res.access_token,
        expire: res.expire_timestamp
      };
    });
  };
  /** @hidden */
  Connection.prototype.clearTokenTimeout = function () {
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('clearTokenTimeout');
    this.tokenWillExpireTimer && clearTimeout(this.tokenWillExpireTimer);
    this.tokenExpiredTimer && clearTimeout(this.tokenExpiredTimer);
  };
  /** @hidden */
  Connection.prototype.tokenExpireTimeCountDown = function (duration) {
    var _this = this;
    if (duration > Math.pow(2, 31) - 1) {
      duration = Math.pow(2, 31) - 1;
    }
    this.tokenWillExpireTimer = setTimeout(function () {
      var _a;
      _this.onTokenWillExpire && _this.onTokenWillExpire();
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onTokenWillExpire');
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('onTokenWillExpire', duration);
    }, duration / 2);
    this.tokenExpiredTimer = setTimeout(function () {
      var _a;
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('onTokenExpired', duration);
      _this.onTokenExpired && _this.onTokenExpired();
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onTokenExpired');
      _this.close();
    }, duration);
  };
  /** @hidden */
  Connection.prototype.compareTokenExpireTime = function (currentTime, tokenExpireTime) {
    var _a;
    var expiresIn = Number(tokenExpireTime) - Number(currentTime);
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('compareTokenExpireTime', expiresIn);
    if (expiresIn <= this.expiresIn / 2 && expiresIn > 0) {
      this.onTokenWillExpire && this.onTokenWillExpire();
      (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onTokenWillExpire');
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('onTokenWillExpire', expiresIn);
    } else if (expiresIn <= 0) {
      this.closeByTokenExpired();
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('closeByTokenExpired', expiresIn);
    }
  };
  /** @hidden */
  Connection.prototype.closeByTokenExpired = function () {
    var _a;
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('closed By TokenExpired');
    this.onTokenExpired && this.onTokenExpired();
    (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onTokenExpired');
    this.close();
  };
  /** @hidden */
  Connection.prototype.rejectMessage = function () {
    var _this = this;
    var unSendMsgIds = Object.keys(this._msgHash);
    if (unSendMsgIds.length > 0) {
      var sendMsgError_1 = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.MESSAGE_WEBSOCKET_DISCONNECTED,
        message: 'websocket disconnected'
      });
      unSendMsgIds.forEach(function (item) {
        _this._msgHash[item].reject instanceof Function && _this._msgHash[item].reject(sendMsgError_1);
        _this._msgHash[item].fail instanceof Function && _this._msgHash[item].fail(sendMsgError_1);
        delete _this._msgHash[item];
      });
    }
  };
  /** @hidden */
  Connection.prototype.resetConnState = function () {
    this.mSync.stopHeartBeat();
    this.times = 1;
    this.autoReconnectNumTotal = 0;
    this.hostIndex = 0;
  };
  /** @hidden */
  Connection.prototype.reconnect = function () {
    var _this = this;
    var _a;
    if (this.sock.readyState === SOCKJS_STATUS.CONNECTING) return;
    if (this.sock.readyState === SOCKJS_STATUS.OPEN) {
      return;
    }
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('reconnect: time', this.times);
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('reconnect sock.readyState: ', this.sock.readyState);
    // 正在重连中
    if (this.reconnecting === false) {
      this.reconnecting = true;
    }
    (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onReconnecting');
    this.rejectMessage();
    if (this.isHttpDNS) {
      if (this.hostIndex < this.socketHost.length - 1) {
        this.hostIndex++; //重连时改变ip地址
      } else {
        this.hostIndex = this.socketHost.length - 1;
      }
    }
    setTimeout(function () {
      if (_this.sock.readyState === SOCKJS_STATUS.OPEN) {
        return;
      }
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('login sock.readyState: ', _this.sock.readyState);
      _this.sock.close();
      _login.call(_this, {
        access_token: _this.context.accessToken
      });
      _this.times++;
    }, this.times * 500);
    this.autoReconnectNumTotal++;
  };
  /** Sends message. */
  /** 发送消息。 */
  Connection.prototype.send = function (params) {
    return Promise.resolve(null);
  };
  /** @hidden */
  Connection.max_cache_length = 100;
  /** @hidden */
  Connection._getSock = function () {
    //
  };
  return Connection;
}();
function signup(params, rptInfo) {
  var _this = this;
  var rpt = rptInfo.rpt,
    isRetry = rptInfo.isRetry;
  var p = params.promise;
  var apiUrl = this.apiUrl;
  var restUrl = apiUrl + '/' + this.orgName + '/' + this.appName + '/users';
  var commonDt = {
    requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.RESISTER,
    requestUrl: restUrl
  };
  var suc = function suc(res) {
    params.success && params.success(res);
    var result = __assign(__assign({}, res), {
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_SUCCESS
    });
    p.resolve && p.resolve(result);
    var _a = res.extraInfo,
      httpCode = _a.httpCode,
      elapse = _a.elapse;
    var dt = {
      requestElapse: elapse,
      isSuccess: 1,
      code: httpCode
    };
    rpt({
      isEndApi: true,
      isRetry: isRetry,
      data: __assign(__assign({}, dt), commonDt)
    });
  };
  var err = params.error || EMPTY_FUN;
  if (!this.orgName && !this.appName) {
    var error_1 = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR,
      message: 'signup error'
    });
    err(error_1);
    // p.reject && p.reject(error);
    // return Promise.reject(error);
  }

  var userInfo = JSON.stringify({
    username: params.username,
    password: params.password,
    nickname: params.nickname || ''
  });
  var error = function error(res) {
    var _a = res.extraInfo,
      elapse = _a.elapse,
      httpCode = _a.httpCode,
      errDesc = _a.errDesc;
    var dt = {
      requestElapse: elapse,
      isSuccess: 0,
      code: httpCode,
      codeDesc: errDesc
    };
    rpt({
      isRetry: isRetry,
      data: __assign(__assign({}, dt), commonDt)
    });
    if (_this.isHttpDNS && _this.restIndex + 1 < _this.restTotal) {
      _this.restIndex++;
      getRestFromHttpDNS.call(_this);
      signup.call(_this, params, {
        rpt: rpt,
        isRetry: isRetry
      });
      return Promise.reject(res);
    } else {
      rpt({
        data: {
          isLastApi: 1,
          isSuccess: 0
        }
      });
    }
    _this.clear();
    p.reject && p.reject(res);
    return err(res);
  };
  var options = {
    headers: {
      'Content-type': 'application/json'
    },
    url: restUrl,
    dataType: 'json',
    data: userInfo,
    success: suc,
    error: error
  };
  return _utils__WEBPACK_IMPORTED_MODULE_16__.utils.ajax(options)["catch"](function (e) {
    p.reject && p.reject(e);
  });
}
function login(params, rptInfo) {
  var _this = this;
  if (!_checkOpenParams.call(this, params)) {
    return;
  }
  if (this.isOpened()) {
    return;
  }
  var rpt = rptInfo.rpt,
    isRetry = rptInfo.isRetry;
  setContext.call(this, params);
  this.user = params.user;
  var p = params.promise;
  var appName = this.context.appName;
  var orgName = this.context.orgName;
  var apiUrl = this.apiUrl + '/' + orgName + '/' + appName + '/token';
  if (params.agoraToken) {
    this.grantType = 'agoraToken';
    this.getChatToken(params.agoraToken).then(function (res) {
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('getChatToken result:', res);
      _this.expirationTime = res.expire_timestamp;
      _this.token = res.access_token;
      _this.context.accessToken = res.access_token;
      _this.context.restTokenData = res.access_token;
      var _a = res.extraInfo,
        httpCode = _a.httpCode,
        elapse = _a.elapse;
      p.resolve({
        accessToken: res.access_token,
        expireTimestamp: res.expire_timestamp
      });
      var commonDt = {
        requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.LOGIN_BY_AGORA_TOKEN,
        requestUrl: apiUrl,
        requestElapse: elapse,
        isSuccess: 1,
        code: httpCode
      };
      rpt({
        data: commonDt
      });
      _login.call(_this, __assign(__assign({}, params), {
        access_token: res.access_token
      }), rpt);
    })["catch"](function (e) {
      var _a;
      var error = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_GETROSTER_ERROR,
        message: 'get chat token fail',
        data: e
      });
      p.reject(error);
      _this.onError && _this.onError(error);
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onError', error);
      var _b = e.extraInfo,
        elapse = _b.elapse,
        httpCode = _b.httpCode,
        errDesc = _b.errDesc;
      var commonDt = {
        requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.LOGIN_BY_AGORA_TOKEN,
        requestUrl: apiUrl,
        requestElapse: elapse,
        isSuccess: 0,
        code: httpCode,
        codeDesc: errDesc
      };
      rpt({
        data: commonDt
      });
      // 上报登录操作结束
      rpt({
        data: {
          isLastApi: 1,
          isSuccess: 0
        }
      });
    });
  } else if (params.accessToken) {
    this.grantType = 'accessToken';
    this.token = params.accessToken;
    this.context.accessToken = params.accessToken;
    this.context.restTokenData = params.accessToken;
    p.resolve({
      accessToken: params.accessToken
    });
    _login.call(this, params, rpt);
  } else {
    this.grantType = 'password';
    var suc = function suc(res) {
      if (typeof params.success === 'function') {
        params.success(res);
      }
      _this.token = res.access_token;
      _this.context.restTokenData = res.access_token;
      _this.context.accessToken = res.access_token;
      _this.expiresIn = res.expires_in;
      _this.clearTokenTimeout();
      _this.tokenExpireTimeCountDown(_this.expiresIn);
      p.resolve({
        accessToken: res.access_token,
        duration: res.expires_in
      });
      var _a = res.extraInfo,
        httpCode = _a.httpCode,
        elapse = _a.elapse;
      var commonDt = {
        requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.LOGIN_BY_PWD,
        requestElapse: elapse,
        requestUrl: apiUrl,
        isSuccess: 1,
        code: httpCode
      };
      rpt({
        isRetry: isRetry,
        data: commonDt
      });
      _login.call(_this, res, rpt);
    };
    var error = function error(res) {
      var _a = res.extraInfo,
        elapse = _a.elapse,
        httpCode = _a.httpCode,
        errDesc = _a.errDesc;
      var commonDt = {
        requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.LOGIN_BY_PWD,
        requestElapse: elapse,
        requestUrl: apiUrl,
        isSuccess: 0,
        code: httpCode,
        codeDesc: errDesc
      };
      rpt({
        isRetry: isRetry,
        data: commonDt
      });
      if (_this.isHttpDNS && _this.restIndex + 1 < _this.restTotal) {
        _this.restIndex++;
        getRestFromHttpDNS.call(_this);
        login.call(_this, params, {
          rpt: rpt,
          isRetry: true
        });
        return;
      } else {
        rpt({
          data: {
            isLastApi: 1,
            isSuccess: 0
          }
        });
      }
      _this.clear();
      var errorObj;
      if (res.error && res.error_description) {
        // 3.0 版本回调
        errorObj = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_OPEN_USERGRID_ERROR,
          message: res.error_description,
          data: res
        });
        _this.onError && _this.onError(errorObj);
      } else {
        errorObj = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_OPEN_ERROR,
          message: res.error_description,
          data: res
        });
        _this.onError && _this.onError(errorObj);
      }
      if (typeof params.error === 'function') {
        params.error(errorObj);
      }
      p.reject(errorObj);
      // return Promise.reject(errorObj)
    };

    var loginParams = {
      grant_type: 'password',
      username: params.user,
      password: params.pwd,
      timestamp: +new Date()
    };
    var loginParamsSting = JSON.stringify(loginParams);
    var options = {
      headers: {
        'Content-type': 'application/json'
      },
      url: apiUrl,
      dataType: 'json',
      data: loginParamsSting,
      success: suc || EMPTY_FUN,
      error: error || EMPTY_FUN,
      version: '4.0.8'
    };
    _utils__WEBPACK_IMPORTED_MODULE_16__.utils.ajax(options)["catch"](function (res) {
      console.warn(res);
    });
  }
  _utils__WEBPACK_IMPORTED_MODULE_16__.utils.listenNetwork(online.bind(this), offline.bind(this));
}
function online() {
  var _a;
  _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('online');
  this.onOnline && this.onOnline();
  (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onOnline');
  if (this.sock && this.sock.readyState !== 1) {
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('sock.readyState:', this.sock.readyState);
    if (!this.logOut && !this.reconnecting) {
      this.reconnect();
    }
  }
}
function offline() {
  var _a;
  _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('offline');
  this.onOffline && this.onOffline();
  (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onOffline');
}
function _login(parames, rpt) {
  var _this = this;
  var sock = this._getSock();
  this.sock = sock;
  var onopenCallback = function onopenCallback() {
    var _a;
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('websockt onOpen');
    if (rpt) {
      rpt({
        data: {
          isLastApi: 1,
          isSuccess: 1,
          accessChannel: (_a = _this.socketHost[_this.hostIndex]) === null || _a === void 0 ? void 0 : _a.channel
        }
      });
    }
    var getProvisionMsg = _utils__WEBPACK_IMPORTED_MODULE_16__.utils.flow([_this.mSync.generateProvision, _this.mSync.base64transform]);
    var provisionMsg = getProvisionMsg();
    try {
      sock.send(provisionMsg);
    } catch (e) {
      var error = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.SDK_RUNTIME_ERROR,
        message: 'send message error',
        data: e
      });
      _this.onError && _this.onError(error);
    }
  };
  var oncloseCallback = function oncloseCallback(evt) {
    setTimeout(function () {
      var _a, _b, _c, _d, _e;
      _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('websocket onClose');
      if (platForm.platform === 'zfb' || platForm.platform === 'dd') {
        _this.sock.readyState = SOCKJS_STATUS.CLOSED;
      }
      var isProvisionError = (evt === null || evt === void 0 ? void 0 : evt.code) === 401 || ((_a = _this.closeInfo) === null || _a === void 0 ? void 0 : _a.code) === 401;
      // 如果是用户行为导致的退出（close, 多设备踢出等）
      if (_this.logOut) {
        _this.clear();
        _this.resetConnState();
        if (isProvisionError) {
          _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('websocket provision error');
          _this.closeInfo = null;
        }
        _this.onClosed && _this.onClosed();
        (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onDisconnected');
      } else {
        // msync 401断开连接，不进行重连
        if (isProvisionError) {
          _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('websocket provision error');
          var err = {
            type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNECTION_ERROR,
            message: 'provision error',
            data: evt
          };
          _this.closeInfo = null;
          _this.onError && _this.onError(err);
          (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onError', err);
          _this.onClosed && _this.onClosed();
          (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onDisconnected');
          _this.resetConnState();
        } else {
          // 如果当前重连次数 < 重连最大次数,则进行重连
          if (_this.autoReconnectNumTotal < _this.autoReconnectNumMax) {
            _this.reconnect();
            var error = {
              type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_DISCONNECTED,
              message: 'websocket has been disconnected'
            };
            _this.onError && _this.onError(error);
            if (_this.autoReconnectNumTotal % _this.refreshDNSIntervals === 0 && platForm.platform === 'web' && _this.isHttpDNS) {
              _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('refresh dns config when websocket close');
              getHttpDNS.call(_this, 'refresh', {}, {});
            }
          } else {
            // 否则重连失败
            var error = {
              type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_DISCONNECTED,
              message: 'websocket has been disconnected'
            };
            _this.onError && _this.onError(error);
            _this.onClosed && _this.onClosed();
            (_e = _this.eventHandler) === null || _e === void 0 ? void 0 : _e.dispatch('onDisconnected');
            _this.resetConnState();
            _this.reconnecting = false;
            _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('reconnect fail');
          }
        }
      }
    }, 0);
  };
  var onmessageCallback = function onmessageCallback(msg) {
    var _a = _this.mSync,
      decodeMSync = _a.decodeMSync,
      distributeMSync = _a.distributeMSync;
    var dealwithMsg = _utils__WEBPACK_IMPORTED_MODULE_16__.utils.flow([decodeMSync, distributeMSync]);
    dealwithMsg(msg);
  };
  var onerrorCallback = function onerrorCallback(err) {
    var _a, _b;
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('mini program sock on error', err);
    // this.isOnCloseReconnect = false;
    _this.onError && _this.onError({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNECTION_ERROR,
      message: 'on socket error',
      data: err
    });
    if (!_this.logOut) {
      if (_this.autoReconnectNumTotal < _this.autoReconnectNumMax) {
        _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('sock.onError reconnect', _this.autoReconnectNumTotal, _this.autoReconnectNumMax);
        _this.reconnect();
        if (_this.autoReconnectNumTotal % _this.refreshDNSIntervals === 0 && platForm.platform === 'web' && _this.isHttpDNS) {
          _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('refresh dns config when websocket error');
          getHttpDNS.call(_this, 'refresh', {}, {});
        }
      } else {
        var error = {
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_DISCONNECTED,
          message: 'websocket has been disconnected'
        };
        _this.onError && _this.onError(error);
        _this.onClosed && _this.onClosed();
        (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onDisconnected');
        _this.resetConnState();
        _this.reconnecting = false;
        _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('reconnect fail');
      }
    }
    if (rpt) {
      rpt({
        data: {
          isLastApi: 1,
          isSuccess: 0,
          accessChannel: (_b = _this.socketHost[_this.hostIndex]) === null || _b === void 0 ? void 0 : _b.channel
        }
      });
    }
  };
  if (platForm.platform === 'web') {
    sock.onopen = onopenCallback;
    sock.onclose = oncloseCallback;
    sock.onmessage = onmessageCallback;
  } else {
    sock.onOpen(onopenCallback);
    sock.onMessage(onmessageCallback);
    sock.onClose(oncloseCallback);
    // uniapp 运行到h5, onError会和onClose重复执行
    if (!(typeof window !== 'undefined' && window.WebSocket)) {
      sock.onError(onerrorCallback);
    }
  }
}
function _checkOpenParams(param) {
  if (param.user === '') {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR,
      message: 'the user cannot be empty'
    });
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('open params error', error);
    this.onError && this.onError(error);
    return false;
  }
  var appKey = this.appKey;
  var devInfos = appKey.split('#');
  if (devInfos.length !== 2 || !devInfos[0] || !devInfos[1]) {
    var error = _error_error__WEBPACK_IMPORTED_MODULE_15__["default"].create({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR,
      message: 'the appKey is illegal'
    });
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('open params error', error);
    this.onError && this.onError(error);
    return false;
  }
  return true;
}
function setContext(param) {
  this.context.jid = {
    appKey: this.appKey,
    name: param.user,
    domain: this.domain,
    clientResource: this.clientResource
  };
  var devInfos = this.appKey.split('#');
  var orgName = devInfos[0];
  var appName = devInfos[1];
  // this.context.sock = sock;
  this.context.root = this.root;
  this.context.userId = param.user;
  this.context.appKey = this.appKey;
  this.context.appName = appName;
  this.context.orgName = orgName;
}
function getHttpDNS(action, loginoptions, rptInfo) {
  var _this = this;
  var rpt = rptInfo.rpt,
    isRetry = rptInfo.isRetry;
  var apiUrl = this.dnsArr[this.dnsIndex] + '/easemob/server.json';
  var suc = function suc(data) {
    var _a = data.extraInfo,
      elapse = _a.elapse,
      httpCode = _a.httpCode;
    var dt = {
      requestUrl: apiUrl,
      requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.GET_DNS,
      requestElapse: elapse,
      isSuccess: 1,
      code: httpCode
    };
    // 如果开启数据上报,注意是字符串true
    if ((data === null || data === void 0 ? void 0 : data.enableDataReport) === 'true') {
      _this.dataReport.setIsCollectDt(true);
      _this.dataReport.setIsReportDt(true);
    } else {
      _this.dataReport.setIsReportDt(false);
      _this.dataReport.setIsCollectDt(false);
    }
    rpt && rpt({
      isRetry: isRetry,
      data: dt
    });
    var restHosts = data.rest.hosts;
    var httpType = _this.https ? 'https' : 'http';
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.info('httpType: ' + httpType);
    if (!restHosts) {
      return Promise.reject(false);
    }
    var useRestHosts = restHosts.filter(function (item) {
      if (item.protocol === httpType) {
        return item;
      }
      // return Promise.reject(false);
    });
    // 这段的意义？
    for (var i = 0; i < useRestHosts.length; i++) {
      if (useRestHosts[i].protocol === httpType) {
        var currentPost = useRestHosts[i];
        useRestHosts.splice(i, 1);
        useRestHosts.unshift(currentPost);
      }
    }
    _this.restHosts = useRestHosts;
    _this.restTotal = useRestHosts.length;
    //get websocket server ips
    var socketHost = data['msync-ws'].hosts;
    if (!socketHost) {
      return Promise.reject(false);
    }
    var useSocketHosts = socketHost.filter(function (item) {
      if (item.protocol === httpType) {
        return item;
      }
      return false;
    });
    _this.socketHost = useSocketHosts;
    _this.hostTotal = useSocketHosts.length;
    getRestFromHttpDNS.call(_this);
    if (action === 'refresh') {
      return;
    }
    if (action === 'login') {
      login.call(_this, loginoptions, {
        rpt: rpt
      });
    } else {
      signup.call(_this, loginoptions, {
        rpt: rpt
      });
    }
  };
  var error = function error(e) {
    var _a = e.extraInfo,
      elapse = _a.elapse,
      httpCode = _a.httpCode,
      errDesc = _a.errDesc;
    var dt = {
      requestUrl: apiUrl,
      requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_23__.RequestName.GET_DNS,
      isSuccess: 0,
      code: httpCode,
      codeDesc: errDesc,
      requestElapse: elapse
    };
    rpt && rpt({
      isRetry: isRetry,
      data: dt
    });
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('getHttpDNS fail: ' + _this.dnsIndex);
    _this.dnsIndex++;
    if (_this.dnsIndex < _this.dnsTotal) {
      getHttpDNS.call(_this, action, loginoptions, {
        rpt: rpt,
        isRetry: true
      });
    }
  };
  var options = {
    url: apiUrl,
    dataType: 'json',
    type: 'GET',
    data: {
      app_key: encodeURIComponent(this.appKey)
    },
    success: suc || EMPTY_FUN,
    error: error || EMPTY_FUN
  };
  return _utils__WEBPACK_IMPORTED_MODULE_16__.utils.ajax(options)["catch"](function (res) {
    console.warn(res);
  });
}
function getRestFromHttpDNS() {
  var _a, _b;
  if (this.restIndex > this.restTotal) {
    _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('restIndex > restTotal');
    return '';
  }
  var url = '';
  var host = this.restHosts[this.restIndex];
  var domain = host.domain;
  var ip = host.ip;
  var port = host.port;
  var httpType = this.https ? 'https:' : 'http:';
  if (ip && typeof window !== 'undefined' && ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.protocol) === 'http:') {
    url = httpType + '//' + ip + ':' + port;
  } else {
    url = httpType + '//' + domain;
    if (port && port !== '80' && port !== '443') {
      url += ":".concat(port);
    }
    if (typeof window !== 'undefined' && !window.location) {
      url = 'https://' + domain;
    }
    if (typeof window !== 'undefined' && window.location && ((_b = window.location) === null || _b === void 0 ? void 0 : _b.protocol) === 'file:') {
      url = 'https://' + domain;
    }
  }
  if (typeof window === 'undefined') {
    url = httpType + '//' + domain;
  }
  this.apiUrl = url;
  return url;
}


/***/ }),

/***/ "./src/engineCore/eventHandler.ts":
/*!****************************************!*\
  !*** ./src/engineCore/eventHandler.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventHandler": function() { return /* binding */ EventHandler; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");


var EventHandler = /** @class */function () {
  function EventHandler(Connection, eventHandlerId, eventHandler) {
    this.handlerData = {};
    this.handlerData = {};
    Connection.addEventHandler = this.addEventHandler.bind(this);
    Connection.removeEventHandler = this.removeEventHandler.bind(this);
  }
  /** Adds listening events. */
  /** 添加监听事件。 */
  EventHandler.prototype.addEventHandler = function (eventHandlerId, eventHandler) {
    this.handlerData[eventHandlerId] = eventHandler;
  };
  /** Removes listening events. */
  /** 移除监听事件。 */
  EventHandler.prototype.removeEventHandler = function (eventHandlerId) {
    delete this.handlerData[eventHandlerId];
  };
  /** @hidden */
  EventHandler.prototype.dispatch = function (event, parameters) {
    _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('dispatch event: ' + event, parameters ? parameters : '');
    for (var handler in this.handlerData) {
      var cb = this.handlerData[handler][event];
      cb && cb(parameters);
      // if (typeof this.handlerData[handler][event] !== 'function') return
      // this.handlerData[handler][event](parameters)
    }
  };

  return EventHandler;
}();


/***/ }),

/***/ "./src/engineCore/listen.ts":
/*!**********************************!*\
  !*** ./src/engineCore/listen.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ listen; }
/* harmony export */ });
var EMPTY_FUN = function EMPTY_FUN() {
  // do nothing
};
function listen(parameters) {
  this.onOpened = parameters.onOpened || EMPTY_FUN;
  this.onPresence = parameters.onPresence || EMPTY_FUN;
  this.onTextMessage = parameters.onTextMessage || EMPTY_FUN;
  this.onPictureMessage = parameters.onPictureMessage || EMPTY_FUN;
  this.onAudioMessage = parameters.onAudioMessage || EMPTY_FUN;
  this.onVideoMessage = parameters.onVideoMessage || EMPTY_FUN;
  this.onFileMessage = parameters.onFileMessage || EMPTY_FUN;
  this.onLocationMessage = parameters.onLocationMessage || EMPTY_FUN;
  this.onCmdMessage = parameters.onCmdMessage || EMPTY_FUN;
  this.onCustomMessage = parameters.onCustomMessage || EMPTY_FUN;
  this.onReceivedMessage = parameters.onReceivedMessage || EMPTY_FUN;
  this.onDeliveredMessage = parameters.onDeliveredMessage || EMPTY_FUN;
  this.onReadMessage = parameters.onReadMessage || EMPTY_FUN;
  this.onRecallMessage = parameters.onRecallMessage || EMPTY_FUN;
  this.onChannelMessage = parameters.onChannelMessage || EMPTY_FUN;
  this.onError = parameters.onError || EMPTY_FUN;
  this.onOffline = parameters.onOffline || EMPTY_FUN;
  this.onOnline = parameters.onOnline || EMPTY_FUN;
  this.onStatisticMessage = parameters.onStatisticMessage || EMPTY_FUN;
  this.onContactInvited = parameters.onContactInvited || EMPTY_FUN;
  this.onContactAgreed = parameters.onContactAgreed || EMPTY_FUN;
  this.onContactRefuse = parameters.onContactRefuse || EMPTY_FUN;
  this.onContactDeleted = parameters.onContactDeleted || EMPTY_FUN;
  this.onContactAdded = parameters.onContactAdded || EMPTY_FUN;
  this.onTokenWillExpire = parameters.onTokenWillExpire || EMPTY_FUN;
  this.onTokenExpired = parameters.onTokenExpired || EMPTY_FUN;
  this.onClosed = parameters.onClosed || EMPTY_FUN;
  this.onPresenceStatusChange = parameters.onPresenceStatusChange || EMPTY_FUN;
}

/***/ }),

/***/ "./src/engineCore/mSync.ts":
/*!*********************************!*\
  !*** ./src/engineCore/mSync.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MsyncMessageType": function() { return /* binding */ MsyncMessageType; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_array_some_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.array.some.js */ "./node_modules/core-js/modules/es.array.some.js");
/* harmony import */ var core_js_modules_es_array_some_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_some_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/web.timers.js */ "./node_modules/core-js/modules/web.timers.js");
/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var core_js_modules_es_array_buffer_constructor_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! core-js/modules/es.array-buffer.constructor.js */ "./node_modules/core-js/modules/es.array-buffer.constructor.js");
/* harmony import */ var core_js_modules_es_array_buffer_constructor_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_buffer_constructor_js__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var core_js_modules_es_array_buffer_slice_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! core-js/modules/es.array-buffer.slice.js */ "./node_modules/core-js/modules/es.array-buffer.slice.js");
/* harmony import */ var core_js_modules_es_array_buffer_slice_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_buffer_slice_js__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var core_js_modules_es_typed_array_uint8_array_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint8-array.js */ "./node_modules/core-js/modules/es.typed-array.uint8-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint8_array_js__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint8_array_js__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var core_js_modules_es_typed_array_copy_within_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! core-js/modules/es.typed-array.copy-within.js */ "./node_modules/core-js/modules/es.typed-array.copy-within.js");
/* harmony import */ var core_js_modules_es_typed_array_copy_within_js__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_copy_within_js__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var core_js_modules_es_typed_array_every_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! core-js/modules/es.typed-array.every.js */ "./node_modules/core-js/modules/es.typed-array.every.js");
/* harmony import */ var core_js_modules_es_typed_array_every_js__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_every_js__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var core_js_modules_es_typed_array_fill_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! core-js/modules/es.typed-array.fill.js */ "./node_modules/core-js/modules/es.typed-array.fill.js");
/* harmony import */ var core_js_modules_es_typed_array_fill_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_fill_js__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var core_js_modules_es_typed_array_filter_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! core-js/modules/es.typed-array.filter.js */ "./node_modules/core-js/modules/es.typed-array.filter.js");
/* harmony import */ var core_js_modules_es_typed_array_filter_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_filter_js__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var core_js_modules_es_typed_array_find_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! core-js/modules/es.typed-array.find.js */ "./node_modules/core-js/modules/es.typed-array.find.js");
/* harmony import */ var core_js_modules_es_typed_array_find_js__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_find_js__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var core_js_modules_es_typed_array_find_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! core-js/modules/es.typed-array.find-index.js */ "./node_modules/core-js/modules/es.typed-array.find-index.js");
/* harmony import */ var core_js_modules_es_typed_array_find_index_js__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_find_index_js__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var core_js_modules_es_typed_array_for_each_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! core-js/modules/es.typed-array.for-each.js */ "./node_modules/core-js/modules/es.typed-array.for-each.js");
/* harmony import */ var core_js_modules_es_typed_array_for_each_js__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_for_each_js__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var core_js_modules_es_typed_array_includes_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! core-js/modules/es.typed-array.includes.js */ "./node_modules/core-js/modules/es.typed-array.includes.js");
/* harmony import */ var core_js_modules_es_typed_array_includes_js__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_includes_js__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var core_js_modules_es_typed_array_index_of_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! core-js/modules/es.typed-array.index-of.js */ "./node_modules/core-js/modules/es.typed-array.index-of.js");
/* harmony import */ var core_js_modules_es_typed_array_index_of_js__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_index_of_js__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var core_js_modules_es_typed_array_iterator_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! core-js/modules/es.typed-array.iterator.js */ "./node_modules/core-js/modules/es.typed-array.iterator.js");
/* harmony import */ var core_js_modules_es_typed_array_iterator_js__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_iterator_js__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var core_js_modules_es_typed_array_join_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! core-js/modules/es.typed-array.join.js */ "./node_modules/core-js/modules/es.typed-array.join.js");
/* harmony import */ var core_js_modules_es_typed_array_join_js__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_join_js__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var core_js_modules_es_typed_array_last_index_of_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! core-js/modules/es.typed-array.last-index-of.js */ "./node_modules/core-js/modules/es.typed-array.last-index-of.js");
/* harmony import */ var core_js_modules_es_typed_array_last_index_of_js__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_last_index_of_js__WEBPACK_IMPORTED_MODULE_33__);
/* harmony import */ var core_js_modules_es_typed_array_map_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! core-js/modules/es.typed-array.map.js */ "./node_modules/core-js/modules/es.typed-array.map.js");
/* harmony import */ var core_js_modules_es_typed_array_map_js__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_map_js__WEBPACK_IMPORTED_MODULE_34__);
/* harmony import */ var core_js_modules_es_typed_array_reduce_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! core-js/modules/es.typed-array.reduce.js */ "./node_modules/core-js/modules/es.typed-array.reduce.js");
/* harmony import */ var core_js_modules_es_typed_array_reduce_js__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_reduce_js__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var core_js_modules_es_typed_array_reduce_right_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! core-js/modules/es.typed-array.reduce-right.js */ "./node_modules/core-js/modules/es.typed-array.reduce-right.js");
/* harmony import */ var core_js_modules_es_typed_array_reduce_right_js__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_reduce_right_js__WEBPACK_IMPORTED_MODULE_36__);
/* harmony import */ var core_js_modules_es_typed_array_reverse_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! core-js/modules/es.typed-array.reverse.js */ "./node_modules/core-js/modules/es.typed-array.reverse.js");
/* harmony import */ var core_js_modules_es_typed_array_reverse_js__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_reverse_js__WEBPACK_IMPORTED_MODULE_37__);
/* harmony import */ var core_js_modules_es_typed_array_set_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! core-js/modules/es.typed-array.set.js */ "./node_modules/core-js/modules/es.typed-array.set.js");
/* harmony import */ var core_js_modules_es_typed_array_set_js__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_set_js__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var core_js_modules_es_typed_array_slice_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! core-js/modules/es.typed-array.slice.js */ "./node_modules/core-js/modules/es.typed-array.slice.js");
/* harmony import */ var core_js_modules_es_typed_array_slice_js__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_slice_js__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var core_js_modules_es_typed_array_some_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! core-js/modules/es.typed-array.some.js */ "./node_modules/core-js/modules/es.typed-array.some.js");
/* harmony import */ var core_js_modules_es_typed_array_some_js__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_some_js__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var core_js_modules_es_typed_array_sort_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! core-js/modules/es.typed-array.sort.js */ "./node_modules/core-js/modules/es.typed-array.sort.js");
/* harmony import */ var core_js_modules_es_typed_array_sort_js__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_sort_js__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var core_js_modules_es_typed_array_subarray_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! core-js/modules/es.typed-array.subarray.js */ "./node_modules/core-js/modules/es.typed-array.subarray.js");
/* harmony import */ var core_js_modules_es_typed_array_subarray_js__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_subarray_js__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var core_js_modules_es_typed_array_to_locale_string_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! core-js/modules/es.typed-array.to-locale-string.js */ "./node_modules/core-js/modules/es.typed-array.to-locale-string.js");
/* harmony import */ var core_js_modules_es_typed_array_to_locale_string_js__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_to_locale_string_js__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var core_js_modules_es_typed_array_to_string_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! core-js/modules/es.typed-array.to-string.js */ "./node_modules/core-js/modules/es.typed-array.to-string.js");
/* harmony import */ var core_js_modules_es_typed_array_to_string_js__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_to_string_js__WEBPACK_IMPORTED_MODULE_44__);
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_47__);
/* harmony import */ var core_js_modules_es_number_is_integer_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! core-js/modules/es.number.is-integer.js */ "./node_modules/core-js/modules/es.number.is-integer.js");
/* harmony import */ var core_js_modules_es_number_is_integer_js__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_is_integer_js__WEBPACK_IMPORTED_MODULE_48__);
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_49__);
/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! core-js/modules/es.array.map.js */ "./node_modules/core-js/modules/es.array.map.js");
/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_50__);
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_51__);
/* harmony import */ var Base64__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! Base64 */ "./node_modules/Base64/base64.js");
/* harmony import */ var Base64__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(Base64__WEBPACK_IMPORTED_MODULE_52__);
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! long */ "./node_modules/long/src/long.js");
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(long__WEBPACK_IMPORTED_MODULE_53__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _handleMessages__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../handleMessages */ "./src/handleMessages/index.ts");
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _dataReport_const__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../dataReport/const */ "./src/dataReport/const.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }




















































var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
// import { Connection } from './connection';









var MsyncMessageType;
(function (MsyncMessageType) {
  MsyncMessageType[MsyncMessageType["NORMAL"] = 0] = "NORMAL";
  MsyncMessageType[MsyncMessageType["SINGLECHAT"] = 1] = "SINGLECHAT";
  MsyncMessageType[MsyncMessageType["GROUPCHAT"] = 2] = "GROUPCHAT";
  MsyncMessageType[MsyncMessageType["CHATROOM"] = 3] = "CHATROOM";
  MsyncMessageType[MsyncMessageType["READ_ACK"] = 4] = "READ_ACK";
  MsyncMessageType[MsyncMessageType["DELIVER_ACK"] = 5] = "DELIVER_ACK";
  MsyncMessageType[MsyncMessageType["RECALL"] = 6] = "RECALL";
  MsyncMessageType[MsyncMessageType["CHANNEL_ACK"] = 7] = "CHANNEL_ACK";
  MsyncMessageType[MsyncMessageType["EDIT"] = 8] = "EDIT";
})(MsyncMessageType || (MsyncMessageType = {}));
var platForm = _utils_index__WEBPACK_IMPORTED_MODULE_56__.utils.getEnvInfo();
/**
 * @internal
 */
function generateProvision() {
  var deviceId = 'webim';
  var deviceName = '';
  var deviceUuid = '';
  var emptyMessage = [];
  var time = new Date().valueOf();
  if (this.deviceId === 'webim') {
    deviceUuid = 'random_' + time.toString();
    deviceId = this.deviceId + '_' + deviceUuid;
    deviceName = this.deviceId;
  } else {
    deviceId = deviceName = deviceUuid = 'webim_' + this.deviceId;
  }
  if (this.context.jid) {
    this.context.jid.clientResource = deviceId;
  }
  var provisionMessage = this.root.lookup('easemob.pb.Provision');
  var secondMessage = provisionMessage.decode(emptyMessage);
  secondMessage.compressType = this.compressType;
  secondMessage.encryptType = this.encryptType;
  secondMessage.osType = this.osType;
  secondMessage.version = this.version;
  secondMessage.deviceName = deviceName;
  secondMessage.resource = deviceId;
  secondMessage.deviceUuid = deviceUuid;
  secondMessage.auth = '$t$' + this.token;
  secondMessage.actionVersion = 'v2.0';
  secondMessage = provisionMessage.encode(secondMessage).finish();
  var firstLookUpMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = firstLookUpMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.guid = this.context.jid;
  firstMessage.auth = '$t$' + this.token;
  firstMessage.command = 3;
  firstMessage.deviceId = deviceName; //conn.deviceId;
  firstMessage.serviceId = this.dataReport.getServiceId();
  firstMessage.encryptType = this.encryptType;
  firstMessage.payload = secondMessage;
  firstMessage = firstLookUpMessage.encode(firstMessage).finish();
  return firstMessage;
}
/**
 * @internal
 */
function base64transform(str, msgId) {
  var _this = this;
  var envInfo = _utils_index__WEBPACK_IMPORTED_MODULE_56__.utils.getEnvInfo();
  if (envInfo.platform === 'web' || envInfo.platform === 'zfb' || envInfo.platform === 'dd') {
    // 支付宝 WEB
    var strr = '';
    for (var i = 0; i < str.length; i++) {
      var str0 = String.fromCharCode(str[i]);
      strr = strr + str0;
    }
    strr = Base64__WEBPACK_IMPORTED_MODULE_52___default().btoa(strr);
    if (envInfo.platform === 'web') {
      return strr;
    }
    var obj = {
      data: strr,
      isBuffer: false,
      complete: function complete() {
        // do nothing
      },
      fail: function fail(e) {
        // console.log('小程序 msg Obj fail 发送失败', e)
        if (e.errMsg === 'sendSocketMessage:fail taskID not exist' || e.errMsg === 'SocketTast.send:fail SocketTask.readyState is not OPEN') {
          _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug('send message fail and reconnect');
          if (!_this.reconnecting) {
            _this.reconnect();
          }
        }
        if (msgId) {
          _this._msgHash && _this._msgHash[msgId] && _this._msgHash[msgId].fail({
            id: msgId
          });
        }
      }
    };
    return obj;
  } else {
    // 小程序
    // let init8arr = new Uint8Array(str) // send init8arr.buffer
    var int8Array = str;
    var obj = {
      data: int8Array.buffer.slice(int8Array.byteOffset, int8Array.byteOffset + int8Array.byteLength),
      fail: function fail(e) {
        // 使用uniapp生成的微信小程序断网重连没有触发 online 发消息时报下面错误
        if (e.errMsg === 'sendSocketMessage:fail taskID not exist' || e.errMsg === 'SocketTast.send:fail SocketTask.readyState is not OPEN') {
          if (!_this.reconnecting) {
            _this.reconnect();
          }
        }
        if (msgId) {
          _this._msgHash && _this._msgHash[msgId] && _this._msgHash[msgId].fail({
            id: msgId
          });
        }
      }
    };
    return obj;
  }
}
/**
 * @internal
 * 将meta 消息分发到各个类型的回调
 */
function distributeMeta(meta, status) {
  switch (meta.ns) {
    case 0:
      _handleMessages__WEBPACK_IMPORTED_MODULE_55__.handleStatisticsMsg.call(this, meta);
      break;
    case 1:
      _handleMessages__WEBPACK_IMPORTED_MODULE_55__.handleChatMsg.call(this, meta, status);
      break;
    case 2:
      _handleMessages__WEBPACK_IMPORTED_MODULE_55__.handleMucMsg.call(this, meta);
      break;
    case 3:
      _handleMessages__WEBPACK_IMPORTED_MODULE_55__.rosterMgr.handleRosterMsg.call(this, meta);
      break;
    case 4:
      this.registerConfrIQHandler && this.registerConfrIQHandler(meta, status, this);
      break;
    case 5:
      _handleMessages__WEBPACK_IMPORTED_MODULE_55__.handleNotify.call(this, meta);
      break;
    default:
      _logger__WEBPACK_IMPORTED_MODULE_58__.logger.error('distributeMeta', meta);
      break;
  }
}
/**
 * @internal
 * 接收 metas 数组，循环解析
 */
function decodeMeta(metas, status) {
  var _loop_1 = function _loop_1(i) {
    var msgId = new (long__WEBPACK_IMPORTED_MODULE_53___default())(metas[i].id.low, metas[i].id.high, metas[i].id.unsigned).toString();
    var isInCache = this_1._load_msg_cache.some(function (item) {
      return item.msgId === msgId;
    });
    if (isInCache) {
      return "continue";
    }
    var from = metas[i].from.name;
    var to = metas[i].to ? metas[i].to.name : '';
    var isGroup = metas[i].to ? metas[i].to.domain.indexOf('conference') !== -1 : false;
    if (this_1._load_msg_cache.length <= this_1.max_cache_length) {
      this_1._load_msg_cache.push({
        msgId: msgId,
        from: from,
        to: to,
        isGroup: isGroup
      });
    } else {
      this_1._load_msg_cache.shift();
      this_1._load_msg_cache.push({
        msgId: msgId,
        from: from,
        to: to,
        isGroup: isGroup
      });
    }
    distributeMeta.call(this_1, metas[i], status);
  };
  var this_1 = this;
  for (var i = 0; i < metas.length; i++) {
    _loop_1(i);
  }
}
/**
 * @internal
 */
function decodeUnreadDL(result) {
  var CommUnreadDLMessage = this.root.lookup('easemob.pb.CommUnreadDL');
  CommUnreadDLMessage = CommUnreadDLMessage.decode(result.payload);
  if (this.grantType === 'agoraToken') {
    var time = new (long__WEBPACK_IMPORTED_MODULE_53___default())(CommUnreadDLMessage.timestamp.low, CommUnreadDLMessage.timestamp.high, CommUnreadDLMessage.timestamp.unsigned).toString();
    this.compareTokenExpireTime(Number(time), this.expirationTime);
  }
  if (CommUnreadDLMessage.unread.length === 0) {
    sendRebuild.call(this);
    //rebuild();
    //发sync 同步statistic
    // 是不是在这里 rebuild 就不用倒计时那个了？
  } else {
    for (var i = 0; i < CommUnreadDLMessage.unread.length; i++) {
      // _backqueue.call(this, CommUnreadDLMessage.unread[i].queue);
      sendBackqueue.call(this, CommUnreadDLMessage.unread[i].queue);
    }
  }
  // sendRebuild.call(this)
  // _rebuild.call(this); //测试每次都会走 case 1
}
/**
 * @internal
 * 如何没有未读消息的处理 （发 Statistic）
 */
function _rebuild() {
  var emptyMessage = [];
  //再次发送信息
  var StatisticsMessage = this.root.lookup('easemob.pb.StatisticsBody');
  var fourthMessage = StatisticsMessage.decode(emptyMessage);
  fourthMessage.operation = 0;
  // statisticsmessage.imTime=123;
  // statisticsmessage.chatTime=123;
  fourthMessage = StatisticsMessage.encode(fourthMessage).finish();
  var MetaMessage = this.root.lookup('easemob.pb.Meta');
  var thirdMessage = MetaMessage.decode(emptyMessage);
  thirdMessage.id = new Date().valueOf();
  thirdMessage.ns = 0;
  thirdMessage.payload = fourthMessage;
  // metamessage = MetaMessage.encode(metamessage).finish();
  var commsynculMessage = this.root.lookup('easemob.pb.CommSyncUL');
  var secondMessage = commsynculMessage.decode(emptyMessage);
  secondMessage.meta = thirdMessage;
  secondMessage = commsynculMessage.encode(secondMessage).finish();
  var mainMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = mainMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.encryptType = [0];
  firstMessage.command = 0;
  firstMessage.payload = secondMessage;
  firstMessage = mainMessage.encode(firstMessage).finish();
  return firstMessage;
}
/**
 * @internal
 * 构建 queue 拉取消息
 */
function _backqueue(backqueue) {
  var emptyMessage = [];
  var commsynculMessage = this.root.lookup('easemob.pb.CommSyncUL');
  var secondMessage = commsynculMessage.decode(emptyMessage);
  secondMessage.queue = backqueue;
  secondMessage = commsynculMessage.encode(secondMessage).finish();
  var mainMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = mainMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.encryptType = this.encryptType;
  firstMessage.command = 0;
  firstMessage.payload = secondMessage;
  firstMessage = mainMessage.encode(firstMessage).finish();
  return firstMessage;
  // conn._base64transform(firstMessage, conn);
}
/** @internal */
function sendBackqueue(backqueue) {
  _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug('sendBackqueue');
  // let getBackqueueMsg = utils.flow([_backqueue.bind(this), base64transform])
  // let backqueueMsg = getBackqueueMsg(backqueue)
  // this.sock.send(backqueueMsg)
  var backqueueMsg = _backqueue.call(this, backqueue);
  sendMSync.call(this, backqueueMsg);
}
/**
 * @internal
 * 确定收到消息给erlang反馈//跟服务端确认是否为最后一条消息comm消息islast = true
 */
function _lastsession(nexkey, queue) {
  var emptyMessage = [];
  var commSyncULMessage = this.root.lookup('easemob.pb.CommSyncUL');
  var secondMessage = commSyncULMessage.decode(emptyMessage);
  secondMessage.queue = queue;
  secondMessage.key = new (long__WEBPACK_IMPORTED_MODULE_53___default())(nexkey.low, nexkey.high, nexkey.unsigned).toString();
  secondMessage = commSyncULMessage.encode(secondMessage).finish();
  var mSyncMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = mSyncMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.encryptType = this.encryptType;
  firstMessage.command = 0;
  firstMessage.payload = secondMessage;
  firstMessage = mSyncMessage.encode(firstMessage).finish();
  return firstMessage;
}
/** @internal */
function sendLastSession(nexkey, queue) {
  _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug('sendLastSession'); // 离线变成收到 清空离线
  // let getLastSessionMsg = utils.flow([_lastsession.bind(this), base64transform])
  // let lastSessionMsg = getLastSessionMsg(nexkey, queue)
  // this.sock.send(lastSessionMsg)
  var lastSessionMsg = _lastsession.call(this, nexkey, queue);
  sendMSync.call(this, lastSessionMsg);
}
// 处理收到的 Provision 消息
/** @internal */
function receiveProvision(result) {
  var _a;
  var provisionMessage = this.root.lookup('easemob.pb.Provision');
  var receiveProvisionResult = provisionMessage.decode(result.payload);
  if (this.context.jid) {
    this.context.jid.clientResource = receiveProvisionResult.resource;
  }
  this.clientResource = receiveProvisionResult.resource;
  if (receiveProvisionResult.status.errorCode === 0) {
    this.reconnecting = false;
    this.logOut = false;
    // set ali socket readyState open
    if (platForm.platform === 'zfb' || platForm.platform === 'dd') {
      this.sock.readyState = 1;
    }
    this.onOpened && this.onOpened();
    (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onConnected');
    if (this.grantType === 'agoraToken') {
      var currentTime = Date.now();
      this.expiresIn = this.expirationTime - currentTime;
      this.tokenExpireTimeCountDown(this.expiresIn);
    }
    reSendMsg.call(this);
    startHeartBeat.call(this);
    sendUnreadDeal.call(this);
    sendRebuild.call(this);
  } else {
    /**
     * provision error
     * 在websocket onclose 回调中处理报错
     */
  }
}
// 登录成功事重新发送未发送成功的消息
/** @internal */
function reSendMsg() {
  if (this.unSendMsgArr.length > 0) {
    for (var i = 0; i < this.unSendMsgArr.length; i++) {
      var msg = this.unSendMsgArr[i];
      send.call(this, msg);
    }
    this.unSendMsgArr = [];
  }
}
/** @internal */
function sendRebuild() {
  // let getRebuildMsg = utils.flow([_rebuild.bind(this), base64transform])
  // let rebuildMsg: string = getRebuildMsg()
  // this.sock.send(rebuildMsg)
  var rebuildMsg = _rebuild.call(this);
  sendMSync.call(this, rebuildMsg);
}
/** @internal */
function sendUnreadDeal() {
  // let getUnreadDealMsg = utils.flow([generateUnreadDeal.bind(this), base64transform])
  // let unreadDealMsg: string = getUnreadDealMsg()
  // this.sock.send(unreadDealMsg)
  var unreadDealMsg = generateUnreadDeal.call(this);
  sendMSync.call(this, unreadDealMsg);
}
/** @internal */
function startHeartBeat() {
  var _this = this;
  stopHeartBeat.call(this);
  this.heartBeatID = setInterval(function () {
    sendUnreadDeal.call(_this);
  }, this.heartBeatWait);
}
/** @internal */
function stopHeartBeat() {
  clearInterval(this.heartBeatID);
}
/** @internal */
function generateUnreadDeal() {
  var emptyMessage = [];
  var MSyncMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = MSyncMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.encryptType = this.encryptType;
  firstMessage.command = 1;
  // logger.debug('⬆︎unreadDeal: ', firstMessage)
  firstMessage = MSyncMessage.encode(firstMessage).finish();
  return firstMessage;
  //_base64transform(firstMessage, this);
}
/** @internal */
function isInQueue(_queues, queue) {
  return _queues.some(function (item) {
    return item.name === queue.name;
  });
}
// 处理下行的 Notice 消息
/** @internal */
function decodeNotice(result) {
  var _this = this;
  var Message = this.root.lookup('easemob.pb.CommNotice');
  var noticeMessage = Message.decode(result.payload);
  var isInQ = isInQueue(this._queues, noticeMessage.queue);
  if (!isInQ) {
    if (this.clientResource === noticeMessage.queue.clientResource && noticeMessage.queue.name === this.context.userId) {
      // logger.debug('your self queue')
      return;
    }
    this._queues.push(noticeMessage.queue);
    this.qTimer && clearTimeout(this.qTimer);
    this.qTimer = setTimeout(function () {
      var q = noticeMessage.queue;
      var isInQ = isInQueue(_this._queues, q);
      if (isInQ) {
        sendBackqueue.call(_this, noticeMessage.queue);
        _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug('⬇q:', q);
      }
    }, 10000);
  } else {
    return;
  }
  if (this._queues.length === 1) {
    sendBackqueue.call(this, noticeMessage.queue);
  }
}
function getCloseMsgInfo(data) {
  if (typeof data === 'string') {
    var errArray = JSON.parse(data);
    if (Array.isArray(errArray)) {
      var code = errArray[0],
        reason = errArray[1];
      this.closeInfo = {
        code: code,
        reason: reason
      };
    }
  }
}
/** @internal */
function decodeMSync(message) {
  return __awaiter(this, void 0, void 0, function () {
    var envInfo, mainMessage, result, msg, getmessage, arr, i, j, result_1;
    return __generator(this, function (_a) {
      envInfo = _utils_index__WEBPACK_IMPORTED_MODULE_56__.utils.getEnvInfo();
      mainMessage = this.root.lookup('easemob.pb.MSync');
      if (this.name === 'miniCore') {
        try {
          if (!(message.data instanceof ArrayBuffer)) {
            _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug("received message: ".concat(message.data));
            getCloseMsgInfo.call(this, message.data);
          }
          msg = new Uint8Array(message.data);
          result = mainMessage.decode(msg);
        } catch (error) {
          throw new Error('decode message fail.');
        }
        return [2 /*return*/, result];
      } else if (envInfo.platform === 'web' || envInfo.platform === 'zfb' || envInfo.platform === 'dd') {
        if (message.data === '[401,"normal closed"]') {
          _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug("received message: ".concat(message.data));
          getCloseMsgInfo.call(this, message.data);
        }
        getmessage = Base64__WEBPACK_IMPORTED_MODULE_52___default().atob(message.data);
        arr = [];
        for (i = 0, j = getmessage.length; i < j; ++i) {
          arr.push(getmessage.charCodeAt(i));
        }
        result_1 = mainMessage.decode(arr);
        return [2 /*return*/, result_1];
      } else {
        try {
          if (!(message.data instanceof ArrayBuffer)) {
            _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug("received message: ".concat(message.data));
            getCloseMsgInfo.call(this, message.data);
          }
          result = mainMessage.decode(message.data);
        } catch (error) {
          throw new Error('decode message fail.');
        }
        return [2 /*return*/, result];
      }
      return [2 /*return*/];
    });
  });
}
/** @internal */
function distributeMSync(resultPromise) {
  var _this = this;
  resultPromise.then(function (result) {
    if (result) {
      switch (result.command) {
        case 0:
          decodeCommSyncDLMsg.call(_this, result);
          break;
        case 1:
          decodeUnreadDL.call(_this, result);
          break;
        case 2:
          decodeNotice.call(_this, result);
          break;
        case 3:
          receiveProvision.call(_this, result);
          break;
        default:
          _logger__WEBPACK_IMPORTED_MODULE_58__.logger.error("unexpected msync command: ".concat(result.command));
          // throw Error('unexpected msg')
          break;
      }
    } else {
      _logger__WEBPACK_IMPORTED_MODULE_58__.logger.error("unexpected msync result: ".concat(result));
    }
  });
}
/** @internal */
function decodeCommSyncDLMsg(result) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
  var CommSyncDLMessage = this.root.lookup('easemob.pb.CommSyncDL');
  CommSyncDLMessage = CommSyncDLMessage.decode(result.payload);
  var msgId = new (long__WEBPACK_IMPORTED_MODULE_53___default())(CommSyncDLMessage.serverId.low, CommSyncDLMessage.serverId.high, CommSyncDLMessage.serverId.unsigned).toString();
  var metaId = new (long__WEBPACK_IMPORTED_MODULE_53___default())(CommSyncDLMessage.metaId.low, CommSyncDLMessage.metaId.high, CommSyncDLMessage.metaId.unsigned).toString();
  console.log(CommSyncDLMessage, 'CommSyncDLMessage');
  // 判断下行消息状态
  if (CommSyncDLMessage.status) {
    // 消息状态正常
    if (CommSyncDLMessage.status.errorCode === 0) {
      // 如果存在本地消息id
      if (Number(metaId) > 0) {
        // 两个 CommSyncDLMessage.isLast 判断
        var queuesIndex_1 = -1;
        var isInQ = this._queues.some(function (item, index) {
          var _a;
          if (item.name === ((_a = CommSyncDLMessage.queue) === null || _a === void 0 ? void 0 : _a.name)) {
            queuesIndex_1 = index;
            return true;
          }
          return false;
        });
        if (isInQ) {
          this._queues.splice(queuesIndex_1, 1);
        }
        if (this._queues.length > 0) {
          sendBackqueue.call(this, this._queues[0]);
          this.qTimer && clearTimeout(this.qTimer);
        }
        // 好友操作获取rptInfo
        var rptInfo = _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.FRIEND_OPT_REPORTS.get(metaId);
        if (rptInfo) {
          var rpt = rptInfo.rpt,
            requestName = rptInfo.requestName;
          rpt({
            isEndApi: true,
            data: {
              isSuccess: 1,
              requestName: requestName,
              requestMethod: 'WEBSOCKET',
              requestUrl: this.url,
              code: _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.WSS_CODE.success
            }
          });
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.FRIEND_OPT_REPORTS["delete"](metaId);
        }
        // 消息发送成功
        var msgInfo = this._msgHash[metaId];
        // 加入、退出聊天室回调
        if (msgInfo === null || msgInfo === void 0 ? void 0 : msgInfo.isHandleChatroom) {
          try {
            var isJoin = ((_a = this._msgHash[metaId]) === null || _a === void 0 ? void 0 : _a.operation) === 'join';
            ((_b = this._msgHash[metaId]) === null || _b === void 0 ? void 0 : _b.resolve) instanceof Function && isJoin && this._msgHash[metaId].resolve({
              type: 0,
              data: {
                action: 'apply',
                id: this._msgHash[metaId].roomId,
                result: true,
                user: this.context.userId
              }
            });
            ((_c = this._msgHash[metaId]) === null || _c === void 0 ? void 0 : _c.success) instanceof Function && isJoin && this._msgHash[metaId].success({
              type: 0,
              data: {
                action: 'apply',
                id: this._msgHash[metaId].roomId,
                result: true,
                user: this.context.userId
              }
            });
            ((_d = this._msgHash[metaId]) === null || _d === void 0 ? void 0 : _d.resolve) instanceof Function && !isJoin && this._msgHash[metaId].resolve({
              type: 0,
              data: {
                result: true
              }
            });
            ((_e = this._msgHash[metaId]) === null || _e === void 0 ? void 0 : _e.success) instanceof Function && !isJoin && this._msgHash[metaId].success({
              type: 0,
              data: {
                result: true
              }
            });
          } catch (e) {
            var error = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,
              message: 'when executing success function error',
              data: e
            });
            this.onError && this.onError(error);
            (_f = this.eventHandler) === null || _f === void 0 ? void 0 : _f.dispatch('onError', error);
          }
          delete this._msgHash[metaId];
        }
        // 普通消息
        if (msgInfo && !msgInfo.isHandleChatroom) {
          var modifiedInfo = null;
          var modifiedMessageFrom = '';
          // 编辑消息回执会返回编辑后的状态meats
          if (CommSyncDLMessage.metas.length !== 0) {
            try {
              var res = _utils_index__WEBPACK_IMPORTED_MODULE_56__.utils.parseNotify(CommSyncDLMessage.metas[0].payload);
              // 编辑消息回调
              if (res.edit_msg) {
                var _u = res.edit_msg,
                  count = _u.count,
                  operator = _u.operator,
                  edit_time = _u.edit_time,
                  sender = _u.sender;
                modifiedInfo = {
                  operationTime: edit_time,
                  operatorId: operator,
                  operatorCount: count
                };
                modifiedMessageFrom = sender;
              }
            } catch (e) {
              var error = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
                type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_LOAD_MSG_ERROR,
                message: 'decode message error',
                data: e
              });
              this.onError && this.onError(error);
              (_g = this.eventHandler) === null || _g === void 0 ? void 0 : _g.dispatch('onError', error);
            }
          }
          if (_dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.has(metaId)) {
            _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.get(metaId).rpt({
              isEndApi: true,
              data: {
                isSuccess: 1,
                requestMethod: 'WEBSOCKET',
                requestUrl: this.url,
                code: _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.WSS_CODE.success,
                msgId: msgId
              }
            });
            _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS["delete"](metaId);
          }
          try {
            var result_2 = {
              localMsgId: metaId,
              serverMsgId: msgId
            };
            if (modifiedInfo) {
              this._msgHash[metaId].modifiedInfo = modifiedInfo;
              var message = __assign({}, this._msgHash[metaId]);
              // 设置from
              message.from = modifiedMessageFrom;
              // id设置为被编辑的消息id
              message.id = message.editMessageId;
              delete message.resolve;
              delete message.reject;
              delete message.editMessageId;
              result_2.message = message;
            }
            ((_h = this._msgHash[metaId]) === null || _h === void 0 ? void 0 : _h.resolve) instanceof Function && this._msgHash[metaId].resolve(result_2);
            ((_j = this._msgHash[metaId]) === null || _j === void 0 ? void 0 : _j.success) instanceof Function && this._msgHash[metaId].success(metaId, msgId);
          } catch (e) {
            var error = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,
              message: 'when executing success function error',
              data: e
            });
            this.onError && this.onError(error);
            (_k = this.eventHandler) === null || _k === void 0 ? void 0 : _k.dispatch('onError', error);
          }
          this.onReceivedMessage && this.onReceivedMessage({
            id: metaId,
            mid: msgId,
            to: this._msgHash[metaId].to,
            time: 0
          });
          (_l = this.eventHandler) === null || _l === void 0 ? void 0 : _l.dispatch('onReceivedMessage', {
            id: metaId,
            mid: msgId,
            to: this._msgHash[metaId].to
          });
          delete this._msgHash[metaId];
        }
      } else {
        // 不存在metaId, 表示为收到的消息
        if (CommSyncDLMessage.metas.length !== 0) {
          try {
            decodeMeta.call(this, CommSyncDLMessage.metas, CommSyncDLMessage.status);
          } catch (err) {
            var error = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
              type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_LOAD_MSG_ERROR,
              message: 'decode message error',
              data: err
            });
            this.onError && this.onError(error);
            (_m = this.eventHandler) === null || _m === void 0 ? void 0 : _m.dispatch('onError', error);
          } finally {
            if (CommSyncDLMessage.isLast) {
              var queuesIndex_2 = -1;
              var isInQ = this._queues.some(function (item, index) {
                if (item.name === CommSyncDLMessage.name) {
                  queuesIndex_2 = index;
                  return true;
                }
                return false;
              });
              if (isInQ && queuesIndex_2 > 0) {
                this._queues.splice(queuesIndex_2, 1);
              }
              if (this._queues.length > 0) {
                sendBackqueue.call(this, this._queues[0]);
                this.qTimer && clearTimeout(this.qTimer);
              }
              // return; // 大型聊天室会把消息和isLast=true一同下发下来
            } else {
              sendLastSession.call(this, CommSyncDLMessage.nextKey, CommSyncDLMessage.queue);
            }
          }
        } else if (CommSyncDLMessage.isLast) {
          // 两个 CommSyncDLMessage.isLast 判断
          var queuesIndex_3 = -1;
          var isInQ = this._queues.some(function (item, index) {
            if (item.name === CommSyncDLMessage.queue.name) {
              queuesIndex_3 = index;
              return true;
            }
            return false;
          });
          if (isInQ) {
            this._queues.splice(queuesIndex_3, 1);
          }
          if (this._queues.length > 0) {
            sendBackqueue.call(this, this._queues[0]);
            this.qTimer && clearTimeout(this.qTimer);
          }
        }
      }
    } else if (CommSyncDLMessage.status.errorCode === 15) {
      // 在群组中被禁言，消息不会发送给其他人
      ((_o = this._msgHash[metaId]) === null || _o === void 0 ? void 0 : _o.fail) instanceof Function && this._msgHash[metaId].fail({
        type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.SERVICE_NOT_ALLOW_MESSAGING_MUTE,
        reason: 'you were muted'
      });
      // @since 4.0
      this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject({
        type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.SERVICE_NOT_ALLOW_MESSAGING_MUTE,
        reason: 'you were muted'
      });
    } else if (CommSyncDLMessage.status.errorCode === 1) {
      var type = void 0;
      switch (CommSyncDLMessage.status.reason) {
        case 'blocked':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.PERMISSION_DENIED;
          break;
        case 'group not found':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.GROUP_NOT_EXIST;
          break;
        case 'not in group or chatroom':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.GROUP_NOT_JOINED;
          break;
        case 'exceed recall time limit':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_RECALL_TIME_LIMIT;
          break;
        case 'message recall disabled':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.SERVICE_NOT_ENABLED;
          break;
        case 'not in group or chatroom white list':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.SERVICE_NOT_ALLOW_MESSAGING;
          break;
        case 'nonroster':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.USER_NOT_FRIEND;
          CommSyncDLMessage.status.reason = 'not contact';
          break;
        case 'group is disabled':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.GROUP_IS_DISABLED;
          CommSyncDLMessage.status.reason = 'group is disabled';
          break;
        case 'Sorry, edit limit reached':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.MODIFY_MESSAGE_LIMIT_REACHED;
          CommSyncDLMessage.status.reason = 'Modify message limit reached';
          break;
        case 'Sorry,  message does not exist':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.MODIFY_MESSAGE_NOT_EXIST;
          CommSyncDLMessage.status.reason = 'The message does not exist.';
          break;
        case 'Sorry, You do not have permission':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.PERMISSION_DENIED;
          CommSyncDLMessage.status.reason = 'You do not have  the modified permission.';
          break;
        case 'Sorry, format is incorrect':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.MODIFY_MESSAGE_FORMAT_ERROR;
          CommSyncDLMessage.status.reason = 'The modify messaged format error.';
          break;
        case 'Sorry, edit  is not available':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.SERVICE_NOT_ENABLED;
          CommSyncDLMessage.status.reason = 'The message modify function is not activated.';
          break;
        case 'Sorry, edit fail':
          type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.MODIFY_MESSAGE_FAILED;
          CommSyncDLMessage.status.reason = 'Modify message failed.';
          break;
        default:
          if (CommSyncDLMessage.status.reason.includes('grpID') && CommSyncDLMessage.status.reason.includes('does not exist!')) {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.CHATROOM_NOT_EXIST;
            CommSyncDLMessage.status.reason = 'The chat room dose not exist.';
          } else if (CommSyncDLMessage.status.reason.includes('username') && CommSyncDLMessage.status.reason.includes(
          // eslint-disable-next-line quotes
          "doesn't exist!")) {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.USER_NOT_FOUND;
          } else if (CommSyncDLMessage.status.reason === 'group member list is full!') {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.CHATROOM_MEMBERS_FULL;
          } else if (CommSyncDLMessage.status.reason.includes('can not join this group') && CommSyncDLMessage.status.reason.includes('is in the blacklist')) {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.PERMISSION_DENIED;
            CommSyncDLMessage.status.reason = 'permission denied';
          } else if (CommSyncDLMessage.status.reason === 'can not operate this group, reason: group is disabled') {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.GROUP_IS_DISABLED;
          } else if (CommSyncDLMessage.status.reason.includes('moderation')) {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_MODERATION_BLOCKED;
          } else {
            type = _status__WEBPACK_IMPORTED_MODULE_54__.Code.SERVER_UNKNOWN_ERROR;
          }
          break;
      }
      if (this._msgHash[metaId]) {
        if ((_p = this._msgHash[metaId]) === null || _p === void 0 ? void 0 : _p.isHandleChatroom) {
          //加入、退出聊天室失败回调
          var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
            type: type,
            message: CommSyncDLMessage.status.reason || '',
            data: ''
          });
          this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
          this._msgHash[metaId].error instanceof Function && this._msgHash[metaId].error(sendMsgError);
        } else {
          var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
            type: type,
            message: CommSyncDLMessage.status.reason || '',
            data: {
              id: metaId,
              mid: msgId
            }
          });
          this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
          this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail({
            type: type,
            reason: CommSyncDLMessage.status.reason ? CommSyncDLMessage.status.reason : '',
            data: {
              id: metaId,
              mid: msgId
            }
          });
        }
        delete this._msgHash[metaId];
      }
    } else if (CommSyncDLMessage.status.errorCode === 7) {
      if (CommSyncDLMessage.status.reason === 'sensitive words' && this._msgHash[metaId]) {
        var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_INCLUDE_ILLEGAL_CONTENT,
          message: 'sensitive words',
          data: {
            id: metaId,
            mid: msgId
          }
        });
        this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
        this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_INCLUDE_ILLEGAL_CONTENT,
          data: {
            id: metaId,
            mid: msgId,
            reason: 'sensitive words'
          }
        });
      } else if (CommSyncDLMessage.status.reason === 'blocked by mod_antispam' && this._msgHash[metaId]) {
        var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_INCLUDE_ILLEGAL_CONTENT,
          message: 'blocked by mod_antispam',
          data: {
            id: metaId,
            mid: msgId
          }
        });
        this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
        this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_INCLUDE_ILLEGAL_CONTENT,
          data: {
            id: metaId,
            mid: msgId,
            reason: 'blocked by mod_antispam'
          }
        });
      } else if (CommSyncDLMessage.status.reason === 'user is mute' && this._msgHash[metaId]) {
        var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.USER_MUTED_BY_ADMIN,
          message: 'user is mute',
          data: {
            id: metaId,
            mid: msgId
          }
        });
        this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
        this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail(sendMsgError);
      } else if (CommSyncDLMessage.status.reason === 'traffic limit' && this._msgHash[metaId]) {
        var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_CURRENT_LIMITING,
          message: 'traffic limit',
          data: {
            id: metaId,
            mid: msgId
          }
        });
        this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
        this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail(sendMsgError);
      } else if (CommSyncDLMessage.status.reason === 'Sorry, data is too large' && this._msgHash[metaId]) {
        var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_SIZE_LIMIT,
          message: 'Sorry, data is too large',
          data: {
            id: metaId,
            mid: msgId
          }
        });
        this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
        this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail(sendMsgError);
      }
    } else if (CommSyncDLMessage.status.errorCode === 19) {
      if (this._msgHash[metaId]) {
        // 上报发送消息失败
        if (_dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.has(metaId)) {
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.get(metaId).rpt({
            isEndApi: true,
            data: {
              isSuccess: 0,
              requestMethod: 'WEBSOCKET',
              requestUrl: this.url,
              code: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_EXTERNAL_LOGIC_BLOCKED,
              codeDesc: CommSyncDLMessage.status.reason || '',
              msgId: msgId
            }
          });
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS["delete"](metaId);
        }
        var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_EXTERNAL_LOGIC_BLOCKED,
          message: CommSyncDLMessage.status.reason || '',
          data: {
            id: metaId,
            mid: msgId
          }
        });
        this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
        this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_EXTERNAL_LOGIC_BLOCKED,
          data: {
            id: metaId,
            mid: msgId,
            reason: CommSyncDLMessage.status.reason
          }
        });
      }
    } else {
      if (this._msgHash[metaId]) {
        // 上报发送消息失败
        if (_dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.has(metaId)) {
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.get(metaId).rpt({
            isEndApi: true,
            data: {
              isSuccess: 0,
              requestMethod: 'WEBSOCKET',
              requestUrl: this.url,
              code: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_LOAD_MSG_ERROR,
              codeDesc: ((_q = CommSyncDLMessage.status) === null || _q === void 0 ? void 0 : _q.reason) || '',
              msgId: msgId
            }
          });
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS["delete"](metaId);
        }
        try {
          var sendMsgError = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
            type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_LOAD_MSG_ERROR,
            message: ((_r = CommSyncDLMessage.status) === null || _r === void 0 ? void 0 : _r.reason) || '',
            data: {
              id: metaId,
              mid: msgId,
              reason: CommSyncDLMessage.status && CommSyncDLMessage.status.reason
            }
          });
          this._msgHash[metaId].reject instanceof Function && this._msgHash[metaId].reject(sendMsgError);
          this._msgHash[metaId].fail instanceof Function && this._msgHash[metaId].fail({
            type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_LOAD_MSG_ERROR,
            data: {
              errorCode: CommSyncDLMessage.status && CommSyncDLMessage.status.errorCode,
              reason: CommSyncDLMessage.status && CommSyncDLMessage.status.reason
            }
          });
        } catch (e) {
          var error = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
            type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,
            message: 'when executing fail function error',
            data: e
          });
          this.onError && this.onError(error);
          (_s = this.eventHandler) === null || _s === void 0 ? void 0 : _s.dispatch('onError', error);
        }
        delete this._msgHash[metaId];
      } else {
        if (_dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.has(metaId)) {
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.get(metaId).rpt({
            isEndApi: true,
            data: {
              isSuccess: 0,
              requestMethod: 'WEBSOCKET',
              requestUrl: this.url,
              code: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,
              codeDesc: 'on message error',
              msgId: msgId
            }
          });
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS["delete"](metaId);
        }
        var rptInfo = _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.FRIEND_OPT_REPORTS.get(metaId);
        if (rptInfo) {
          var rpt = rptInfo.rpt,
            requestName = rptInfo.requestName;
          rpt({
            isEndApi: true,
            data: {
              isSuccess: 0,
              requestName: requestName,
              requestMethod: 'WEBSOCKET',
              requestUrl: this.url,
              code: _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.WSS_CODE.failed,
              codeDesc: 'on message error'
            }
          });
          _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.FRIEND_OPT_REPORTS["delete"](metaId);
        }
        var error = _error_error__WEBPACK_IMPORTED_MODULE_57__["default"].create({
          type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,
          message: 'on message error'
        });
        this.onError && this.onError(error);
        (_t = this.eventHandler) === null || _t === void 0 ? void 0 : _t.dispatch('onError', error);
      }
    }
  }
}
/** @internal */
function encodeKeyValueMsg(msg) {
  // if (!msg || typeof msg !== "object") {
  //     return
  // }
  var emptyMessage = [];
  var keyValueBody = this.root.lookup('easemob.pb.KeyValue');
  var keyValueBodyArr = [];
  for (var key in msg) {
    var keyValueBodyMessage = keyValueBody.decode(emptyMessage);
    keyValueBodyMessage.key = key;
    if (_typeof(msg[key]) === 'object') {
      keyValueBodyMessage.type = 8;
      keyValueBodyMessage.stringValue = JSON.stringify(msg[key]);
    } else if (typeof msg[key] === 'string') {
      keyValueBodyMessage.type = 7;
      keyValueBodyMessage.stringValue = msg[key];
    } else if (typeof msg[key] === 'boolean') {
      keyValueBodyMessage.type = 1;
      keyValueBodyMessage.varintValue = msg[key] === true ? 1 : 0;
    } else if (Number.isInteger(msg[key])) {
      keyValueBodyMessage.type = 2;
      keyValueBodyMessage.varintValue = msg[key];
    } else {
      keyValueBodyMessage.type = 6;
      keyValueBodyMessage.doubleValue = msg[key];
    }
    keyValueBodyArr.push(keyValueBodyMessage);
  }
  return keyValueBodyArr;
}
function buildMessageMeta(messageOption) {
  var meta = {};
  if ('translations' in messageOption) {
    meta.translations = messageOption.translations;
  }
  //'isChatThread:true' is need  when user send or recall a message of thread;
  if ('isChatThread' in messageOption && messageOption['isChatThread']) {
    meta.thread = {};
  }
  return Object.keys(meta).length > 0 ? JSON.stringify(meta) : '';
}
function buildMessageExt(messageOption) {
  var priority = messageOption.priority === 'high' ? 0 : messageOption.priority === 'low' ? 2 : 1;
  return {
    chatroom_msg_tag: priority
  };
}
// TODO messageOption 类型  需解决兼容  校验消息
function encodeChatMsg(messageOption) {
  var _a, _b;
  var emptyMessage = [];
  if (!this.root) {
    messageOption.fail && messageOption.fail({
      type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_CLIENT_OFFLINE,
      message: 'Not logged in'
    });
    return;
  }
  var contentMessage = this.root.lookup('easemob.pb.MessageBody.Content');
  var fifthMessage = contentMessage.decode(emptyMessage);
  // let keyValueBody = this.root.lookup("easemob.pb.KeyValue");
  var chatType;
  if ((messageOption.group || ((_a = messageOption === null || messageOption === void 0 ? void 0 : messageOption.chatType) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'groupchat') && !messageOption.roomType) {
    chatType = 'groupChat';
  } else if (messageOption.group && messageOption.roomType || ((_b = messageOption === null || messageOption === void 0 ? void 0 : messageOption.chatType) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === 'chatroom') {
    chatType = 'chatRoom';
  } else {
    chatType = 'singleChat';
  }
  switch (messageOption.type) {
    case 'txt':
      fifthMessage.type = 0;
      fifthMessage.text = messageOption.msg;
      break;
    case 'img':
      fifthMessage.type = 1;
      if (messageOption.body) {
        fifthMessage.displayName = messageOption.body.filename;
        fifthMessage.remotePath = messageOption.body.url;
        fifthMessage.secretKey = messageOption.body.secret;
        fifthMessage.fileLength = messageOption.body.file_length;
        fifthMessage.size = messageOption.body.size;
        fifthMessage.thumbnailDisplayName = messageOption.body.filename;
      } else if (messageOption.file) {
        fifthMessage.displayName = messageOption.file.filename;
        fifthMessage.remotePath = messageOption.file.url;
        fifthMessage.secretKey = messageOption.file.secret;
        fifthMessage.fileLength = messageOption.file.file_length;
        fifthMessage.size = messageOption.file.size;
        fifthMessage.thumbnailDisplayName = messageOption.file.filename;
      } else {
        // url message
        fifthMessage.displayName = messageOption.filename;
        fifthMessage.remotePath = messageOption.url;
        fifthMessage.secretKey = messageOption.secret;
        fifthMessage.fileLength = messageOption.file_length;
        fifthMessage.size = messageOption.size;
        fifthMessage.thumbnailDisplayName = messageOption.filename;
      }
      break;
    case 'video':
      fifthMessage.type = 2;
      fifthMessage.displayName = messageOption.body.filename;
      fifthMessage.remotePath = messageOption.body.url;
      fifthMessage.secretKey = messageOption.body.secret;
      fifthMessage.fileLength = messageOption.body.file_length;
      fifthMessage.duration = messageOption.body.length;
      fifthMessage.thumbnailDisplayName = messageOption.body.filename;
      break;
    case 'loc':
      fifthMessage.type = 3;
      fifthMessage.latitude = messageOption.lat;
      fifthMessage.longitude = messageOption.lng;
      fifthMessage.address = messageOption.addr;
      fifthMessage.buildingName = messageOption.buildingName;
      fifthMessage.latitude = messageOption.lat;
      break;
    case 'audio':
      fifthMessage.type = 4;
      fifthMessage.displayName = messageOption.body.filename;
      fifthMessage.remotePath = messageOption.body.url;
      fifthMessage.secretKey = messageOption.body.secret;
      fifthMessage.fileLength = messageOption.body.file_length;
      fifthMessage.duration = messageOption.body.length;
      // fifthMessage.size = messageOption.body.size;
      fifthMessage.thumbnailDisplayName = messageOption.body.filename;
      break;
    case 'file':
      fifthMessage.type = 5;
      fifthMessage.displayName = messageOption.body.filename;
      fifthMessage.remotePath = messageOption.body.url;
      fifthMessage.secretKey = messageOption.body.secret;
      fifthMessage.fileLength = messageOption.body.file_length;
      fifthMessage.size = messageOption.body.size;
      fifthMessage.thumbnailDisplayName = messageOption.body.filename;
      break;
    case 'cmd':
      fifthMessage.type = 6;
      fifthMessage.action = messageOption.action;
      // fifthMessage.params =
      break;
    case 'custom':
      fifthMessage.type = 7;
      // fifthMessage.params = encodeKeyValueMsg.call(conn, messageOption.params)
      fifthMessage.customEvent = messageOption.customEvent;
      fifthMessage.customExts = encodeKeyValueMsg.call(this, messageOption.customExts);
      break;
    default:
      break;
  }
  var msgExt = [];
  if (messageOption.ext) {
    msgExt = encodeKeyValueMsg.call(this, messageOption.ext);
  }
  var messageBody = this.root.lookup('easemob.pb.MessageBody');
  var fourthMessage = messageBody.decode(emptyMessage);
  fourthMessage.from = {
    name: this.context.jid.name
  };
  fourthMessage.to = {
    name: messageOption.to
  };
  if (messageOption.type === 'channel') {
    fourthMessage.type = MsyncMessageType.CHANNEL_ACK;
  } else if (messageOption.type === 'recall') {
    fourthMessage.type = MsyncMessageType.RECALL;
    fourthMessage.ackMessageId = messageOption.ackId;
  } else if (messageOption.type === 'delivery') {
    //目前为单聊的delivery
    fourthMessage.type = MsyncMessageType.DELIVER_ACK;
    fourthMessage.ackMessageId = messageOption.ackId;
  } else if (messageOption.type === 'read') {
    fourthMessage.type = MsyncMessageType.READ_ACK;
    fourthMessage.ackMessageId = messageOption.ackId;
    if (chatType === 'groupChat') {
      fourthMessage.msgConfig = {
        allowGroupAck: true
      };
      fourthMessage.ackContent = messageOption.ackContent;
    }
  } else if (chatType === 'chatRoom') {
    fourthMessage.type = MsyncMessageType.CHATROOM;
  } else if (chatType === 'groupChat') {
    fourthMessage.type = MsyncMessageType.GROUPCHAT;
    if (messageOption.msgConfig) {
      fourthMessage.msgConfig = {
        allowGroupAck: true
      };
    }
  } else if (chatType === 'singleChat') {
    fourthMessage.type = MsyncMessageType.SINGLECHAT;
  }
  // 如果存在editMessageId, 则为编辑消息
  if (messageOption.editMessageId) {
    fourthMessage.type = MsyncMessageType.EDIT;
    fourthMessage.editMessageId = messageOption.editMessageId;
  }
  fourthMessage.contents = [fifthMessage];
  fourthMessage.ext = msgExt;
  var messageMeta = buildMessageMeta(messageOption);
  if (messageMeta) {
    fourthMessage.meta = messageMeta;
  }
  fourthMessage = messageBody.encode(fourthMessage).finish();
  var MetaMessage = this.root.lookup('easemob.pb.Meta');
  var thirdMessage = MetaMessage.decode(emptyMessage);
  thirdMessage.id = messageOption.id;
  var domain = 'easemob.com';
  if (chatType === 'chatRoom' || chatType === 'groupChat') {
    domain = 'conference.easemob.com';
  }
  // thirdMessage.from = this.context.jid;
  thirdMessage.to = {
    appKey: this.appKey,
    name: messageOption.to,
    domain: domain
  };
  if (chatType === 'chatRoom') {
    thirdMessage.ext = encodeKeyValueMsg.call(this, buildMessageExt(messageOption))[0];
  }
  thirdMessage.ns = 1;
  thirdMessage.payload = fourthMessage;
  thirdMessage.routetype = messageOption.deliverOnlineOnly ? 1 : 0;
  var commSyncULMessage = this.root.lookup('easemob.pb.CommSyncUL');
  var secondMessage = commSyncULMessage.decode(emptyMessage);
  secondMessage.meta = thirdMessage;
  secondMessage = commSyncULMessage.encode(secondMessage).finish();
  var msyncMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = msyncMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.encryptType = this.encryptType;
  firstMessage.command = 0;
  // firstMessage.guid = this.context.jid;
  firstMessage.payload = secondMessage;
  // logger.debug('⬆︎ MSync: ', firstMessage)
  firstMessage = msyncMessage.encode(firstMessage).finish();
  return firstMessage;
}
function upLoadFile(message) {
  var _this = this;
  var messageOption = __assign({}, message);
  if (message.file) {
    messageOption.accessToken = this.token;
    messageOption.appKey = this.appKey;
    messageOption.apiUrl = this.apiUrl;
    if (messageOption.body && messageOption.body.url) {
      // Only send msg
      return encodeChatMsg.call(this, messageOption);
    }
    return new Promise(function (resolve, reject) {
      var _tmpComplete = messageOption.onFileUploadComplete;
      var _complete = function _complete(data) {
        var _a, _b;
        if (data.entities[0]['file-metadata']) {
          var file_len = data.entities[0]['file-metadata']['content-length'];
          messageOption.file_length = file_len;
          messageOption.filetype = data.entities[0]['file-metadata']['content-type'];
          if (file_len > 204800) {
            messageOption.thumbnail = true;
          }
        }
        messageOption.body = {
          type: messageOption.type || 'file',
          secret: data.entities[0]['share-secret'],
          filename: messageOption.file.filename || messageOption.filename,
          url: (_this.isHttpDNS ? _this.apiUrl + data.uri.substr(data.uri.indexOf('/', 9)) : data.uri) + '/' + data.entities[0]['uuid'],
          length: messageOption.length || 0,
          filetype: messageOption.filetype || messageOption.file.filetype,
          file_length: ((_b = (_a = messageOption.file) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.size) || 0,
          size: {
            width: messageOption.width || 0,
            height: messageOption.height || 0
          }
        };
        messageOption.file.url = data.uri;
        message.secret = data.entities[0]['share-secret'];
        var url = (_this.isHttpDNS ? _this.apiUrl + data.uri.substr(data.uri.indexOf('/', 9)) : data.uri) + '/' + data.entities[0]['uuid'];
        message.url = url;
        data.url = url;
        //  图片消息增加缩略图字段
        if (messageOption.type === 'img') {
          message.thumb = "".concat(url, "?thumbnail=true");
          data.thumb = "".concat(url, "?thumbnail=true");
        }
        _tmpComplete instanceof Function && _tmpComplete(data, messageOption.id);
        // let getSendMsg = utils.flow([encodeChatMsg.bind(this), base64transform])
        // let msg = getSendMsg(messageOption)
        // this.sock.send(msg)
        var msg = encodeChatMsg.call(_this, messageOption);
        // 附件消息上报
        _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.size <= _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.RPT_MAP_MAX_SIZE && _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.set(messageOption.id, {
          rpt: _this.dataReport.geOperateFun({
            operationName: _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.OperationName.SEND_MSG
          })
        });
        sendMSync.call(_this, msg);
        //this._msgHash[messageOption.id] = { ...messageOption, resolve, reject };
      };

      messageOption.onFileUploadComplete = _complete;
      _utils_index__WEBPACK_IMPORTED_MODULE_56__.utils.uploadFile.call(_this, messageOption, _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.OperationName.UPLOAD_MSG_ATTACH);
      // return messageOption
    });
  } else {
    if (message.type === 'img') {
      if (!messageOption.body) {
        messageOption.body = __assign(__assign({}, messageOption), {
          size: {
            width: messageOption.width || 0,
            height: messageOption.height || 0
          }
        });
      }
    }
    var msg = encodeChatMsg.call(this, messageOption);
    sendMSync.call(this, msg);
  }
}
/**
 * @internal
 * 构建加入聊天室消息
 */
function buildHandleChatRoomMsg(roomId, msgId, operation) {
  var emptyMessage = [];
  var mucBodyMessage = this.root.lookup('easemob.pb.MUCBody');
  var fourthMessage = mucBodyMessage.decode(emptyMessage);
  fourthMessage.mucId = {
    appKey: this.appKey,
    name: roomId,
    domain: 'conference.easemob.com'
  };
  fourthMessage.operation = operation === 'join' ? 2 : 3;
  fourthMessage.from = {
    name: this.context.userId
  };
  fourthMessage.isChatroom = true;
  fourthMessage = mucBodyMessage.encode(fourthMessage).finish();
  var MetaMessage = this.root.lookup('easemob.pb.Meta');
  var thirdMessage = MetaMessage.decode(emptyMessage);
  thirdMessage.id = msgId;
  thirdMessage.from = {
    appKey: this.appKey,
    name: this.context.userId,
    domain: 'easemob.com',
    client_resource: this.context.jid.clientResource
  };
  thirdMessage.to = {
    domain: 'easemob.com'
  };
  thirdMessage.ns = 2;
  thirdMessage.payload = fourthMessage;
  var commSyncULMessage = this.root.lookup('easemob.pb.CommSyncUL');
  var secondMessage = commSyncULMessage.decode(emptyMessage);
  secondMessage.meta = thirdMessage;
  secondMessage = commSyncULMessage.encode(secondMessage).finish();
  var msyncMessage = this.root.lookup('easemob.pb.MSync');
  var firstMessage = msyncMessage.decode(emptyMessage);
  firstMessage.version = this.version;
  firstMessage.encryptType = this.encryptType;
  firstMessage.command = 0;
  firstMessage.payload = secondMessage;
  firstMessage = msyncMessage.encode(firstMessage).finish();
  return firstMessage;
}
function handleChatRoom(params, operation) {
  var msgId = _utils_index__WEBPACK_IMPORTED_MODULE_56__.utils.getUniqueId();
  var joinMsg = buildHandleChatRoomMsg.call(this, params.roomId, msgId, operation);
  return sendMSync.call(this, __assign(__assign({}, params), {
    isHandleChatroom: true,
    joinMsg: joinMsg,
    id: msgId,
    operation: operation
  }), msgId);
}
// 4.0 send message
function send(params) {
  var _this = this;
  return new Promise(function (resolve, reject) {
    var _a, _b;
    if (_this.logOut) {
      return reject({
        type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNECTION_CLOSED,
        message: 'not login'
      });
    }
    if (!params.id || typeof params.id !== 'string' || params.id === '') {
      return reject({
        type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_PARAMETER_ERROR,
        message: 'Missing required parameter: "id"'
      });
    }
    if (!params.to || typeof params.to !== 'string' || params.to === '') {
      return reject({
        type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.MESSAGE_PARAMETER_ERROR,
        message: 'Missing required parameter: "to"'
      });
    }
    var isAttachMsg = params.type === 'file' || params.type === 'img' || params.type === 'audio' || params.type === 'video';
    var noRptMsg = params.type === 'delivery' || params.type === 'read' || params.type === 'channel';
    if (params.id) {
      // 不是附件消息并且不是ack消息，则上报数据
      // 或者是附件消息，并且useOwnUploadFun为true,则表示用户自行上传附件，直接上报数据
      if (!isAttachMsg && !noRptMsg || isAttachMsg && _this.useOwnUploadFun) {
        _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.size <= _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.RPT_MAP_MAX_SIZE && _dataReport_const__WEBPACK_IMPORTED_MODULE_59__.SEND_MSG_REPORTS.set(params.id, {
          rpt: _this.dataReport.geOperateFun({
            operationName: params.type === 'recall' ? _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.OperationName.SEND_RECALL_MSG : _dataReport_types__WEBPACK_IMPORTED_MODULE_60__.OperationName.SEND_MSG
          })
        });
      }
      _this._msgHash[params.id] = __assign(__assign({}, params), {
        resolve: resolve,
        reject: reject
      });
    }
    if (isAttachMsg) {
      return upLoadFile.call(_this, params);
    }
    if (params.type === 'txt' && ((_a = params.msgConfig) === null || _a === void 0 ? void 0 : _a.languages) && Array.isArray((_b = params.msgConfig) === null || _b === void 0 ? void 0 : _b.languages) && params.msgConfig.languages.length > 0) {
      var translateMessage = _this.translateMessage || _this.translation.translateMessage;
      if (!translateMessage) {
        throw new Error('there is no method to translate message');
      }
      translateMessage.call(_this, {
        text: params.msg,
        languages: params.msgConfig.languages
      }).then(function (res) {
        var _a;
        var translations = (_a = res.data[0]) === null || _a === void 0 ? void 0 : _a.translations;
        translations = translations.map(function (value) {
          return {
            code: value.to,
            text: value.text
          };
        });
        params.translations = translations;
        var chatMsg = encodeChatMsg.call(_this, params);
        sendMSync.call(_this, chatMsg, params.id);
      })["catch"](function (err) {
        reject(err);
      });
      return;
    }
    var chatMsg = encodeChatMsg.call(_this, params);
    sendMSync.call(_this, chatMsg, params.id);
  });
}
/** @internal */
function sendMSync(params, msgId) {
  var _this = this;
  //处理加入、退出聊天室消息
  if (params.isHandleChatroom) {
    if (!this.isOpened()) {
      var error = {
        data: '',
        type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_DISCONNECTED,
        message: 'websocket has been disconnected'
      };
      return Promise.reject(error);
    }
    return new Promise(function (resolve, reject) {
      _this._msgHash[params.id] = __assign(__assign({}, params), {
        resolve: resolve,
        reject: reject
      });
      var msg;
      if (_this.name === 'miniCore') {
        msg = params.joinMsg;
      } else {
        msg = base64transform.call(_this, params.joinMsg, msgId);
      }
      _this.sock.send(msg);
    });
  }
  if (!this.isOpened()) {
    this.unSendMsgArr.push(params);
    if (!this.logOut && this.autoReconnectNumTotal < this.autoReconnectNumMax && (this.autoReconnectNumTotal <= this.socketHost.length && this.isHttpDNS || !this.isHttpDNS)) {
      _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug('need to reconnect', this.autoReconnectNumTotal, this.autoReconnectNumMax);
      this.offLineSendConnecting = true;
      if (!this.reconnecting) {
        this.reconnect();
      }
    }
    this.onError && this.onError({
      type: _status__WEBPACK_IMPORTED_MODULE_54__.Code.WEBIM_CONNCTION_DISCONNECTED,
      message: 'websocket has been disconnected'
    });
    return;
  }
  // let getSendMsg = utils.flow([encodeChatMsg.bind(this), base64transform])
  // let msg = getSendMsg(params)
  var msg;
  if (this.name === 'miniCore') {
    msg = params;
  } else {
    msg = base64transform.call(this, params, msgId);
  }
  this.sock.send(msg);
}
var Msync = /** @class */function () {
  // this.root: any;
  function Msync(Connection, isMini) {
    Connection.send = send;
    Connection.sendMsg = send;
    // Connection.prototype.send = send
    _logger__WEBPACK_IMPORTED_MODULE_58__.logger.debug("init Msync by ".concat(Connection.name));
    return {
      generateProvision: generateProvision.bind(Connection),
      base64transform: base64transform.bind(Connection),
      distributeMeta: distributeMeta.bind(Connection),
      decodeMeta: decodeMeta.bind(Connection),
      decodeUnreadDL: decodeUnreadDL.bind(Connection),
      _rebuild: _rebuild.bind(Connection),
      _lastsession: _lastsession.bind(Connection),
      receiveProvision: receiveProvision.bind(Connection),
      isInQueue: isInQueue.bind(Connection),
      decodeNotice: decodeNotice.bind(Connection),
      decodeMSync: decodeMSync.bind(Connection),
      distributeMSync: distributeMSync.bind(Connection),
      encodeChatMsg: encodeChatMsg.bind(Connection),
      upLoadFile: upLoadFile.bind(Connection),
      send: send.bind(Connection),
      stopHeartBeat: stopHeartBeat.bind(Connection),
      handleChatRoom: handleChatRoom.bind(Connection)
    };
  }
  return Msync;
}();
/* harmony default export */ __webpack_exports__["default"] = (Msync);

/***/ }),

/***/ "./src/error/ajaxError.ts":
/*!********************************!*\
  !*** ./src/error/ajaxError.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../status */ "./src/status.ts");



var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};

function handleError(xhr, reject, error, elapse // 请求耗时
) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;
  var res = xhr.response;
  if (res && typeof res === 'string') {
    res = JSON.parse(res);
  }
  var status = xhr.status;
  var extraInfo = {
    elapse: elapse,
    httpCode: status,
    errDesc: res === null || res === void 0 ? void 0 : res.error_description
  };
  if (status === 400) {
    if (res.error_code === 40002) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.THREAD_ALREADY_EXIST,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
      return;
    } else if (res.error_code === 40009) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.OPERATION_UNSUPPORTED,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
      return;
    } else if (res.error_code === 60005) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_MEMBER_ATTRIBUTES_SET_FAILED,
        message: (res === null || res === void 0 ? void 0 : res.desc) || (res === null || res === void 0 ? void 0 : res.error_description),
        extraInfo: extraInfo
      });
      return;
    } else if (res.error_code === 60010) {
      if (res === null || res === void 0 ? void 0 : res.error_description.includes('exceeds chatgroup user metadata single value limit')) {
        // group member attributes value limit
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MAX_LIMIT,
          message: (res === null || res === void 0 ? void 0 : res.desc) || res.error_description,
          extraInfo: extraInfo
        });
      } else {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.NO_PERMISSION,
          message: (res === null || res === void 0 ? void 0 : res.desc) || res.error_description,
          extraInfo: extraInfo
        });
      }
      return;
    } else if (res.error_code === 60011) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.CHATROOM_NOT_JOINED,
        message: res === null || res === void 0 ? void 0 : res.desc,
        extraInfo: extraInfo
      });
      return;
    } else if (res.error_code === 60006 || res.error_code === 60007 || res.error_code === 60009 || res.error_code === 60012) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MAX_LIMIT,
        message: (res === null || res === void 0 ? void 0 : res.desc) || (res === null || res === void 0 ? void 0 : res.error_description),
        extraInfo: extraInfo
      });
      return;
    }
    if ((_a = res.error_description) === null || _a === void 0 ? void 0 : _a.includes('are not members of this group')) {
      if ((_b = xhr.responseURL) === null || _b === void 0 ? void 0 : _b.includes('chatgroups')) {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_NOT_JOINED,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      } else {
        // 操作的人不在聊天室
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.CHATROOM_NOT_JOINED,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      }
      error({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        data: xhr.responseText,
        extraInfo: extraInfo
      });
      return;
    }
    if ((res === null || res === void 0 ? void 0 : res.result) === 'the app not open presence') {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVICE_NOT_ENABLED,
        message: res === null || res === void 0 ? void 0 : res.result,
        extraInfo: extraInfo
      });
      return;
    }
    switch (res === null || res === void 0 ? void 0 : res.error_description) {
      case 'the user is already operation this message':
        // 该用户已经操作过这个reaction
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.REACTION_ALREADY_ADDED,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'The quantity has exceeded the limit!':
        // reaction 数量已达到限制
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MAX_LIMIT,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'The user not in this group!':
        // add reaction 当前用户不在这个群组当中
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_NOT_JOINED,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'the user operation is illegal!':
        // 当前用户不是这条消息的发送者或接收者：
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.REACTION_OPERATION_IS_ILLEGAL,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'this appKey is not open reaction service!':
        // 当前appkey没有开通reaction服务：
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVICE_NOT_ENABLED,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'this message is creating reaction, please try again.':
        // 正在创建 reaction：
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.REACTION_CREATING,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'groupId can not be null!':
        // 获取群组reaction时群组id为空：
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_NOT_EXIST,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'The input text is too long.':
        // 翻译文本过长
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.TRANSLATION_TEXT_TOO_LONG,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'The target language is not valid.':
        // 翻译传入的语言 code 不合法
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.TRANSLATION_NOT_VALID,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'report failed, get message by id failed':
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MESSAGE_NOT_FOUND,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'ext is too big ':
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.PRESENCE_PARAM_EXCEED,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'Request body not readable.Please check content type is correct!':
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.REQUEST_PARAMETER_ERROR,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      case 'this appKey not open message roaming':
        // 没开通删除漫游服务
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVICE_NOT_ENABLED,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          extraInfo: extraInfo
        });
        break;
      default:
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          data: xhr.responseText,
          extraInfo: extraInfo
        });
        error({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
          message: res === null || res === void 0 ? void 0 : res.error_description,
          data: xhr.responseText,
          extraInfo: extraInfo
        });
        break;
    }
  } else if (status === 401) {
    if (res.error_code === 40001 || res.error_code === 60001 || res.error_description === 'Unable to authenticate (OAuth)') {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.NO_PERMISSION,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else {
      error({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
        data: xhr.responseText,
        message: xhr.responseText,
        extraInfo: extraInfo
      });
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
        data: xhr.responseText,
        message: xhr.responseText,
        extraInfo: extraInfo
      });
    }
  } else if (status === 403) {
    if (res.error_code === 40000 || res.error_code === 60004) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVICE_NOT_ENABLED,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40003) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.THREAD_ALREADY_EXIST,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40004) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.THREAD_ALREADY_EXIST,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40005) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MAX_LIMIT,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40007) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MAX_LIMIT,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 60002) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.PERMISSION_DENIED,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    }
    // 聊天室 群组人数达到上限
    if (res.error_description === 'group member list is full!') {
      if ((_c = xhr.responseURL) === null || _c === void 0 ? void 0 : _c.includes('chatgroups')) {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_MEMBERS_FULL,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      } else {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.CHATROOM_MEMBERS_FULL,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      }
    }
    // 邀请的成员已经在群组
    else if ((_d = res.error_description) === null || _d === void 0 ? void 0 : _d.includes( true && res.error_description.includes('already in group'))) {
      if ((_e = xhr.responseURL) === null || _e === void 0 ? void 0 : _e.includes('chatgroups')) {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_ALREADY_JOINED,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      }
    }
    // 禁言的人不在群组
    else if ((_f = res.error_description) === null || _f === void 0 ? void 0 : _f.includes('are not members of this group')) {
      if ((_g = xhr.responseURL) === null || _g === void 0 ? void 0 : _g.includes('chatgroups')) {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_NOT_JOINED,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      } else {
        // 操作的人不在聊天室
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.CHATROOM_NOT_JOINED,
          data: xhr.response || xhr.responseText,
          message: res.error_description,
          extraInfo: extraInfo
        });
      }
    }
    // 没开通翻译服务
    else if ((_h = res.error_description) === null || _h === void 0 ? void 0 : _h.includes('service not open!')) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVICE_NOT_ENABLED,
        data: xhr.response || xhr.responseText,
        message: res.error_description,
        extraInfo: extraInfo
      });
    }
    // 没开通举报服务
    else if (((_j = res.error_description) === null || _j === void 0 ? void 0 : _j.includes('message report not open')) || ((_k = res.error_description) === null || _k === void 0 ? void 0 : _k.includes('messageroaming function not open'))) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVICE_NOT_ENABLED,
        data: xhr.response || xhr.responseText,
        message: res.error_description,
        extraInfo: extraInfo
      });
    }
    // 创建群组超出群组人数限制
    else if ((_l = res.error_description) === null || _l === void 0 ? void 0 : _l.includes('members size is greater than max user size !')) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_MEMBERS_LIMIT,
        data: xhr.response || xhr.responseText,
        message: res.error_description,
        extraInfo: extraInfo
      });
    }
    // 群组被禁用
    else if ((_m = res.error_description) === null || _m === void 0 ? void 0 : _m.includes('can not operate this group, reason: group is disabled')) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_IS_DISABLED,
        data: xhr.response || xhr.responseText,
        message: res.error_description,
        extraInfo: extraInfo
      });
    } else {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.PERMISSION_DENIED,
        data: xhr.response || xhr.responseText,
        message: 'permission denied',
        extraInfo: __assign(__assign({}, extraInfo), {
          errDesc: 'permission denied'
        })
      });
    }
    error({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.responseText,
      message: xhr.responseText,
      extraInfo: extraInfo
    });
  } else if (status === 404) {
    if (res.error_code === 40011) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.THREAD_NOT_EXIST,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40012) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.NO_PERMISSION,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 60003 || res.error_code === 20004) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_NOT_JOINED,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    }
    if (((_o = res.error_description) === null || _o === void 0 ? void 0 : _o.includes('do not find this group')) || ((_p = res.error_description) === null || _p === void 0 ? void 0 : _p.includes('does not exist'))) {
      if ((_q = xhr.responseURL) === null || _q === void 0 ? void 0 : _q.includes('chatgroups')) {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.GROUP_NOT_EXIST,
          data: xhr.response || xhr.responseText,
          message: 'The chat room dose not exist.',
          extraInfo: __assign(__assign({}, extraInfo), {
            errDesc: 'The chat room dose not exist.'
          })
        });
      } else {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.CHATROOM_NOT_EXIST,
          data: xhr.response || xhr.responseText,
          message: 'The chat room dose not exist.',
          extraInfo: __assign(__assign({}, extraInfo), {
            errDesc: 'The chat room dose not exist.'
          })
        });
      }
    } else if (((_r = res.error_description) === null || _r === void 0 ? void 0 : _r.includes('username')) && ((_s = res.error_description) === null || _s === void 0 ? void 0 : _s.includes(
    // eslint-disable-next-line quotes
    "doesn't exist!'")) || ((_t = res.error_description) === null || _t === void 0 ? void 0 : _t.includes('user not found'))) {
      // 创建群时拉的人不存在 // 2.登录时用户不存在
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.USER_NOT_FOUND,
        data: xhr.response || xhr.responseText,
        message: res.error_description,
        extraInfo: extraInfo
      });
    } else {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
        data: xhr.response || xhr.responseText,
        message: xhr.responseText,
        extraInfo: extraInfo
      });
    }
    error({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.response || xhr.responseText,
      message: xhr.responseText,
      extraInfo: extraInfo
    });
  } else if (status === 429 || status === 503) {
    // 翻译用量达到上限
    if ((_u = res.error_description) === null || _u === void 0 ? void 0 : _u.includes('The request has reached the maximum limit')) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.MAX_LIMIT,
        message: xhr.responseText,
        extraInfo: extraInfo
      });
      return;
    }
    reject({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVER_BUSY,
      data: xhr.response || xhr.responseText,
      message: 'Server is busy.',
      extraInfo: __assign(__assign({}, extraInfo), {
        errDesc: 'Server is busy.'
      })
    });
    error({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.responseText,
      message: 'Server is busy.',
      extraInfo: __assign(__assign({}, extraInfo), {
        errDesc: 'Server is busy.'
      })
    });
  } else if (status === 500) {
    if (res.error_code === 40006) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVER_UNKNOWN_ERROR,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40008) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVER_UNKNOWN_ERROR,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    } else if (res.error_code === 40010) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.SERVER_UNKNOWN_ERROR,
        message: res === null || res === void 0 ? void 0 : res.error_description,
        extraInfo: extraInfo
      });
    }
    if ((_v = res.error_description) === null || _v === void 0 ? void 0 : _v.includes('translte failed!')) {
      reject({
        type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.TRANSLATION_FAILED,
        message: xhr.responseText,
        extraInfo: extraInfo
      });
      return;
    }
    reject({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.responseText,
      message: '',
      extraInfo: extraInfo
    });
    error({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.responseText,
      message: '',
      extraInfo: extraInfo
    });
  } else {
    reject({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.responseText,
      message: xhr.responseText,
      extraInfo: __assign(__assign({}, extraInfo), {
        errDesc: 'ajax error'
      })
    });
    error({
      type: _status__WEBPACK_IMPORTED_MODULE_3__.Code.WEBIM_CONNCTION_AJAX_ERROR,
      data: xhr.responseText,
      message: xhr.responseText,
      extraInfo: __assign(__assign({}, extraInfo), {
        errDesc: 'ajax error'
      })
    });
  }
}
/* harmony default export */ __webpack_exports__["default"] = (handleError);

/***/ }),

/***/ "./src/error/error.ts":
/*!****************************!*\
  !*** ./src/error/error.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var ErrorEvent = /** @class */function () {
  function ErrorEvent(parameters) {
    this.type = parameters.type;
    this.message = parameters.message;
    this.data = parameters.data;
  }
  ErrorEvent.create = function (parameters) {
    return new ErrorEvent(parameters);
  };
  return ErrorEvent;
}();
/* harmony default export */ __webpack_exports__["default"] = (ErrorEvent);

/***/ }),

/***/ "./src/handleMessages/handleChatMsg.ts":
/*!*********************************************!*\
  !*** ./src/handleMessages/handleChatMsg.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! long */ "./node_modules/long/src/long.js");
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(long__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _apis_formatLastMessage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../apis/formatLastMessage */ "./src/apis/formatLastMessage.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../engineCore/mSync */ "./src/engineCore/mSync.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _message_index__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../message/index */ "./src/message/index.ts");









/* eslint-disable no-case-declarations */
/**
 * 是否需要在消息体内
 * msg.error = errorBool;
 * msg.errorText = errorText;
 * msg.errorCode = errorCode;
 */

// import Code from '../status'





var ContentsType = {
  0: 'TEXT',
  1: 'IMAGE',
  2: 'VIDEO',
  3: 'LOCATION',
  4: 'VOICE',
  5: 'FILE',
  6: 'COMMAND',
  7: 'CUSTOM'
};
function decodeMsg(msg) {
  var msgObj = {};
  for (var i = 0; i < msg.length; i++) {
    if (msg[i].type === 8) {
      msgObj[msg[i].key] = JSON.parse(msg[i].stringValue);
    } else if (msg[i].type === 7) {
      msgObj[msg[i].key] = msg[i].stringValue;
    } else if (msg[i].type === 6) {
      msgObj[msg[i].key] = msg[i].doubleValue;
    } else if (msg[i].type === 5) {
      msgObj[msg[i].key] = msg[i].floatValue;
    } else if (msg[i].type === 1) {
      var varintValue = msg[i].varintValue;
      var value = new (long__WEBPACK_IMPORTED_MODULE_9___default())(varintValue.low, varintValue.high, varintValue.unsigned).toString();
      msgObj[msg[i].key] = Number(value) !== 0;
    } else if (msg[i].type === 2 || msg[i].type === 3 || msg[i].type === 4) {
      var varintValue = msg[i].varintValue;
      var value = new (long__WEBPACK_IMPORTED_MODULE_9___default())(varintValue.low, varintValue.high, varintValue.unsigned).toString();
      msgObj[msg[i].key] = Number(value);
    }
  }
  return msgObj;
}
function generateMessage(params) {
  var _a, _b;
  var status = params.status,
    thirdMessage = params.thirdMessage,
    msgBody = params.msgBody,
    msgId = params.msgId,
    type = params.type,
    from = params.from,
    to = params.to,
    time = params.time,
    onlineState = params.onlineState,
    chatType = params.chatType,
    ignoreCallback = params.ignoreCallback,
    priority = params.priority,
    format = params.format;
  var msg = {};
  var formatV4Msg = {};
  var errorBool = status.errorCode > 0;
  var errorCode = status.errorCode;
  var errorText = status.reason;
  var extmsg = {};
  var reactionMsgs = [];
  var translations = [];
  var modifiedInfo = {};
  var modifiedMsgFrom = '';
  var chatThreadMsg = null;
  var chatThreadOverview = null;
  var url;
  if (thirdMessage.ext) {
    extmsg = decodeMsg(thirdMessage.ext);
  }
  if (thirdMessage.meta && typeof thirdMessage.meta === 'string') {
    var metaMsg = JSON.parse(thirdMessage.meta);
    if (metaMsg.reaction) {
      reactionMsgs = metaMsg.reaction;
      reactionMsgs.forEach(function (reaction) {
        reaction.isAddedBySelf = reaction.state;
        delete reaction.state;
      });
    }
    if (metaMsg.translations) {
      translations = metaMsg.translations;
    }
    // 是否存在编辑消息的信息
    if (metaMsg.edit_msg) {
      // 编辑消息from替换原消息的from
      var _c = metaMsg.edit_msg,
        count = _c.count,
        operator = _c.operator,
        edit_time = _c.edit_time,
        sender = _c.sender;
      modifiedInfo = {
        operationTime: edit_time,
        operatorId: operator,
        operatorCount: count
      };
      modifiedMsgFrom = sender;
    }
    //当消息是Thread消息时，包含此部分
    //This part is included when the message is a chatThread message
    if (metaMsg.thread && JSON.stringify(metaMsg.thread) !== '{}') {
      chatThreadMsg = {
        messageId: metaMsg.thread.msg_parent_id,
        parentId: metaMsg.thread.muc_parent_id,
        chatThreadName: metaMsg.thread.thread_name
      };
    }
    //群组漫游消息/离线消息;该漫游消息是否包含thread概览
    //Group roaming message / offline message;Does the roaming message contain a thread overview？
    if (metaMsg.thread_overview && JSON.stringify(metaMsg.thread_overview) !== '{}') {
      chatThreadOverview = {
        id: metaMsg.thread_overview.id,
        parentId: metaMsg.thread_overview.muc_parent_id,
        name: metaMsg.thread_overview.name,
        lastMessage: (0,_apis_formatLastMessage__WEBPACK_IMPORTED_MODULE_10__.formatMessage)(metaMsg.thread_overview.last_message),
        createTimestamp: metaMsg.thread_overview.create_timestamp,
        updateTimestamp: metaMsg.thread_overview.update_timestamp,
        messageCount: metaMsg.thread_overview.message_count
      };
    }
  }
  switch (msgBody.type) {
    case 0:
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        data: msgBody.text,
        ext: extmsg,
        sourceMsg: msgBody.text,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
      };
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onTextMessage && this.onTextMessage(msg);
      // eslint-disable-next-line no-case-declarations
      var textMsg = {
        id: msgId,
        type: 'txt',
        chatType: chatType,
        msg: msgBody.text,
        to: to,
        from: from,
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        textMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        textMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        textMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        textMsg.chatThreadOverview = chatThreadOverview;
      }
      if (translations.length > 0) {
        textMsg.translations = translations;
      }
      if (modifiedInfo.operatorCount > 0) {
        textMsg.modifiedInfo = modifiedInfo;
        textMsg.from = modifiedMsgFrom;
      }
      if (chatType === 'chatRoom') {
        textMsg.priority = priority;
      }
      formatV4Msg = textMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onTextMessage', textMsg);
      break;
    case 1:
      // eslint-disable-next-line no-case-declarations
      var width = ((_a = msgBody === null || msgBody === void 0 ? void 0 : msgBody.size) === null || _a === void 0 ? void 0 : _a.width) || 0;
      // eslint-disable-next-line no-case-declarations
      var height = ((_b = msgBody === null || msgBody === void 0 ? void 0 : msgBody.size) === null || _b === void 0 ? void 0 : _b.height) || 0;
      url = this.useOwnUploadFun ? msgBody.remotePath : (msgBody.remotePath && this.apiUrl + msgBody.remotePath.substr(msgBody.remotePath.indexOf('/', 9))) + '?em-redirect=true';
      if (msgBody.secretKey && !this.useOwnUploadFun) {
        url = "".concat(url, "&share-secret=").concat(msgBody.secretKey);
      }
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        filename: msgBody.displayName,
        thumb: this.useOwnUploadFun ? '' : "".concat(url, "&thumbnail=true"),
        thumb_secret: msgBody.secretKey,
        file_length: msgBody.fileLength || '',
        width: width,
        height: height,
        filetype: msgBody.filetype || '',
        accessToken: this.token,
        ext: extmsg,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
      };
      !msg.delay && delete msg.delay;
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onPictureMessage && this.onPictureMessage(msg);
      // TODO ImgMsgBody 注释部分是需要的
      // let imgMsg: ImgMsgBody = {
      // eslint-disable-next-line no-case-declarations
      var imgMsg = {
        id: msgId,
        type: 'img',
        chatType: chatType,
        from: from,
        to: to,
        url: url || '',
        file: {},
        width: width,
        height: height,
        secret: msgBody.secretKey || '',
        // filename: msgBody.displayName || '',
        thumb: this.useOwnUploadFun ? '' : "".concat(url, "&thumbnail=true"),
        thumb_secret: msgBody.secretKey,
        file_length: msgBody.fileLength || 0,
        // filetype: msgBody.filetype || '',
        // accessToken: this.token,
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        imgMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        imgMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        imgMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        imgMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        imgMsg.priority = priority;
      }
      formatV4Msg = imgMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onImageMessage', imgMsg);
      break;
    case 2:
      url = this.useOwnUploadFun ? msgBody.remotePath : (msgBody.remotePath && this.apiUrl + msgBody.remotePath.substr(msgBody.remotePath.indexOf('/', 9))) + '?em-redirect=true';
      if (msgBody.secretKey && !this.useOwnUploadFun) {
        url = "".concat(url, "&share-secret=").concat(msgBody.secretKey);
      }
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        filename: msgBody.displayName,
        length: msgBody.duration || '',
        file_length: msgBody.fileLength || '',
        filetype: msgBody.filetype || '',
        accessToken: this.token || '',
        ext: extmsg,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
      };
      !msg.delay && delete msg.delay;
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onVideoMessage && this.onVideoMessage(msg);
      var videoMsg = {
        id: msgId,
        type: 'video',
        chatType: chatType,
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        filename: msgBody.displayName,
        length: msgBody.duration || 0,
        file: {},
        file_length: msgBody.fileLength || 0,
        filetype: msgBody.filetype || '',
        accessToken: this.token || '',
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        videoMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        videoMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        videoMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        videoMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        videoMsg.priority = priority;
      }
      formatV4Msg = videoMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onVideoMessage', videoMsg);
      break;
    case 3:
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        addr: msgBody.address,
        buildingName: msgBody.buildingName,
        lat: msgBody.latitude,
        lng: msgBody.longitude,
        ext: extmsg,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
        // , delay: parseMsgData.delayTimeStamp
      };

      !msg.delay && delete msg.delay;
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onLocationMessage && this.onLocationMessage(msg);
      var locationMsg = {
        id: msgId,
        type: 'loc',
        chatType: chatType,
        from: from,
        to: to,
        buildingName: msgBody.buildingName,
        addr: msgBody.address,
        lat: msgBody.latitude,
        lng: msgBody.longitude,
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        locationMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        locationMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        locationMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        locationMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        locationMsg.priority = priority;
      }
      formatV4Msg = locationMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onLocationMessage', locationMsg);
      break;
    case 4:
      url = this.useOwnUploadFun ? msgBody.remotePath : (msgBody.remotePath && this.apiUrl + msgBody.remotePath.substr(msgBody.remotePath.indexOf('/', 9))) + '?em-redirect=true';
      if (msgBody.secretKey && !this.useOwnUploadFun) {
        url = "".concat(url, "&share-secret=").concat(msgBody.secretKey);
      }
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        filename: msgBody.displayName,
        file_length: msgBody.fileLength || '',
        accessToken: this.token || '',
        ext: extmsg,
        length: msgBody.duration,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
        // , delay: parseMsgData.delayTimeStamp
      };

      !msg.delay && delete msg.delay;
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onAudioMessage && this.onAudioMessage(msg);
      var audioMsg = {
        id: msgId,
        type: 'audio',
        chatType: chatType,
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        file: {},
        filename: msgBody.displayName,
        length: msgBody.duration || 0,
        file_length: msgBody.fileLength || 0,
        filetype: msgBody.filetype || '',
        accessToken: this.token || '',
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        audioMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        audioMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        audioMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        audioMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        audioMsg.priority = priority;
      }
      formatV4Msg = audioMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onAudioMessage', audioMsg);
      break;
    case 5:
      url = this.useOwnUploadFun ? msgBody.remotePath : (msgBody.remotePath && this.apiUrl + msgBody.remotePath.substr(msgBody.remotePath.indexOf('/', 9))) + '?em-redirect=true';
      if (msgBody.secretKey && !this.useOwnUploadFun) {
        url = "".concat(url, "&share-secret=").concat(msgBody.secretKey);
      }
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        filename: msgBody.displayName,
        file_length: msgBody.fileLength,
        accessToken: this.token || '',
        ext: extmsg,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
      };
      !msg.delay && delete msg.delay;
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onFileMessage && this.onFileMessage(msg);
      var fileMsg = {
        id: msgId,
        type: 'file',
        chatType: chatType,
        from: from,
        to: to,
        url: url,
        secret: msgBody.secretKey,
        file: {},
        filename: msgBody.displayName,
        length: msgBody.duration || 0,
        file_length: msgBody.fileLength || 0,
        filetype: msgBody.filetype || '',
        accessToken: this.token || '',
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        fileMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        fileMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        fileMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        fileMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        fileMsg.priority = priority;
      }
      formatV4Msg = fileMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onFileMessage', fileMsg);
      break;
    case 6:
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        action: msgBody.action,
        ext: extmsg,
        time: time,
        msgConfig: thirdMessage.msgConfig,
        onlineState: onlineState
      };
      !msg.msgConfig && delete thirdMessage.msgConfig;
      msg.error = errorBool;
      msg.errorText = errorText;
      msg.errorCode = errorCode;
      !ignoreCallback && this.onCmdMessage && this.onCmdMessage(msg);
      var cmdMsg = {
        id: msgId,
        type: 'cmd',
        chatType: chatType,
        from: from,
        to: to,
        action: msgBody.action,
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        cmdMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        cmdMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        cmdMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        cmdMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        cmdMsg.priority = priority;
      }
      formatV4Msg = cmdMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onCmdMessage', cmdMsg);
      break;
    case 7:
      var customExts = {};
      var params_1 = {};
      if (thirdMessage.contents[0].customExts) {
        customExts = decodeMsg(thirdMessage.contents[0].customExts);
      }
      if (thirdMessage.contents[0].params) {
        params_1 = decodeMsg(thirdMessage.contents[0].params);
      }
      msg = {
        id: msgId,
        type: type,
        contentsType: ContentsType[msgBody.type],
        from: from,
        to: to,
        customEvent: msgBody.customEvent,
        params: params_1,
        customExts: customExts,
        ext: extmsg,
        time: time,
        onlineState: onlineState
      };
      !ignoreCallback && this.onCustomMessage && this.onCustomMessage(msg);
      var customMsg = {
        id: msgId,
        type: 'custom',
        chatType: chatType,
        from: from,
        to: to,
        customEvent: msgBody.customEvent,
        params: params_1,
        customExts: customExts,
        ext: extmsg,
        time: Number(time),
        onlineState: onlineState
      };
      if (msg.msgConfig) {
        customMsg.msgConfig = msg.msgConfig;
      }
      if (reactionMsgs.length > 0) {
        customMsg.reactions = reactionMsgs;
      }
      if (chatThreadMsg) {
        customMsg.chatThread = chatThreadMsg;
      }
      if (chatThreadOverview) {
        customMsg.chatThreadOverview = chatThreadOverview;
      }
      if (chatType === 'chatRoom') {
        customMsg.priority = priority;
      }
      formatV4Msg = customMsg;
      !ignoreCallback && this.eventHandler && this.eventHandler.dispatch('onCustomMessage', customMsg);
      break;
    default:
      //throw Error(`Unknow message type, message: ${msgBody}`)
      _logger__WEBPACK_IMPORTED_MODULE_13__.logger.error('Unknow message type, message:', msgBody);
      break;
  }
  if (format) {
    return formatV4Msg;
  }
  return msg;
}
function handleMessage(meta, status, ignoreCallback, format) {
  var _a, _b, _c, _d, _e, _f;
  var time = new (long__WEBPACK_IMPORTED_MODULE_9___default())(meta.timestamp.low, meta.timestamp.high, meta.timestamp.unsigned).toString();
  var messageBodyMessage = this.root.lookup('easemob.pb.MessageBody');
  var thirdMessage = messageBodyMessage.decode(meta.payload);
  var onlineState = 1;
  if (meta.meta && meta.meta.length) {
    var is_online = _utils__WEBPACK_IMPORTED_MODULE_11__.utils.parseNotify(meta.meta).is_online;
    switch (is_online) {
      case 0:
        onlineState = 0;
        break;
      case 1:
        onlineState = 1;
        break;
      default:
        onlineState = 2;
        break;
    }
  } else {
    onlineState = 3;
  }
  var msgId = new (long__WEBPACK_IMPORTED_MODULE_9___default())(meta.id.low, meta.id.high, meta.id.unsigned).toString();
  var ackMsgId = thirdMessage.ackMessageId ? new (long__WEBPACK_IMPORTED_MODULE_9___default())(thirdMessage.ackMessageId.low, thirdMessage.ackMessageId.high, thirdMessage.ackMessageId.unsigned).toString() : '';
  var type = '';
  var from = thirdMessage.from && thirdMessage.from.name;
  var to = thirdMessage.to && thirdMessage.to.name;
  _logger__WEBPACK_IMPORTED_MODULE_13__.logger.debug('thirdMessage:', thirdMessage);
  switch (thirdMessage.type) {
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.SINGLECHAT:
      type = 'chat';
      if (this.grantType === 'agoraToken') {
        type = 'singleChat';
      }
      this.delivery && _sendDelivery.call(this, from, to, msgId);
      break;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.GROUPCHAT:
      type = 'groupchat';
      if (this.grantType === 'agoraToken') {
        type = 'groupChat';
      }
      break;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.CHATROOM:
      type = 'chatroom';
      if (this.grantType === 'agoraToken') {
        type = 'chatRoom';
      }
      onlineState = 1;
      break;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.READ_ACK:
      type = 'read_ack';
      // eslint-disable-next-line no-case-declarations
      var readMessage = void 0;
      // eslint-disable-next-line no-case-declarations
      var groupReadCount = thirdMessage.ext[0] && JSON.parse(thirdMessage.ext[0].stringValue);
      if (groupReadCount) {
        readMessage = {
          id: msgId,
          type: 'read',
          from: from,
          to: to,
          mid: ackMsgId,
          groupReadCount: thirdMessage.ext[0] && JSON.parse(thirdMessage.ext[0].stringValue),
          ackContent: thirdMessage.ackContent,
          onlineState: onlineState
        };
        this.onReadMessage && this.onReadMessage(readMessage);
        (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onReadMessage', readMessage);
        return;
      }
      readMessage = {
        id: msgId,
        type: 'read',
        from: from,
        to: to,
        mid: ackMsgId,
        onlineState: onlineState
      };
      this.onReadMessage && this.onReadMessage(readMessage);
      (_b = this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onReadMessage', readMessage);
      return;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.DELIVER_ACK:
      type = 'deliver_ack';
      this.onDeliveredMessage && this.onDeliveredMessage({
        id: msgId,
        type: 'delivery',
        from: from,
        to: to,
        mid: ackMsgId,
        onlineState: onlineState
      });
      // eslint-disable-next-line no-case-declarations
      var deliverdMessage = {
        id: msgId,
        type: 'delivery',
        from: from,
        to: to,
        mid: ackMsgId,
        onlineState: onlineState
      };
      (_c = this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onDeliveredMessage', deliverdMessage);
      return;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.RECALL:
      type = 'recall';
      // eslint-disable-next-line no-case-declarations
      var recallMessage = {
        id: msgId,
        from: from ? from : 'admin',
        to: to,
        mid: ackMsgId,
        onlineState: onlineState
      };
      this.onRecallMessage && this.onRecallMessage(recallMessage); // 需要增加一个回撤消息的监听
      (_d = this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onRecallMessage', recallMessage);
      return;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.CHANNEL_ACK:
      // 只有单聊，群聊不下发 channel message
      this.onChannelMessage && this.onChannelMessage({
        id: msgId,
        type: 'channel',
        chatType: 'singleChat',
        from: from,
        to: to,
        time: Number(time),
        onlineState: onlineState
      });
      // eslint-disable-next-line no-case-declarations
      var channelMessage = {
        id: msgId,
        type: 'channel',
        chatType: 'singleChat',
        from: from,
        to: to,
        time: Number(time),
        onlineState: onlineState
      };
      (_e = this.eventHandler) === null || _e === void 0 ? void 0 : _e.dispatch('onChannelMessage', channelMessage);
      return;
    case _engineCore_mSync__WEBPACK_IMPORTED_MODULE_12__.MsyncMessageType.EDIT:
      var status_1 = {
        errorCode: 0,
        reason: ''
      };
      var msg = generateMessage.call(this, {
        status: status_1,
        thirdMessage: thirdMessage,
        msgBody: thirdMessage.contents[0],
        msgId: msgId,
        type: type,
        from: from,
        to: to,
        time: time,
        onlineState: onlineState,
        ignoreCallback: true,
        format: true
      });
      var isGroup = meta.to ? meta.to.domain.indexOf('conference') !== -1 : false;
      // 编辑消息不支持聊天室
      msg.chatType = isGroup ? 'groupChat' : 'singleChat';
      msg.id = thirdMessage.editMessageId && new (long__WEBPACK_IMPORTED_MODULE_9___default())(thirdMessage.editMessageId.low, thirdMessage.editMessageId.high, thirdMessage.editMessageId.unsigned).toString();
      delete msg.onlineState;
      delete msg.msgConfig;
      (_f = this.eventHandler) === null || _f === void 0 ? void 0 : _f.dispatch('onModifiedMessage', msg);
      return;
    default:
      _logger__WEBPACK_IMPORTED_MODULE_13__.logger.error("unexpected message type: ".concat(thirdMessage.type));
      return;
  }
  var priority = 'normal';
  var chatType;
  if (type.toLowerCase() === 'chat' || type === 'singleChat') {
    chatType = 'singleChat';
  } else if (type.toLowerCase() === 'groupchat' || type === 'groupChat') {
    chatType = 'groupChat';
  } else {
    chatType = 'chatRoom';
    onlineState = 1;
    if (meta.ext) {
      var priorityObj = decodeMsg([meta.ext]);
      priority = priorityObj['chatroom_msg_tag'] === 0 ? 'high' : priorityObj['chatroom_msg_tag'] === 2 ? 'low' : 'normal';
    }
  }
  for (var i = 0; i < thirdMessage.contents.length; i++) {
    return generateMessage.call(this, {
      status: status,
      thirdMessage: thirdMessage,
      msgBody: thirdMessage.contents[i],
      msgId: msgId,
      type: type,
      from: from,
      to: to,
      time: time,
      onlineState: onlineState,
      chatType: chatType,
      ignoreCallback: ignoreCallback,
      priority: priority,
      format: format
    });
  }
}
function _sendDelivery(from, to, msgId) {
  if (this.delivery && from !== to) {
    var id = this.getUniqueId();
    var deliverMessage = new _message_index__WEBPACK_IMPORTED_MODULE_14__.Message('delivery', id);
    deliverMessage.set({
      ackId: msgId,
      to: from
    });
    _logger__WEBPACK_IMPORTED_MODULE_13__.logger.debug('send delivery ack');
    this.send(deliverMessage.body);
  }
}
/* harmony default export */ __webpack_exports__["default"] = (handleMessage);

/***/ }),

/***/ "./src/handleMessages/handleMucMsg.ts":
/*!********************************************!*\
  !*** ./src/handleMessages/handleMucMsg.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");








// group modify info boolean keys
var ModifyGroupBooleanKeys = ['public', 'members_only', 'allow_user_invites', 'invite_need_confirm'];
var MapModifyGroupKeys = {
  name: 'name',
  title: 'name',
  description: 'description',
  "public": 'public',
  members_only: 'approval',
  allow_user_invites: 'allowInvites',
  max_users: 'maxUsers',
  invite_need_confirm: 'inviteNeedConfirm',
  custom: 'ext',
  last_modified: 'lastModified'
};
function condition(operation, thirdMessage) {
  var _this = this;
  var _a;
  //群组、聊天室发生变化时回调数据
  var info;
  //thread发生变化时回调数据
  var threadInfo;
  var threadMultiDeviceInfo;
  var _b = this.context,
    userId = _b.userId,
    jid = _b.jid;
  var isMultiDeviceMuc = thirdMessage.from.name === userId && jid.clientResource !== thirdMessage.from.clientResource;
  var eventData;
  var attributesRespData;
  if (thirdMessage.isThread) {
    threadInfo = {
      id: thirdMessage.mucId.name,
      name: thirdMessage.mucName,
      operation: '',
      parentId: thirdMessage.mucParentId.name,
      operator: thirdMessage.from.name,
      userName: thirdMessage.to.length ? thirdMessage.to[0].name : ''
    };
    threadMultiDeviceInfo = {
      chatThreadId: thirdMessage.mucId.name,
      chatThreadName: thirdMessage.mucName,
      operation: '',
      parentId: thirdMessage.mucParentId.name
    };
  } else {
    info = {
      type: '',
      owner: thirdMessage.from.name,
      gid: thirdMessage.mucId.name,
      from: thirdMessage.from.name,
      fromJid: thirdMessage.from,
      to: thirdMessage.to.length ? thirdMessage.to[0].name : '',
      toJid: thirdMessage.to,
      chatroom: thirdMessage.isChatroom,
      status: thirdMessage.status
    };
    eventData = {
      operation: '',
      id: thirdMessage.mucId.name,
      from: thirdMessage.from.name
    };
    if (thirdMessage.isChatroom && ((_a = thirdMessage === null || thirdMessage === void 0 ? void 0 : thirdMessage.eventInfo) === null || _a === void 0 ? void 0 : _a.ext)) {
      attributesRespData = JSON.parse(thirdMessage.eventInfo.ext);
    }
  }
  return ({
    45: function _() {
      var _a, _b, _c;
      // 同步群成员属性更新,只投在线
      eventData.operation = 'memberAttributesUpdate';
      var dt = JSON.parse((_a = thirdMessage === null || thirdMessage === void 0 ? void 0 : thirdMessage.eventInfo) === null || _a === void 0 ? void 0 : _a.ext) || {};
      eventData.attributes = dt.properties || {};
      eventData.userId = dt.username || '';
      if (isMultiDeviceMuc) {
        (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onMultiDeviceEvent', eventData);
      } else {
        (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onGroupEvent', eventData);
      }
    },
    44: function _() {
      var _a;
      eventData.operation = 'removeChatRoomAttributes';
      eventData.attributes = attributesRespData.result.successKeys;
      if (attributesRespData.result.successKeys.length > 0) {
        (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomEvent', eventData);
      }
    },
    43: function _() {
      var _a;
      eventData.operation = 'updateChatRoomAttributes';
      var attributesObj = {};
      attributesRespData.result.successKeys.forEach(function (item) {
        attributesObj[item] = attributesRespData.properties[item];
      });
      eventData.attributes = attributesObj;
      if (attributesRespData.result.successKeys.length > 0) {
        (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomEvent', eventData);
      }
    },
    42: function _() {
      //群禁用解除事件: able_group
      // info.type = 'ableGroup';
      // thirdMessage.isChatroom
      // 	? this.eventHandler?.dispatch('onChatroomChange', info)
      // 	: this.eventHandler?.dispatch('onGroupChange', info);
    },
    41: function _() {
      //群禁用事件 disable_group
      // info.type = 'disableGroup';
      // thirdMessage.isChatroom
      // 	? this.eventHandler?.dispatch('onChatroomChange', info)
      // 	: this.eventHandler?.dispatch('onGroupChange', info);
    },
    40: function _() {
      //thread成员退出
    },
    39: function _() {
      //thread成员加入
    },
    38: function _() {
      var _a;
      //thread更新
      threadMultiDeviceInfo.operation = 'chatThreadNameUpdate';
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onMultiDeviceEvent', threadMultiDeviceInfo);
    },
    37: function _() {
      var _a;
      //当前用户被踢
      threadInfo.operation = 'userRemove';
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatThreadChange', threadInfo);
    },
    36: function _() {
      var _a;
      //thread离开-当前用户离开
      threadMultiDeviceInfo.operation = 'chatThreadLeave';
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onMultiDeviceEvent', threadMultiDeviceInfo);
    },
    35: function _() {
      var _a;
      //thread加入-当前用户加入
      threadMultiDeviceInfo.operation = 'chatThreadJoin';
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onMultiDeviceEvent', threadMultiDeviceInfo);
    },
    34: function _() {
      var _a;
      //thread销毁
      threadMultiDeviceInfo.operation = 'chatThreadDestroy';
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onMultiDeviceEvent', threadMultiDeviceInfo);
    },
    33: function _() {
      var _a;
      //thread创建
      threadMultiDeviceInfo.operation = 'chatThreadCreate';
      (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onMultiDeviceEvent', threadMultiDeviceInfo);
    },
    32: function _() {
      var _a, _b, _c, _d;
      //解除群组/聊天室一键禁言
      info.type = thirdMessage.isChatroom ? 'rmChatRoomMute' : 'rmGroupMute';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'unmuteAllMembers';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    31: function _() {
      var _a, _b, _c, _d;
      //群组/聊天室一键禁言
      info.type = thirdMessage.isChatroom ? 'muteChatRoom' : 'muteGroup';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'muteAllMembers';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    30: function _() {
      var _a, _b, _c, _d;
      //删除群/聊天室白名单成员
      info.type = thirdMessage.isChatroom ? 'rmUserFromChatRoomWhiteList' : 'rmUserFromGroupWhiteList';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'removeAllowlistMember';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    29: function _() {
      var _a, _b, _c, _d;
      //增加群/聊天室组白名单成员
      info.type = thirdMessage.isChatroom ? 'addUserToChatRoomWhiteList' : 'addUserToGroupWhiteList';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'addUserToAllowlist';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    28: function _() {
      var _a, _b, _c, _d;
      info.type = 'deleteFile'; // 删除群文件
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'deleteFile';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    27: function _() {
      var _a, _b, _c, _d;
      info.type = 'uploadFile'; // 上传群文件
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'uploadFile';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    26: function _() {
      var _a, _b, _c, _d;
      info.type = 'deleteAnnouncement'; //删除群公告
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'deleteAnnouncement';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    25: function _() {
      var _a, _b, _c, _d;
      info.type = 'updateAnnouncement'; // 更新群公告
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'updateAnnouncement';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    24: function _() {
      var _a, _b, _c, _d;
      info.type = 'removeMute'; //用户被解除禁言 当事人收到
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'unmuteMember';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    23: function _() {
      var _a, _b, _c, _d;
      info.type = 'addMute'; //用户被管理员禁言 当事人收到
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'muteMember';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    22: function _() {
      var _a, _b, _c, _d;
      info.type = 'removeAdmin'; //去除管理员 当事人收到
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'removeAdmin';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    21: function _() {
      var _a, _b, _c, _d;
      info.type = 'addAdmin'; //成为管理员，当事人收到
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'setAdmin';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    20: function _() {
      var _a, _b, _c, _d;
      info.type = 'changeOwner'; //转让群组 当事的两个人收到
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'changeOwner';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    19: function _() {
      var _a, _b, _c, _d;
      // 邀请进群（不需要同意的时候）被邀请进去 收到 19
      info.type = 'direct_joined'; //直接拉进群了
      info.groupName = thirdMessage.mucName;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'directJoined';
      eventData.name = thirdMessage.mucName;
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    18: function _() {
      var _a, _b, _c, _d;
      // ABSENCE （被移出群）
      info.type = thirdMessage.isChatroom ? 'leaveChatRoom' : 'leaveGroup';
      //info.type = 'absence'; //退出群了
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'memberAbsence';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    17: function _() {
      var _a, _b, _c, _d;
      // PRESENCE （给加进群 inviteUsersToGroup）
      info.type = thirdMessage.isChatroom ? 'memberJoinChatRoomSuccess' : 'memberJoinPublicGroupSuccess';
      //info.type = 'presence'; // 有人进群了
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'memberPresence';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    16: function _() {
      var _a, _b;
      // 无法出现
      info.type = 'unblock';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
    },
    15: function _() {
      var _a, _b;
      // 无法出现
      info.type = 'block';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
    },
    14: function _() {
      var _a, _b, _c, _d, _e;
      // modifyGroup 修改群信息 触发
      var isChatroom = thirdMessage.isChatroom;
      // Update group info
      if (!isChatroom) {
        var ext_1 = JSON.parse(((_a = thirdMessage === null || thirdMessage === void 0 ? void 0 : thirdMessage.eventInfo) === null || _a === void 0 ? void 0 : _a.ext) || '{}',
        // transform value type
        function (k, v) {
          if (k === 'last_modified') return Number(v);
          if (ModifyGroupBooleanKeys.includes(k)) {
            return v === 'true' || v === true;
          }
          return v;
        });
        // add update detail
        eventData.detail = info.detail = {};
        Object.keys(ext_1).forEach(function (key) {
          var localKey = MapModifyGroupKeys[key];
          if (localKey) {
            var dt = ext_1[key];
            eventData.detail && (eventData.detail[localKey] = dt);
            info.detail && (info.detail[localKey] = dt);
          }
        });
      }
      info.type = 'update';
      _this.onPresence && _this.onPresence(info);
      isChatroom ? (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onChatroomChange', info) : (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onGroupChange', info);
      eventData.operation = 'updateInfo';
      isChatroom ? (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onChatroomEvent', eventData) : (_e = _this.eventHandler) === null || _e === void 0 ? void 0 : _e.dispatch('onGroupEvent', eventData);
    },
    13: function _() {
      var _a, _b, _c, _d;
      info.type = 'allow'; //被移除黑名单 当事人收到
      info.reason = thirdMessage.reason;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'unblockMember';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    12: function _() {
      var _a, _b;
      // 无法出现
      info.type = 'ban';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
    },
    11: function _() {
      var _a, _b;
      // 无法出现
      info.type = 'getBlackList';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
    },
    10: function _() {
      var _a, _b, _c, _d;
      // 被移出群 被移出人收到 10， 其他人收到 18
      // 被加入黑名单 当事人收到 10， 其他人无通知
      info.type = 'removedFromGroup'; //被移出群 或者被加入黑名单
      info.kicked = info.to;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'removeMember';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    9: function _() {
      var _a, _b, _c, _d;
      info.type = 'invite_decline'; //拒绝加群邀请
      info.kicked = info.to;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'rejectInvite';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    8: function _() {
      var _a, _b, _c, _d;
      info.type = 'invite_accept'; //接受加群邀请
      info.kicked = info.to;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'acceptInvite';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    7: function _() {
      var _a, _b, _c, _d;
      info.type = 'invite'; //手机端邀请入群 "INVITE_ACCEPT": 8, "INVITE_DECLINE": 9,
      info.kicked = info.to;
      info.groupName = thirdMessage.mucName;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'inviteToJoin';
      eventData.name = thirdMessage.mucName;
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    6: function _() {
      var _a, _b, _c, _d;
      // 测试拒绝加群申请收不到这个事件
      info.type = 'joinPublicGroupDeclined'; //加群被拒绝
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'joinPublicGroupDeclined';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    5: function _() {
      var _a, _b, _c, _d;
      // 加群申请被同意了 申请人收到
      info.type = 'joinPublicGroupSuccess'; //加群成功
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'acceptRequest';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    4: function _() {
      var _a, _b, _c, _d;
      // 群主和管理员收到加群申请 reason: "申请加入"
      info.type = 'joinGroupNotifications'; //申请加群
      info.reason = thirdMessage.reason;
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'requestToJoin';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    3: function _() {
      var _a, _b;
      info.type = 'leave';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
    },
    2: function _() {
      var _a, _b;
      info.type = 'join';
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
    },
    1: function _() {
      var _a, _b, _c, _d;
      info.type = 'deleteGroupChat'; //群组解散
      _this.onPresence && _this.onPresence(info);
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomChange', info) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupChange', info);
      eventData.operation = 'destroy';
      thirdMessage.isChatroom ? (_c = _this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatroomEvent', eventData) : (_d = _this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onGroupEvent', eventData);
    },
    0: function _() {
      var _a, _b;
      eventData.operation = 'create'; //当前用户在其他设备上创建群组时触发，聊天室不会触发
      thirdMessage.isChatroom ? (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatroomEvent', eventData) : (_b = _this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onGroupEvent', eventData);
    }
  }[operation] || function () {
    console.error("No match operation ".concat(operation));
  })();
}
function handleMucMsg(meta) {
  var messageBodyMessage = this.root.lookup('easemob.pb.MUCBody');
  var thirdMessage = messageBodyMessage.decode(meta.payload);
  // let msgId = new Long(meta.id.low, meta.id.high, meta.id.unsigned).toString();
  var operation = thirdMessage.operation;
  _logger__WEBPACK_IMPORTED_MODULE_7__.logger.debug('onMucMessage', thirdMessage);
  condition.call(this, operation, thirdMessage);
}
/* harmony default export */ __webpack_exports__["default"] = (handleMucMsg);

/***/ }),

/***/ "./src/handleMessages/handleNotify.ts":
/*!********************************************!*\
  !*** ./src/handleMessages/handleNotify.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_entries_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.entries.js */ "./node_modules/core-js/modules/es.object.entries.js");
/* harmony import */ var core_js_modules_es_object_entries_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_entries_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _apis_formatLastMessage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../apis/formatLastMessage */ "./src/apis/formatLastMessage.ts");











/** this is a handler event for users use listen event */
/** 给用户监听的处理事件 */
function handleNotify(meta) {
  var msg = _utils__WEBPACK_IMPORTED_MODULE_8__.utils.parseNotify(meta.payload);
  var from = meta.from.name;
  var to = meta.to.name;
  switch (msg.type) {
    case 'presence':
      handlePresence.call(this, msg);
      break;
    case 'reaction':
      handleReaction.call(this, msg);
      break;
    case 'thread':
      handleThread.call(this, msg);
      break;
    case 'roaming_delete':
      handleDeleteRoaming.call(this, msg);
      break;
    default:
      _logger__WEBPACK_IMPORTED_MODULE_9__.logger.error("unexpected notify type: ".concat(msg.type));
      break;
  }
}
function handlePresence(msg) {
  var _a;
  var data = [];
  var statusArray = [];
  var presenceData = msg.data;
  presenceData && presenceData.values && presenceData.values.forEach(function (item) {
    Object.entries(item.status).forEach(function (val) {
      statusArray.push({
        device: val[0],
        status: Number(val[1])
      });
    });
    data.push({
      userId: item.uid,
      lastTime: Number(item.last_time),
      expire: Number(item.expiry),
      ext: item.ext,
      statusDetails: statusArray
    });
  });
  /** Occurs when the presence state of a subscribed user changes. */
  /** 被订阅用户的在线状态变更回调。 */
  this.onPresenceStatusChange && this.onPresenceStatusChange(data);
  (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onPresenceStatusChange', data);
}
function handleReaction(msgs) {
  var _this = this;
  var reactionMsgs = msgs.data;
  reactionMsgs.forEach(function (item) {
    var _a;
    var reactionMsg = {
      from: item.from,
      to: item.to,
      chatType: item.channel_type === 'chat' ? 'singleChat' : 'groupChat',
      messageId: item.messageId,
      reactions: item.reactions,
      ts: item.ts
    };
    (_a = _this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onReactionChange', reactionMsg);
  });
}
function handleThread(msg) {
  var _a, _b, _c, _d;
  if (msg.data) {
    var notify = msg.data;
    var notifyInfo = {
      id: notify.id || '',
      name: notify.name || '',
      parentId: notify.muc_parent_id || '',
      messageId: notify.msg_parent_id || '',
      timestamp: notify.timestamp || 0,
      operator: notify.from || '',
      operation: ''
    };
    switch (notify.operation) {
      case 'create':
        {
          notifyInfo.operation = 'create';
          notifyInfo.createTimestamp = notifyInfo.timestamp;
          notifyInfo.messageCount = 0;
          (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onChatThreadChange', notifyInfo);
          break;
        }
      case 'update_msg':
        {
          notifyInfo.operation = 'update';
          notifyInfo.messageCount = notify.message_count;
          notify.last_message && JSON.stringify(notify.last_message) !== '{}' ? notifyInfo.lastMessage = (0,_apis_formatLastMessage__WEBPACK_IMPORTED_MODULE_10__.formatMessage)(notify.last_message) : JSON.stringify(notify.last_message) === '{}' ? notifyInfo.lastMessage = {} : null;
          (_b = this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onChatThreadChange', notifyInfo);
          break;
        }
      case 'update':
        {
          notifyInfo.operation = 'update';
          notifyInfo.messageCount = notify.message_count;
          (_c = this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onChatThreadChange', notifyInfo);
          break;
        }
      case 'delete':
        {
          notifyInfo.operation = 'destroy';
          (_d = this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onChatThreadChange', notifyInfo);
          break;
        }
      default:
        break;
    }
  }
}
function handleDeleteRoaming(msg) {
  var _a;
  var info = msg.data;
  if (info.resource === this.clientResource) {
    // Block notifications to yourself
    return;
  }
  var roamingDeleteInfo = {
    operation: 'deleteRoaming',
    conversationId: info.to,
    chatType: info.chatType === 'chat' ? 'singleChat' : 'groupChat',
    resource: info.resource
  };
  (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onMultiDeviceEvent', roamingDeleteInfo);
}
/* harmony default export */ __webpack_exports__["default"] = (handleNotify);

/***/ }),

/***/ "./src/handleMessages/handleRosterMsg.ts":
/*!***********************************************!*\
  !*** ./src/handleMessages/handleRosterMsg.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");
/* harmony import */ var _dataReport_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dataReport/const */ "./src/dataReport/const.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");




var Operation;
(function (Operation) {
  Operation[Operation["Add"] = 2] = "Add";
  Operation[Operation["Remove"] = 3] = "Remove";
  Operation[Operation["Accept"] = 4] = "Accept";
  Operation[Operation["Decline"] = 5] = "Decline";
  Operation[Operation["Ban"] = 6] = "Ban";
  Operation[Operation["Allow"] = 7] = "Allow";
})(Operation || (Operation = {}));
function operatRoster(option, type) {
  var emptyMessage = [];
  var rosterBody = this.root.lookup('easemob.pb.RosterBody');
  var rosterBodyJson = rosterBody.decode(emptyMessage);
  switch (type) {
    case 'add':
      rosterBodyJson.operation = Operation['Add'];
      break;
    case 'remove':
      rosterBodyJson.operation = Operation['Remove'];
      break;
    case 'accept':
      rosterBodyJson.operation = Operation['Accept'];
      break;
    case 'decline':
      rosterBodyJson.operation = Operation['Decline'];
      break;
    case 'ban':
      rosterBodyJson.operation = Operation['Ban'];
      break;
    case 'allow':
      rosterBodyJson.operation = Operation['Allow'];
      break;
    default:
      _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('operatRoster:', type);
      break;
  }
  rosterBodyJson.from = this.context.jid;
  var nameList = [];
  if (typeof option.to === 'string') {
    nameList.push({
      appKey: this.appKey || this.context.appKey,
      name: option.to,
      domain: 'easemob.com'
    });
  } else if (option.to instanceof Array) {
    for (var i = 0; i < option.to.length; i++) {
      nameList.push({
        appKey: this.appKey,
        name: option.to[i],
        domain: 'easemob.com'
      });
    }
  }
  rosterBodyJson.to = nameList;
  rosterBodyJson.reason = option.message || '';
  rosterBodyJson = rosterBody.encode(rosterBodyJson).finish();
  var MetaMessage = this.root.lookup('easemob.pb.Meta');
  var MetaMessageJson = MetaMessage.decode(emptyMessage);
  MetaMessageJson.id = option.id || this.getUniqueId();
  // 创建好友操作rpt
  var rpt = this.dataReport.geOperateFun({
    operationName: _dataReport_types__WEBPACK_IMPORTED_MODULE_3__.OperationName[type]
  });
  _dataReport_const__WEBPACK_IMPORTED_MODULE_2__.FRIEND_OPT_REPORTS.size <= _dataReport_const__WEBPACK_IMPORTED_MODULE_2__.RPT_MAP_MAX_SIZE && _dataReport_const__WEBPACK_IMPORTED_MODULE_2__.FRIEND_OPT_REPORTS.set(MetaMessageJson.id, {
    rpt: rpt,
    requestName: _dataReport_types__WEBPACK_IMPORTED_MODULE_3__.OperationName[type]
  });
  MetaMessageJson.from = this.context.jid;
  MetaMessageJson.to = {
    domain: '@easemob.com'
  };
  MetaMessageJson.ns = 3;
  MetaMessageJson.payload = rosterBodyJson;
  var commSyncULMessage = this.root.lookup('easemob.pb.CommSyncUL');
  var commSyncULMessageJson = commSyncULMessage.decode(emptyMessage);
  commSyncULMessageJson.meta = MetaMessageJson;
  commSyncULMessageJson = commSyncULMessage.encode(commSyncULMessageJson).finish();
  var msyncMessage = this.root.lookup('easemob.pb.MSync');
  var msyncMessageJson = msyncMessage.decode(emptyMessage);
  msyncMessageJson.version = this.version;
  msyncMessageJson.encryptType = [0];
  msyncMessageJson.command = 0;
  msyncMessageJson.guid = this.jid;
  msyncMessageJson.payload = commSyncULMessageJson;
  msyncMessageJson = msyncMessage.encode(msyncMessageJson).finish();
  if (this.name === 'miniCore') {
    this.sock.send(msyncMessageJson);
  } else {
    var rosterMsg = this.mSync.base64transform(msyncMessageJson);
    this.sock.send(rosterMsg);
  }
}
function handleRosterMsg(meta) {
  var _a, _b, _c, _d, _e, _f;
  var messageBodyMessage = this.root.lookup('easemob.pb.RosterBody');
  var thirdMessage = messageBodyMessage.decode(meta.payload);
  // let msgId = new Long(meta.id.low, meta.id.high, meta.id.unsigned).toString();
  var msg = {
    type: '',
    to: thirdMessage.to[0].name,
    from: thirdMessage.from.name,
    status: thirdMessage.reason
  };
  switch (thirdMessage.operation) {
    case 2:
      msg.type = 'subscribe';
      this.onContactInvited && this.onContactInvited(msg);
      (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onContactInvited', msg);
      break;
    case 3:
      msg.type = 'unsubscribed';
      this.onContactDeleted && this.onContactDeleted(msg);
      (_b = this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onContactDeleted', msg);
      // logger.warn(`in onPresence function, case unsubscribed is no longer maintained from version 3.3.0.
      //         Please use onContactDeleted instead.
      //         refer to the documentation for details:
      //         http://docs-im.easemob.com/im/web/basics/buddy`)
      break;
    case 4:
      //A请求B，B同意，B会收到此回调，同时A收到 onContactAgreed 回调
      msg.type = 'subscribed';
      this.onContactAdded && this.onContactAdded(msg);
      (_c = this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onContactAdded', msg);
      // logger.warn(`in onPresence function, case subscribed is no longer maintained from version 3.3.0.
      //         Please use onContactAdded instead.
      //         refer to the documentation for details:
      //         http://docs-im.easemob.com/im/web/basics/buddy`)
      break;
    case 5:
      // 测试拒绝时走的case 9，没有这种情况
      msg.type = 'unsubscribed';
      this.onContactRefuse && this.onContactRefuse(msg);
      (_d = this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onContactRefuse', msg);
      // logger.warn(`in onPresence function, case unsubscribed is no longer maintained from version 3.3.0.
      //         Please use onContactRefuse instead.
      //         refer to the documentation for details:
      //         http://docs-im.easemob.com/im/web/basics/buddy`)
      break;
    case 6:
      // this.getBlacklist();
      break;
    case 7:
      // this.getBlacklist();
      break;
    case 8:
      msg.type = 'subscribed';
      this.onContactAgreed && this.onContactAgreed(msg);
      (_e = this.eventHandler) === null || _e === void 0 ? void 0 : _e.dispatch('onContactAgreed', msg);
      // logger.warn(`in onPresence function, case subscribed is no longer maintained from version 3.3.0.
      //         Please use onContactAgreed instead.
      //         refer to the documentation for details:
      //         http://docs-im.easemob.com/im/web/basics/buddy`)
      break;
    case 9:
      msg.type = 'unsubscribed';
      this.onContactRefuse && this.onContactRefuse(msg);
      (_f = this.eventHandler) === null || _f === void 0 ? void 0 : _f.dispatch('onContactRefuse', msg);
      // logger.warn(`in onPresence function, case unsubscribed is no longer maintained from version 3.3.0.
      //         Please use onContactRefuse instead.
      //         refer to the documentation for details:
      //         http://docs-im.easemob.com/im/web/basics/buddy`)
      break;
    default:
      _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('handleRosterMsg:', thirdMessage);
      break;
  }
  this.onPresence && msg.type && this.onPresence(msg);
}
var rosterMgr = {
  operatRoster: operatRoster,
  handleRosterMsg: handleRosterMsg
};
/* harmony default export */ __webpack_exports__["default"] = (rosterMgr);

/***/ }),

/***/ "./src/handleMessages/handleStatisticMsg.ts":
/*!**************************************************!*\
  !*** ./src/handleMessages/handleStatisticMsg.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/error */ "./src/error/error.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");



function handleStatisticsMsg(meta) {
  var _a, _b, _c, _d, _e;
  var messageBodyMessage = this.root.lookup('easemob.pb.StatisticsBody');
  var thirdMessage = messageBodyMessage.decode(meta.payload);
  // let msgId = new Long(meta.id.low, meta.id.high, meta.id.unsigned).toString();
  var errorObj;
  switch (thirdMessage.operation) {
    case 0:
      this.onStatisticMessage && this.onStatisticMessage(thirdMessage);
      (_a = this.eventHandler) === null || _a === void 0 ? void 0 : _a.dispatch('onStatisticMessage', thirdMessage);
      break;
    case 1:
      errorObj = _error_error__WEBPACK_IMPORTED_MODULE_1__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_0__.Code.WEBIM_CONNCTION_USER_REMOVED,
        message: 'user has been removed'
      });
      this.logOut = true;
      this.onError && this.onError(errorObj);
      (_b = this.eventHandler) === null || _b === void 0 ? void 0 : _b.dispatch('onError', errorObj);
      // this.onClosed();
      break;
    case 2:
      errorObj = _error_error__WEBPACK_IMPORTED_MODULE_1__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_0__.Code.WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE,
        message: 'the user is already logged on another device'
      });
      this.logOut = true;
      this.onError && this.onError(errorObj);
      (_c = this.eventHandler) === null || _c === void 0 ? void 0 : _c.dispatch('onError', errorObj);
      break;
    case 3:
      errorObj = _error_error__WEBPACK_IMPORTED_MODULE_1__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_0__.Code.WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD,
        message: 'the user was kicked by changing password'
      });
      this.logOut = true;
      this.onError && this.onError(errorObj);
      (_d = this.eventHandler) === null || _d === void 0 ? void 0 : _d.dispatch('onError', errorObj);
      break;
    case 4:
      errorObj = _error_error__WEBPACK_IMPORTED_MODULE_1__["default"].create({
        type: _status__WEBPACK_IMPORTED_MODULE_0__.Code.WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE,
        message: 'the user was kicked by other device'
      });
      this.logOut = true;
      this.onError && this.onError(errorObj);
      (_e = this.eventHandler) === null || _e === void 0 ? void 0 : _e.dispatch('onError', errorObj);
      break;
    default:
      _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error('handleStatisticsMsg:', thirdMessage);
      break;
  }
}
/* harmony default export */ __webpack_exports__["default"] = (handleStatisticsMsg);

/***/ }),

/***/ "./src/handleMessages/index.ts":
/*!*************************************!*\
  !*** ./src/handleMessages/index.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "handleChatMsg": function() { return /* reexport safe */ _handleChatMsg__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   "handleMucMsg": function() { return /* reexport safe */ _handleMucMsg__WEBPACK_IMPORTED_MODULE_1__["default"]; },
/* harmony export */   "handleNotify": function() { return /* reexport safe */ _handleNotify__WEBPACK_IMPORTED_MODULE_4__["default"]; },
/* harmony export */   "handleStatisticsMsg": function() { return /* reexport safe */ _handleStatisticMsg__WEBPACK_IMPORTED_MODULE_3__["default"]; },
/* harmony export */   "rosterMgr": function() { return /* reexport safe */ _handleRosterMsg__WEBPACK_IMPORTED_MODULE_2__["default"]; }
/* harmony export */ });
/* harmony import */ var _handleChatMsg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handleChatMsg */ "./src/handleMessages/handleChatMsg.ts");
/* harmony import */ var _handleMucMsg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handleMucMsg */ "./src/handleMessages/handleMucMsg.ts");
/* harmony import */ var _handleRosterMsg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handleRosterMsg */ "./src/handleMessages/handleRosterMsg.ts");
/* harmony import */ var _handleStatisticMsg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./handleStatisticMsg */ "./src/handleMessages/handleStatisticMsg.ts");
/* harmony import */ var _handleNotify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handleNotify */ "./src/handleMessages/handleNotify.ts");







/***/ }),

/***/ "./src/logger/index.ts":
/*!*****************************!*\
  !*** ./src/logger/index.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Levels": function() { return /* binding */ Levels; },
/* harmony export */   "Logger": function() { return /* binding */ Logger; },
/* harmony export */   "logger": function() { return /* binding */ logger; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ "./node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.join.js */ "./node_modules/core-js/modules/es.array.join.js");
/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/web.url.js */ "./node_modules/core-js/modules/web.url.js");
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/web.url-search-params.js */ "./node_modules/core-js/modules/web.url-search-params.js");
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.array.for-each.js */ "./node_modules/core-js/modules/es.array.for-each.js");
/* harmony import */ var core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./util */ "./src/logger/util.ts");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }


















var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};
/**
 *
 * The log module of the SDK.
 * @module Logger
 */

var emptyFun = function emptyFun() {
  // do nothing
};
var _loggersByName = {};
var Levels;
(function (Levels) {
  Levels[Levels["TRACE"] = 0] = "TRACE";
  Levels[Levels["DEBUG"] = 1] = "DEBUG";
  Levels[Levels["INFO"] = 2] = "INFO";
  Levels[Levels["WARN"] = 3] = "WARN";
  Levels[Levels["ERROR"] = 4] = "ERROR";
  Levels[Levels["SILENT"] = 5] = "SILENT";
})(Levels || (Levels = {}));
var Logger = /** @class */function () {
  function Logger(name, defaultLevel, factory) {
    this.name = name || 'defaultLogger';
    this.currentLevel = 0;
    this.useCookiePersist = false; // 使用cookie 存储 storageLogLevelKey
    this.storageLogLevelKey = 'loglevel';
    this.levels = Levels;
    this.logMethods = ['trace', 'debug', 'info', 'warn', 'error'];
    this.methodFactory = factory || this.defaultMethodFactory;
    // Initialize with the right level
    var initialLevel = this._getPersistedLevel();
    if (initialLevel === null || initialLevel === undefined) {
      initialLevel = defaultLevel === null ? 'WARN' : defaultLevel;
    }
    this.logs = [];
    this.config = {
      useCache: false,
      maxCache: 3 * 1024 * 1024,
      color: '',
      background: ''
    };
    this.logBytes = 0;
    this.setLevel(initialLevel, false, '');
  }
  /** set Logger config. */
  /** 设置Logger配置。 */
  Logger.prototype.setConfig = function ( /** The logger configuration.  */
  /** logger 配置。 */
  config) {
    this.config = config;
  };
  /** Gets the current log level. */
  /** 获取当前日志等级。 */
  Logger.prototype.getLevel = function () {
    return this.currentLevel;
  };
  /** Sets the log level. The value range is 0-5. */
  /** 设置日志等级，可选范围：0-5。*/
  Logger.prototype.setLevel = function (level, persist, name) {
    if (typeof level === 'string') {
      level = Levels[level];
    }
    if (typeof level === 'undefined') {
      // return console.error('level', level)
      level = 0;
    }
    if (typeof level === 'number' && level >= 0 && level <= this.levels.SILENT) {
      this.currentLevel = level;
      if (persist !== false) {
        this._persistLevel(level);
      }
      this.replaceLoggingMethods(level, name);
      if (typeof console === 'undefined' && level < Levels.SILENT) {
        throw Error('No console available for logging');
      }
    } else {
      throw Error('log.setLevel() called with invalid level: ' + level);
    }
  };
  /** @hidden */
  Logger.prototype.setDefaultLevel = function (level) {
    if (!this._getPersistedLevel()) {
      this.setLevel(level, false, '');
    }
  };
  /** Enables the output of all levels of logs. */
  /** 输出全部等级的日志。 */
  Logger.prototype.enableAll = function ( /** Whether to persist the level of logs. - (Default)`true`: Yes, so you will get the logs of the remembered level next time; - `false`: No.*/
  /** 是否记住日志等级。-（默认）`true`：记住后下次可以直接输出记住的等级的日志； - `false`：不记住。 */
  persist) {
    this.setLevel(this.levels.TRACE, persist = true, '');
  };
  /** Disables the output of all levels of logs. */
  /** 禁止全部等级的日志输出。 */
  Logger.prototype.disableAll = function ( /** Whether to persist the level of logs. - (Default)`true`: Yes; - `false`: No.*/
  /** 是否记住日志等级。-（默认）`true`：记住； - `false`：不记住。 */
  persist) {
    this.setLevel(this.levels.SILENT, persist = true, '');
  };
  /** Gets cached logs. */
  /** 获取缓存日志。 */
  Logger.prototype.getLogs = function () {
    return this.logs;
  };
  /** Downloads logs. */
  /** 下载日志文件。 */
  Logger.prototype.download = function () {
    if (typeof window !== 'undefined' && typeof document !== 'undefined') {
      var logData = this.getLogs().join('\n');
      var blob = new Blob([logData], {
        type: 'text/plain;charset=UTF-8'
      });
      var url = window.URL.createObjectURL(blob);
      // var postdata = new FormData();
      var link = document.createElement('a');
      link.style.display = 'none';
      link.href = url;
      link.setAttribute('download', 'sdklog');
      document.body.appendChild(link);
      link.click();
    }
  };
  // Cross-browser bind equivalent that works at least back to IE6
  /** @hidden */
  Logger.prototype._bindMethod = function (obj, methodName, useCache) {
    var _this = this;
    var method = obj[methodName];
    var time = this.getTime();
    if (useCache) {
      return this._cacheLog;
    } else if (typeof method.bind === 'function') {
      return function () {
        var arg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          arg[_i] = arguments[_i];
        }
        var time = _this.getTime();
        method.call.apply(method, __spreadArray([obj, "".concat(time, " IM SDK [").concat(methodName === 'log' ? 'debug' : methodName, "]: ")], arg, false));
        _this.onLog && _this.onLog({
          time: time,
          level: methodName === 'log' ? 'debug' : methodName,
          logs: arg
        });
      };
    } else {
      try {
        return Function.prototype.bind.call(method, obj, "".concat(time, " IM SDK [").concat(methodName === 'log' ? 'debug' : methodName, "]: "));
      } catch (e) {
        // Missing bind shim or IE8 + Modernizr, fallback to wrapping
        return function () {
          return Function.prototype.apply.apply(method, [obj,
          // eslint-disable-next-line prefer-rest-params
          arguments]);
        };
      }
    }
  };
  /** @hidden */
  Logger.prototype.getTime = function () {
    var date = new Date();
    return date.toTimeString().split(' ')[0] + ':' + date.getMilliseconds();
  };
  /** @hidden */
  Logger.prototype._cacheLog = function () {
    var rest = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      rest[_i] = arguments[_i];
    }
    var time = new Date().toLocaleString() + ': ';
    var stringLog = '';
    rest.forEach(function (item) {
      if (_typeof(item) === 'object') {
        stringLog += JSON.stringify(item) + ' ';
      } else {
        stringLog += item + ' ';
      }
    });
    this._cacheLogCall(time + stringLog);
    // console.log( time, ...rest);
  };
  /** @hidden */
  Logger.prototype._cacheLogCall = function (log) {
    var logB = bytesLength(log);
    var futureB = this.logBytes + logB;
    var maxCache = this.config.maxCache;
    if (logB >= maxCache) {
      return;
    }
    if (futureB < maxCache) {
      this.logBytes += logB;
    } else {
      var midB = futureB - maxCache;
      var clearOutB = 0;
      while (clearOutB < midB) {
        var clearOutLog = this.logs.shift();
        if (typeof clearOutLog !== 'undefined') {
          clearOutB += bytesLength(clearOutLog);
        }
      }
    }
    this.logs.push(log);
  };
  // get local stored level
  /** @hidden */
  Logger.prototype._getPersistedLevel = function () {
    var storedLevel;
    if (typeof window === 'undefined') {
      return 5;
      // return console.warn('this lib can run in browser only!')
    }

    storedLevel = window && window.localStorage && window.localStorage[this.storageLogLevelKey];
    if (storedLevel === 'undefined') {
      var cookie = window.document.cookie;
      var location_1 = cookie.indexOf(encodeURIComponent(this.storageLogLevelKey));
      if (location_1 !== -1) {
        storedLevel = /^([^;]+)/.exec(cookie.slice(location_1))[1];
      }
    }
    return storedLevel || 5;
  };
  // Store level persistently in browser
  /** @hidden */
  Logger.prototype._persistLevel = function (levelNum) {
    var levelName = this.logMethods[levelNum] || 'SILENT';
    if (typeof window === 'undefined') {
      return; // console.warn('this lib can run in browser only!')
    }

    if (window.localStorage) {
      window.localStorage[this.storageLogLevelKey] = levelName;
    }
    if (this.useCookiePersist) {
      window.document.cookie = encodeURIComponent(this.storageLogLevelKey) + '=' + levelName + ';';
    }
  };
  /** @hidden */
  Logger.prototype.replaceLoggingMethods = function (level, loggerName) {
    for (var i = 0; i < this.logMethods.length; i++) {
      var methodName = this.logMethods[i];
      this[methodName] = i < level ? emptyFun : this.methodFactory(methodName, level, loggerName);
    }
    // Define log.log as an alias for log.debug
    this.log = this.debug;
  };
  // By default, we use closely bound real methods wherever possible, and
  // otherwise we wait for a console to appear, and then try again.
  /** @hidden */
  Logger.prototype.defaultMethodFactory = function (methodName, level, loggerName) {
    return this.realMethod(methodName) || this.enableLoggingWhenConsoleArrives.apply(this, [methodName, level, loggerName]);
  };
  // Build the best logging method possible for this env
  // Wherever possible we want to bind, not wrap, to preserve stack traces
  /** @hidden */
  Logger.prototype.realMethod = function (methodName) {
    if (methodName === 'debug') {
      methodName = 'log';
    }
    if (typeof console === 'undefined') {
      return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives
    } else if (methodName === 'trace' && _util__WEBPACK_IMPORTED_MODULE_18__.isIE) {
      return _util__WEBPACK_IMPORTED_MODULE_18__.traceForIE;
    } else if (typeof console[methodName] !== 'undefined') {
      return this._bindMethod(console, methodName, this.config.useCache);
    } else if (typeof console.log !== 'undefined') {
      return this._bindMethod(console, 'log', this.config.useCache);
    } else {
      return emptyFun;
    }
  };
  // In old IE versions, the console isn't present until you first open it.
  // We build realMethod() replacements here that regenerate logging methods
  /** @hidden */
  Logger.prototype.enableLoggingWhenConsoleArrives = function (methodName, level, loggerName) {
    return function () {
      if (typeof console !== 'undefined') {
        this.replaceLoggingMethods.call(this, level, loggerName);
        // eslint-disable-next-line prefer-rest-params
        this[methodName].apply(this, arguments);
      }
    }.bind(this);
  };
  return Logger;
}();

function bytesLength(str) {
  var count = str.length;
  for (var i = 0; i < str.length; i++) {
    if (str.charCodeAt(i) > 255) {
      count++;
    }
  }
  return count;
}
var defaultLogger = new Logger();
defaultLogger.getLogger = function (name) {
  if (typeof name !== 'string' || name === '') {
    throw new TypeError('You must supply a name when creating a logger.');
  }
  return this;
  // let logger = _loggersByName[name] as any;
  // if (!logger) {
  // 	logger = _loggersByName[name] = new Logger(
  // 		name,
  // 		defaultLogger.getLevel(),
  // 		defaultLogger.methodFactory
  // 	);
  // }
  // return logger;
};
// Grab the current global log variable in case of overwrite
var _log = typeof window !== 'undefined' ? window.log : undefined;
defaultLogger.noConflict = function () {
  if (typeof window !== 'undefined' && window.log === defaultLogger) {
    window.log = _log;
  }
  return defaultLogger;
};
defaultLogger.getLoggers = function getLoggers() {
  return _loggersByName;
};
var logger = defaultLogger;


/***/ }),

/***/ "./src/logger/util.ts":
/*!****************************!*\
  !*** ./src/logger/util.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isIE": function() { return /* binding */ isIE; },
/* harmony export */   "traceForIE": function() { return /* binding */ traceForIE; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);


/* eslint-disable prefer-rest-params */
// Trace() doesn't print the message in IE, so for that case we need to wrap it
function traceForIE() {
  if (console.log) {
    if (console.log.apply) {
      // eslint-disable-next-line prefer-spread
      console.log.apply(console, Array.prototype.slice.call(arguments));
    } else {
      // In old IE, native console methods themselves don't have apply().
      Function.prototype.apply.apply(console.log, [console, arguments]);
    }
  }
  if (console.trace) console.trace();
}
var isIE = typeof window !== 'undefined' && typeof window.navigator !== 'undefined' && /Trident\/|MSIE /.test(window.navigator.userAgent);

/***/ }),

/***/ "./src/message/audio.ts":
/*!******************************!*\
  !*** ./src/message/audio.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Audio": function() { return /* binding */ Audio; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Audio = /** @class */function () {
  function Audio(parameters) {
    var type = parameters.type;
    var id = parameters.id || _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId();
    this.id = id;
    this.type = type;
  }
  /**
   * @hidden
   */
  Audio.prototype.set = function (options) {
    options.file = options.file || options.fileInputId && _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getFileUrl(options.fileInputId);
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'audio',
      file: options.file,
      filename: options.filename,
      length: options.length,
      file_length: options.file_length,
      fileInputId: options.fileInputId,
      to: options.to,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now(),
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      isChatThread: options.isChatThread
    };
  };
  /**
   * @hidden
   */
  Audio.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Audio.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Audio.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      chatType: options.chatType,
      type: 'audio',
      filename: options.filename,
      length: options.length,
      file: options.file,
      to: options.to,
      from: options.from || '',
      ext: options.ext,
      time: Date.now(),
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      file_length: options.file_length,
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Audio;
}();

// export default Audio;

/***/ }),

/***/ "./src/message/channel.ts":
/*!********************************!*\
  !*** ./src/message/channel.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Channel": function() { return /* binding */ Channel; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Channel = /** @class */function () {
  function Channel(parameters) {
    var type = parameters.type;
    var id = parameters.id;
    this.id = id;
    this.type = type;
  }
  /**
   * @hidden
   */
  Channel.prototype.set = function (options) {
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'channel',
      to: options.to,
      from: options.from || '',
      time: Date.now()
    };
  };
  /**
   * @hidden
   */
  Channel.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Channel.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Channel.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      type: 'channel',
      chatType: options.chatType || 'singleChat',
      to: options.to,
      from: options.from || '',
      time: Date.now(),
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Channel;
}();

// export default Channel;

/***/ }),

/***/ "./src/message/cmd.ts":
/*!****************************!*\
  !*** ./src/message/cmd.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cmd": function() { return /* binding */ Cmd; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Cmd = /** @class */function () {
  function Cmd(parameters) {
    var type = parameters.type;
    var id = parameters.id;
    this.id = id || _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId();
    this.type = type;
  }
  /**
   * @hidden
   */
  Cmd.prototype.set = function (options) {
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'cmd',
      to: options.to,
      action: options.action,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now()
    };
  };
  /**
   * @hidden
   */
  Cmd.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Cmd.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Cmd.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      type: 'cmd',
      to: options.to,
      from: options.from || '',
      chatType: options.chatType || 'singleChat',
      action: options.action,
      time: Date.now(),
      ext: options.ext,
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Cmd;
}();

// export default Cmd;

/***/ }),

/***/ "./src/message/custom.ts":
/*!*******************************!*\
  !*** ./src/message/custom.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Custom": function() { return /* binding */ Custom; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Custom = /** @class */function () {
  function Custom(parameters) {
    var type = parameters.type;
    var id = parameters.id || _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId();
    this.id = id;
    this.type = type;
  }
  /**
   * @hidden
   */
  Custom.prototype.set = function (options) {
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'custom',
      to: options.to,
      customEvent: options.customEvent,
      customExts: options.customExts,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now()
    };
  };
  /**
   * @hidden
   */
  Custom.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Custom.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Custom.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      chatType: options.chatType || 'singleChat',
      type: 'custom',
      to: options.to,
      customEvent: options.customEvent,
      customExts: options.customExts,
      from: options.from || '',
      ext: options.ext,
      time: Date.now(),
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Custom;
}();

// export default Custom;

/***/ }),

/***/ "./src/message/delivery.ts":
/*!*********************************!*\
  !*** ./src/message/delivery.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Delivery": function() { return /* binding */ Delivery; }
/* harmony export */ });
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");

var Delivery = /** @class */function () {
  function Delivery(parameters) {
    this.id = parameters.id;
    this.type = parameters.type;
  }
  /**
   * @hidden
   */
  Delivery.prototype.set = function (options) {
    this.body = {
      id: this.id,
      ackId: options.ackId,
      type: 'delivery',
      to: options.to,
      from: options.from || ''
    };
  };
  Delivery.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_0__.utils.getUniqueId(),
      ackId: options.ackId,
      type: 'delivery',
      to: options.to,
      from: options.from || '',
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Delivery;
}();

// export default Delivery;

/***/ }),

/***/ "./src/message/file.ts":
/*!*****************************!*\
  !*** ./src/message/file.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileMsg": function() { return /* binding */ FileMsg; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var FileMsg = /** @class */function () {
  function FileMsg(parameters) {
    var type = parameters.type;
    var id = parameters.id;
    this.id = id;
    this.type = type;
  }
  /**
   * @hidden
   */
  FileMsg.prototype.set = function (options) {
    options.file = options.file || options.fileInputId && _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getFileUrl(options.fileInputId);
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'file',
      file: options.file,
      filename: options.filename,
      fileInputId: options.fileInputId,
      to: options.to,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now(),
      // apiUrl: options.apiUrl,
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      isChatThread: options.isChatThread
    };
  };
  /**
   * @hidden
   */
  FileMsg.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  FileMsg.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  FileMsg.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      chatType: options.chatType || 'singleChat',
      type: 'file',
      file: options.file,
      filename: options.filename,
      fileInputId: options.fileInputId,
      file_length: options.file_length,
      to: options.to,
      from: options.from || '',
      ext: options.ext,
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      time: Date.now(),
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return FileMsg;
}();

// export default FileMsg;

/***/ }),

/***/ "./src/message/img.ts":
/*!****************************!*\
  !*** ./src/message/img.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Img": function() { return /* binding */ Img; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Img = /** @class */function () {
  function Img(parameters) {
    var type = parameters.type;
    var id = parameters.id || _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId();
    this.id = id;
    this.type = type;
  }
  /**
   * @hidden
   */
  Img.prototype.set = function (options) {
    options.file = options.file || options.fileInputId && _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getFileUrl(options.fileInputId);
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'img',
      file: options.file,
      width: options.width,
      height: options.height,
      to: options.to,
      from: options.from || '',
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now(),
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      isChatThread: options.isChatThread
    };
  };
  /**
   * @hidden
   */
  Img.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Img.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Img.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      chatType: options.chatType,
      type: 'img',
      url: options.url,
      width: options.width,
      height: options.height,
      file: options.file,
      to: options.to,
      from: options.from || '',
      ext: options.ext,
      time: Date.now(),
      msgConfig: options.msgConfig,
      file_length: options.file_length,
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Img;
}();

// export default Img;

/***/ }),

/***/ "./src/message/index.ts":
/*!******************************!*\
  !*** ./src/message/index.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Message": function() { return /* binding */ Message; }
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
/* harmony import */ var _read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./read */ "./src/message/read.ts");
/* harmony import */ var _delivery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./delivery */ "./src/message/delivery.ts");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./channel */ "./src/message/channel.ts");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./text */ "./src/message/text.ts");
/* harmony import */ var _cmd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cmd */ "./src/message/cmd.ts");
/* harmony import */ var _custom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./custom */ "./src/message/custom.ts");
/* harmony import */ var _location__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./location */ "./src/message/location.ts");
/* harmony import */ var _img__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./img */ "./src/message/img.ts");
/* harmony import */ var _audio__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./audio */ "./src/message/audio.ts");
/* harmony import */ var _video__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./video */ "./src/message/video.ts");
/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./file */ "./src/message/file.ts");
/**
 *
 * Message is the module where the SDK constructs messages
 * @module Message
 */












function isImg(params) {
  return params.type === 'img' && !('version' in params);
}
function isTxt(params) {
  return params.type === 'txt' && !('version' in params);
}
function isCmd(params) {
  return params.type === 'cmd' && !('version' in params);
}
function isFile(params) {
  return params.type === 'file' && !('version' in params);
}
function isAudio(params) {
  return params.type === 'audio' && !('version' in params);
}
function isVideo(params) {
  return params.type === 'video' && !('version' in params);
}
function isCustom(params) {
  return params.type === 'custom' && !('version' in params);
}
function isLocation(params) {
  return params.type === 'loc' && !('version' in params);
}
function isChannel(params) {
  return params.type === 'channel' && !('version' in params);
}
function isDelivery(params) {
  return params.type === 'delivery' && !('version' in params);
}
function isRead(params) {
  return params.type === 'read' && !('version' in params);
}
var Message = /** @class */function () {
  function Message(type, id) {
    this.type = type;
    this.id = id || _utils__WEBPACK_IMPORTED_MODULE_0__.utils.getUniqueId();
    return Message.createOldMsg({
      type: type,
      id: this.id
    });
  }
  /** @hidden */
  Message.createOldMsg = function (options) {
    switch (options.type) {
      case 'read':
        return new _read__WEBPACK_IMPORTED_MODULE_1__.Read({
          type: 'read',
          id: options.id
        });
      case 'delivery':
        return new _delivery__WEBPACK_IMPORTED_MODULE_2__.Delivery({
          type: 'delivery',
          id: options.id
        });
      case 'channel':
        return new _channel__WEBPACK_IMPORTED_MODULE_3__.Channel({
          type: 'channel',
          id: options.id
        });
      case 'txt':
        return new _text__WEBPACK_IMPORTED_MODULE_4__.Text({
          type: 'txt',
          id: options.id
        });
      case 'cmd':
        return new _cmd__WEBPACK_IMPORTED_MODULE_5__.Cmd({
          type: 'cmd',
          id: options.id
        });
      case 'custom':
        return new _custom__WEBPACK_IMPORTED_MODULE_6__.Custom({
          type: 'custom',
          id: options.id
        });
      case 'loc':
        return new _location__WEBPACK_IMPORTED_MODULE_7__.Location({
          type: 'loc',
          id: options.id
        });
      case 'img':
        return new _img__WEBPACK_IMPORTED_MODULE_8__.Img({
          type: 'img',
          id: options.id
        });
      case 'audio':
        return new _audio__WEBPACK_IMPORTED_MODULE_9__.Audio({
          type: 'audio',
          id: options.id
        });
      case 'video':
        return new _video__WEBPACK_IMPORTED_MODULE_10__.Video({
          type: 'video',
          id: options.id
        });
      case 'file':
        return new _file__WEBPACK_IMPORTED_MODULE_11__.FileMsg({
          type: 'file',
          id: options.id
        });
      default:
        break;
      //return { id: options.id, type: options.type } as unknown as MessageClasses
    }
  };
  /** Creates a message. */
  /** 创建消息。*/
  Message.create = function (options) {
    if (isTxt(options)) {
      return _text__WEBPACK_IMPORTED_MODULE_4__.Text.create(options);
    } else if (isImg(options)) {
      return _img__WEBPACK_IMPORTED_MODULE_8__.Img.create(options);
    } else if (isCmd(options)) {
      return _cmd__WEBPACK_IMPORTED_MODULE_5__.Cmd.create(options);
    } else if (isFile(options)) {
      return _file__WEBPACK_IMPORTED_MODULE_11__.FileMsg.create(options);
    } else if (isAudio(options)) {
      return _audio__WEBPACK_IMPORTED_MODULE_9__.Audio.create(options);
    } else if (isVideo(options)) {
      return _video__WEBPACK_IMPORTED_MODULE_10__.Video.create(options);
    } else if (isCustom(options)) {
      return _custom__WEBPACK_IMPORTED_MODULE_6__.Custom.create(options);
    } else if (isLocation(options)) {
      return _location__WEBPACK_IMPORTED_MODULE_7__.Location.create(options);
    } else if (isChannel(options)) {
      return _channel__WEBPACK_IMPORTED_MODULE_3__.Channel.create(options);
    } else if (isDelivery(options)) {
      return _delivery__WEBPACK_IMPORTED_MODULE_2__.Delivery.create(options);
    } else if (isRead(options)) {
      return _read__WEBPACK_IMPORTED_MODULE_1__.Read.create(options);
    }
    return {};
  };
  /**
   * @hidden
   * Set the message body.
   */
  /**
   * @hidden
   * 设置消息体。
   */
  Message.prototype.set = function (options) {
    // do nothing
  };
  return Message;
}();


/***/ }),

/***/ "./src/message/location.ts":
/*!*********************************!*\
  !*** ./src/message/location.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Location": function() { return /* binding */ Location; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Location = /** @class */function () {
  function Location(parameters) {
    var type = parameters.type;
    var id = parameters.id;
    this.id = id || _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId();
    this.type = type;
  }
  /**
   * @hidden
   */
  Location.prototype.set = function (options) {
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'loc',
      to: options.to,
      addr: options.addr,
      buildingName: options.buildingName,
      lat: options.lat,
      lng: options.lng,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now()
    };
  };
  /**
   * @hidden
   */
  Location.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Location.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Location.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      chatType: options.chatType || 'singleChat',
      type: 'loc',
      to: options.to,
      addr: options.addr,
      buildingName: options.buildingName,
      lat: options.lat,
      lng: options.lng,
      from: options.from || '',
      ext: options.ext,
      time: Date.now(),
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Location;
}();

// export default Location;

/***/ }),

/***/ "./src/message/read.ts":
/*!*****************************!*\
  !*** ./src/message/read.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Read": function() { return /* binding */ Read; }
/* harmony export */ });
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");
// import { ReadMsgBody, ReadMsgSetParameters, ReadParameters } from "../types/message";

var Read = /** @class */function () {
  function Read(parameters) {
    var id = parameters.id;
    this.id = id;
    this.type = parameters.type;
  }
  /**
   * @hidden
   */
  Read.prototype.set = function (options) {
    this.body = {
      id: this.id,
      ackId: options.id,
      type: 'read',
      to: options.to,
      from: options.from || '',
      chatType: options.chatType
    };
  };
  Read.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_0__.utils.getUniqueId(),
      chatType: options.chatType,
      ackId: options.id,
      type: 'read',
      to: options.to,
      from: options.from || '',
      ackContent: options.ackContent,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Read;
}();

// export default Read;

/***/ }),

/***/ "./src/message/text.ts":
/*!*****************************!*\
  !*** ./src/message/text.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Text": function() { return /* binding */ Text; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.is-array.js */ "./node_modules/core-js/modules/es.array.is-array.js");
/* harmony import */ var core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_is_array_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");




var Text = /** @class */function () {
  function Text(parameters) {
    var type = parameters.type;
    var id = parameters.id || _utils_index__WEBPACK_IMPORTED_MODULE_3__.utils.getUniqueId();
    this.id = id;
    this.type = type;
    this.value = '';
  }
  /**
   * @hidden
   */
  Text.prototype.set = function (options) {
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'txt',
      to: options.to,
      msg: options.msg,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now(),
      isChatThread: options.isChatThread //去掉3.0中 isChatThread字段
    };

    this.value = options.msg;
  };
  /**
   * @hidden
   */
  Text.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Text.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Text.create = function (options) {
    var _a, _b;
    if (((_a = options.msgConfig) === null || _a === void 0 ? void 0 : _a.languages) && Array.isArray((_b = options.msgConfig) === null || _b === void 0 ? void 0 : _b.languages)) {
      var translation = {};
    }
    return {
      type: 'txt',
      id: _utils_index__WEBPACK_IMPORTED_MODULE_3__.utils.getUniqueId(),
      msg: options.msg,
      to: options.to,
      from: options.from || '',
      chatType: options.chatType,
      ext: options.ext,
      time: Date.now(),
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Text;
}();

// export default Text;

/***/ }),

/***/ "./src/message/video.ts":
/*!******************************!*\
  !*** ./src/message/video.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Video": function() { return /* binding */ Video; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.date.now.js */ "./node_modules/core-js/modules/es.date.now.js");
/* harmony import */ var core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index */ "./src/utils/index.ts");



var Video = /** @class */function () {
  function Video(parameters) {
    var type = parameters.type;
    var id = parameters.id;
    this.id = id;
    this.type = type;
  }
  /**
   * @hidden
   */
  Video.prototype.set = function (options) {
    options.file = options.file || options.fileInputId && _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getFileUrl(options.fileInputId);
    this.body = {
      id: this.id,
      chatType: options.chatType || 'singleChat',
      type: 'video',
      file: options.file,
      filename: options.filename,
      length: options.length,
      file_length: options.file_length,
      fileInputId: options.fileInputId,
      to: options.to,
      from: options.from,
      roomType: options.roomType,
      success: options.success,
      fail: options.fail,
      ext: options.ext,
      time: Date.now(),
      apiUrl: options.apiUrl,
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      isChatThread: options.isChatThread //去掉3.0中 isChatThread字段
    };
  };
  /**
   * @hidden
   */
  Video.prototype.setChatType = function (chatType) {
    if (this.body) {
      this.body.chatType = chatType;
      return true;
    }
    return false;
  };
  // 3.0 api, will Deprecate in version 4.0
  /**
   * @hidden
   */
  Video.prototype.setGroup = function (group) {
    if (this.body) {
      this.body.group = group;
      return true;
    }
    return false;
  };
  Video.create = function (options) {
    return {
      id: _utils_index__WEBPACK_IMPORTED_MODULE_2__.utils.getUniqueId(),
      chatType: options.chatType || 'singleChat',
      type: 'video',
      file: options.file,
      filename: options.filename,
      length: options.length,
      file_length: options.file_length,
      fileInputId: options.fileInputId,
      to: options.to,
      from: options.from || '',
      ext: options.ext,
      time: Date.now(),
      onFileUploadError: options.onFileUploadError,
      onFileUploadComplete: options.onFileUploadComplete,
      onFileUploadProgress: options.onFileUploadProgress,
      body: options.body,
      msgConfig: options.msgConfig,
      isChatThread: options.isChatThread,
      priority: options.priority,
      deliverOnlineOnly: options.deliverOnlineOnly
    };
  };
  return Video;
}();

// export default Video;

/***/ }),

/***/ "./src/proto.ts":
/*!**********************!*\
  !*** ./src/proto.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "proto": function() { return /* binding */ proto; }
/* harmony export */ });
var proto = {
  nested: {
    easemob: {
      nested: {
        pb: {
          nested: {
            MessageBody: {
              fields: {
                type: {
                  type: 'Type',
                  id: 1
                },
                from: {
                  type: 'JID',
                  id: 2
                },
                to: {
                  type: 'JID',
                  id: 3
                },
                contents: {
                  rule: 'repeated',
                  type: 'Content',
                  id: 4
                },
                ext: {
                  rule: 'repeated',
                  type: 'KeyValue',
                  id: 5
                },
                ackMessageId: {
                  type: 'uint64',
                  id: 6
                },
                msgConfig: {
                  type: 'MessageConfig',
                  id: 7
                },
                ackContent: {
                  type: 'string',
                  id: 8
                },
                meta: {
                  type: 'string',
                  id: 9
                },
                editMessageId: {
                  type: 'uint64',
                  id: 11
                }
              },
              nested: {
                Content: {
                  fields: {
                    type: {
                      type: 'Type',
                      id: 1
                    },
                    text: {
                      type: 'string',
                      id: 2
                    },
                    latitude: {
                      type: 'double',
                      id: 3
                    },
                    longitude: {
                      type: 'double',
                      id: 4
                    },
                    address: {
                      type: 'string',
                      id: 5
                    },
                    displayName: {
                      type: 'string',
                      id: 6
                    },
                    remotePath: {
                      type: 'string',
                      id: 7
                    },
                    secretKey: {
                      type: 'string',
                      id: 8
                    },
                    fileLength: {
                      type: 'int32',
                      id: 9
                    },
                    action: {
                      type: 'string',
                      id: 10
                    },
                    params: {
                      rule: 'repeated',
                      type: 'KeyValue',
                      id: 11
                    },
                    duration: {
                      type: 'int32',
                      id: 12
                    },
                    size: {
                      type: 'Size',
                      id: 13
                    },
                    thumbnailRemotePath: {
                      type: 'string',
                      id: 14
                    },
                    thumbnailSecretKey: {
                      type: 'string',
                      id: 15
                    },
                    thumbnailDisplayName: {
                      type: 'string',
                      id: 16
                    },
                    thumbnailFileLength: {
                      type: 'int32',
                      id: 17
                    },
                    thumbnailSize: {
                      type: 'Size',
                      id: 18
                    },
                    customEvent: {
                      type: 'string',
                      id: 19
                    },
                    customExts: {
                      rule: 'repeated',
                      type: 'KeyValue',
                      id: 20
                    },
                    buildingName: {
                      type: 'string',
                      id: 21
                    }
                  },
                  nested: {
                    Type: {
                      values: {
                        TEXT: 0,
                        IMAGE: 1,
                        VIDEO: 2,
                        LOCATION: 3,
                        VOICE: 4,
                        FILE: 5,
                        COMMAND: 6,
                        CUSTOM: 7
                      }
                    },
                    Size: {
                      fields: {
                        width: {
                          type: 'double',
                          id: 1
                        },
                        height: {
                          type: 'double',
                          id: 2
                        }
                      }
                    }
                  }
                },
                Type: {
                  values: {
                    NORMAL: 0,
                    CHAT: 1,
                    GROUPCHAT: 2,
                    CHATROOM: 3,
                    READ_ACK: 4,
                    DELIVER_ACK: 5,
                    RECALL: 6,
                    CHANNEL_ACK: 7,
                    EDIT: 8
                  }
                },
                MessageConfig: {
                  fields: {
                    allowGroupAck: {
                      type: 'bool',
                      id: 1
                    }
                  }
                }
              }
            },
            KeyValue: {
              oneofs: {
                value: {
                  oneof: ['varintValue', 'floatValue', 'doubleValue', 'stringValue']
                }
              },
              fields: {
                key: {
                  type: 'string',
                  id: 1
                },
                type: {
                  type: 'ValueType',
                  id: 2
                },
                varintValue: {
                  type: 'int64',
                  id: 3
                },
                floatValue: {
                  type: 'float',
                  id: 4
                },
                doubleValue: {
                  type: 'double',
                  id: 5
                },
                stringValue: {
                  type: 'string',
                  id: 6
                }
              },
              nested: {
                ValueType: {
                  values: {
                    BOOL: 1,
                    INT: 2,
                    UINT: 3,
                    LLINT: 4,
                    FLOAT: 5,
                    DOUBLE: 6,
                    STRING: 7,
                    JSON_STRING: 8
                  }
                }
              }
            },
            JID: {
              fields: {
                appKey: {
                  type: 'string',
                  id: 1
                },
                name: {
                  type: 'string',
                  id: 2
                },
                domain: {
                  type: 'string',
                  id: 3
                },
                clientResource: {
                  type: 'string',
                  id: 4
                }
              }
            },
            ConferenceBody: {
              fields: {
                sessionId: {
                  type: 'string',
                  id: 1
                },
                operation: {
                  type: 'Operation',
                  id: 2
                },
                conferenceId: {
                  type: 'string',
                  id: 3
                },
                type: {
                  type: 'Type',
                  id: 4
                },
                content: {
                  type: 'string',
                  id: 5
                },
                network: {
                  type: 'string',
                  id: 6
                },
                version: {
                  type: 'string',
                  id: 7
                },
                identity: {
                  type: 'Identity',
                  id: 8
                },
                duration: {
                  type: 'string',
                  id: 9
                },
                peerName: {
                  type: 'string',
                  id: 10
                },
                endReason: {
                  type: 'EndReason',
                  id: 11
                },
                status: {
                  type: 'Status',
                  id: 12
                },
                isDirect: {
                  type: 'bool',
                  id: 13
                },
                controlType: {
                  type: 'StreamControlType',
                  id: 14
                },
                routeFlag: {
                  type: 'int32',
                  id: 15
                },
                routeKey: {
                  type: 'string',
                  id: 16
                }
              },
              nested: {
                Status: {
                  fields: {
                    errorCode: {
                      type: 'int32',
                      id: 1
                    }
                  }
                },
                Operation: {
                  values: {
                    JOIN: 0,
                    INITIATE: 1,
                    ACCEPT_INITIATE: 2,
                    ANSWER: 3,
                    TERMINATE: 4,
                    REMOVE: 5,
                    STREAM_CONTROL: 6,
                    MEDIA_REQUEST: 7
                  }
                },
                Type: {
                  values: {
                    VOICE: 0,
                    VIDEO: 1
                  }
                },
                Identity: {
                  values: {
                    CALLER: 0,
                    CALLEE: 1
                  }
                },
                EndReason: {
                  values: {
                    HANGUP: 0,
                    NORESPONSE: 1,
                    REJECT: 2,
                    BUSY: 3,
                    FAIL: 4,
                    UNSUPPORTED: 5,
                    OFFLINE: 6
                  }
                },
                StreamControlType: {
                  values: {
                    PAUSE_VOICE: 0,
                    RESUME_VOICE: 1,
                    PAUSE_VIDEO: 2,
                    RESUME_VIDEO: 3
                  }
                }
              }
            },
            MSync: {
              fields: {
                version: {
                  type: 'Version',
                  id: 1,
                  options: {
                    "default": 'MSYNC_V1'
                  }
                },
                guid: {
                  type: 'JID',
                  id: 2
                },
                auth: {
                  type: 'string',
                  id: 3
                },
                compressAlgorimth: {
                  type: 'uint32',
                  id: 4
                },
                crypto: {
                  type: 'uint32',
                  id: 5
                },
                userAgent: {
                  type: 'string',
                  id: 6
                },
                pov: {
                  type: 'uint64',
                  id: 7
                },
                command: {
                  type: 'Command',
                  id: 8
                },
                deviceId: {
                  type: 'uint32',
                  id: 10
                },
                encryptType: {
                  rule: 'repeated',
                  type: 'EncryptType',
                  id: 11,
                  options: {
                    packed: false
                  }
                },
                encryptKey: {
                  type: 'string',
                  id: 12
                },
                payload: {
                  type: 'bytes',
                  id: 9
                }
              },
              nested: {
                Version: {
                  values: {
                    MSYNC_V1: 0,
                    MSYNC_V2: 1
                  }
                },
                Command: {
                  values: {
                    SYNC: 0,
                    UNREAD: 1,
                    NOTICE: 2,
                    PROVISION: 3
                  }
                }
              }
            },
            EncryptType: {
              values: {
                ENCRYPT_NONE: 0,
                ENCRYPT_AES_128_CBC: 1,
                ENCRYPT_AES_256_CBC: 2
              }
            },
            CommSyncUL: {
              fields: {
                meta: {
                  type: 'Meta',
                  id: 1
                },
                key: {
                  type: 'uint64',
                  id: 2
                },
                queue: {
                  type: 'JID',
                  id: 3
                },
                isRoam: {
                  type: 'bool',
                  id: 4
                },
                lastFullRoamKey: {
                  type: 'uint64',
                  id: 5
                }
              }
            },
            CommSyncDL: {
              fields: {
                status: {
                  type: 'Status',
                  id: 1
                },
                metaId: {
                  type: 'uint64',
                  id: 2
                },
                serverId: {
                  type: 'uint64',
                  id: 3
                },
                metas: {
                  rule: 'repeated',
                  type: 'Meta',
                  id: 4
                },
                nextKey: {
                  type: 'uint64',
                  id: 5
                },
                queue: {
                  type: 'JID',
                  id: 6
                },
                isLast: {
                  type: 'bool',
                  id: 7
                },
                timestamp: {
                  type: 'uint64',
                  id: 8
                },
                isRoam: {
                  type: 'bool',
                  id: 9
                }
              }
            },
            CommNotice: {
              fields: {
                queue: {
                  type: 'JID',
                  id: 1
                }
              }
            },
            CommUnreadUL: {
              fields: {}
            },
            CommUnreadDL: {
              fields: {
                status: {
                  type: 'Status',
                  id: 1
                },
                unread: {
                  rule: 'repeated',
                  type: 'MetaQueue',
                  id: 2
                },
                timestamp: {
                  type: 'uint64',
                  id: 3
                }
              }
            },
            MetaQueue: {
              fields: {
                queue: {
                  type: 'JID',
                  id: 1
                },
                n: {
                  type: 'uint32',
                  id: 2
                }
              }
            },
            Meta: {
              fields: {
                id: {
                  type: 'uint64',
                  id: 1
                },
                from: {
                  type: 'JID',
                  id: 2
                },
                to: {
                  type: 'JID',
                  id: 3
                },
                timestamp: {
                  type: 'uint64',
                  id: 4
                },
                ns: {
                  type: 'NameSpace',
                  id: 5
                },
                payload: {
                  type: 'bytes',
                  id: 6
                },
                routetype: {
                  type: 'RouteType',
                  id: 7
                },
                // extension Not for the time being
                ext: {
                  type: 'KeyValue',
                  id: 8
                },
                // message Online or Offline
                meta: {
                  type: 'bytes',
                  id: 9
                }
              },
              nested: {
                NameSpace: {
                  values: {
                    STATISTIC: 0,
                    CHAT: 1,
                    MUC: 2,
                    ROSTER: 3,
                    CONFERENCE: 4,
                    NOTIFY: 5,
                    QUERY: 6
                  }
                },
                RouteType: {
                  values: {
                    ROUTE_ALL: 0,
                    ROUTE_ONLINE: 1
                  }
                }
              }
            },
            Status: {
              fields: {
                errorCode: {
                  type: 'ErrorCode',
                  id: 1
                },
                reason: {
                  type: 'string',
                  id: 2
                },
                redirectInfo: {
                  rule: 'repeated',
                  type: 'RedirectInfo',
                  id: 3
                }
              },
              nested: {
                ErrorCode: {
                  values: {
                    OK: 0,
                    FAIL: 1,
                    UNAUTHORIZED: 2,
                    MISSING_PARAMETER: 3,
                    WRONG_PARAMETER: 4,
                    REDIRECT: 5,
                    TOKEN_EXPIRED: 6,
                    PERMISSION_DENIED: 7,
                    NO_ROUTE: 8,
                    UNKNOWN_COMMAND: 9,
                    PB_PARSER_ERROR: 10,
                    BIND_ANOTHER_DEVICE: 11,
                    IM_FORBIDDEN: 12,
                    TOO_MANY_DEVICES: 13,
                    PLATFORM_LIMIT: 14,
                    USER_MUTED: 15,
                    ENCRYPT_DISABLE: 16,
                    ENCRYPT_ENABLE: 17,
                    DECRYPT_FAILURE: 18,
                    PERMISSION_DENIED_EXTERNAL: 19
                  }
                }
              }
            },
            RedirectInfo: {
              fields: {
                host: {
                  type: 'string',
                  id: 1
                },
                port: {
                  type: 'uint32',
                  id: 2
                }
              }
            },
            Provision: {
              fields: {
                osType: {
                  type: 'OsType',
                  id: 1
                },
                version: {
                  type: 'string',
                  id: 2
                },
                networkType: {
                  type: 'NetworkType',
                  id: 3
                },
                appSign: {
                  type: 'string',
                  id: 4
                },
                compressType: {
                  rule: 'repeated',
                  type: 'CompressType',
                  id: 5,
                  options: {
                    packed: false
                  }
                },
                encryptType: {
                  rule: 'repeated',
                  type: 'EncryptType',
                  id: 6,
                  options: {
                    packed: false
                  }
                },
                encryptKey: {
                  type: 'string',
                  id: 7
                },
                status: {
                  type: 'Status',
                  id: 8
                },
                deviceUuid: {
                  type: 'string',
                  id: 9
                },
                isManualLogin: {
                  type: 'bool',
                  id: 10
                },
                password: {
                  type: 'string',
                  id: 11
                },
                deviceName: {
                  type: 'string',
                  id: 12
                },
                resource: {
                  type: 'string',
                  id: 13
                },
                auth: {
                  type: 'string',
                  id: 14
                },
                // 15: app id for mobile
                serviceId: {
                  type: 'string',
                  id: 16
                },
                actionVersion: {
                  type: 'string',
                  id: 17
                }
              },
              nested: {
                OsType: {
                  values: {
                    OS_IOS: 0,
                    OS_ANDROID: 1,
                    OS_LINUX: 2,
                    OS_OSX: 3,
                    OS_WIN: 4,
                    OS_OTHER: 16
                  }
                },
                NetworkType: {
                  values: {
                    NETWORK_NONE: 0,
                    NETWORK_WIFI: 1,
                    NETWORK_4G: 2,
                    NETWORK_3G: 3,
                    NETWORK_2G: 4,
                    NETWORK_WIRE: 5
                  }
                },
                CompressType: {
                  values: {
                    COMPRESS_NONE: 0,
                    COMPRESS_ZLIB: 1
                  }
                }
              }
            },
            MUCBody: {
              fields: {
                mucId: {
                  type: 'JID',
                  id: 1
                },
                operation: {
                  type: 'Operation',
                  id: 2
                },
                from: {
                  type: 'JID',
                  id: 3
                },
                to: {
                  rule: 'repeated',
                  type: 'JID',
                  id: 4
                },
                setting: {
                  type: 'Setting',
                  id: 5
                },
                reason: {
                  type: 'string',
                  id: 6
                },
                isChatroom: {
                  type: 'bool',
                  id: 7
                },
                status: {
                  type: 'Status',
                  id: 8
                },
                isThread: {
                  type: 'bool',
                  id: 9
                },
                mucParentId: {
                  type: 'JID',
                  id: 10
                },
                mucName: {
                  type: 'string',
                  id: 11
                },
                eventInfo: {
                  type: 'EventInfo',
                  id: 12
                }
              },
              nested: {
                Operation: {
                  values: {
                    CREATE: 0,
                    DESTROY: 1,
                    JOIN: 2,
                    LEAVE: 3,
                    APPLY: 4,
                    APPLY_ACCEPT: 5,
                    APPLY_DECLINE: 6,
                    INVITE: 7,
                    INVITE_ACCEPT: 8,
                    INVITE_DECLINE: 9,
                    KICK: 10,
                    GET_BLACKLIST: 11,
                    BAN: 12,
                    ALLOW: 13,
                    UPDATE: 14,
                    BLOCK: 15,
                    UNBLOCK: 16,
                    PRESENCE: 17,
                    ABSENCE: 18,
                    DIRECT_JOINED: 19,
                    ASSIGN_OWNER: 20,
                    ADD_ADMIN: 21,
                    REMOVE_ADMIN: 22,
                    ADD_MUTE: 23,
                    REMOVE_MUTE: 24,
                    UPDATE_ANNOUNCEMENT: 25,
                    DELETE_ANNOUNCEMENT: 26,
                    UPLOAD_FILE: 27,
                    DELETE_FILE: 28,
                    ADD_USER_WHITE_LIST: 29,
                    REMOVE_USER_WHITE_LIST: 30,
                    BAN_GROUP: 31,
                    REMOVE_BAN_GROUP: 32,
                    THREAD_CREATE: 33,
                    THREAD_DESTROY: 34,
                    THREAD_JOIN: 35,
                    THREAD_LEAVE: 36,
                    THREAD_KICK: 37,
                    THREAD_UPDATE: 38,
                    THREAD_PRESENCE: 39,
                    THREAD_ABSENCE: 40,
                    DISABLE_GROUP: 41,
                    ABLE_GROUP: 42,
                    SET_METADATA: 43,
                    DELETE_METADATA: 44,
                    GROUP_MEMBER_METADATA_UPDATE: 45
                  }
                },
                Setting: {
                  fields: {
                    name: {
                      type: 'string',
                      id: 1
                    },
                    desc: {
                      type: 'string',
                      id: 2
                    },
                    type: {
                      type: 'Type',
                      id: 3
                    },
                    maxUsers: {
                      type: 'int32',
                      id: 4
                    },
                    owner: {
                      type: 'string',
                      id: 5
                    }
                  },
                  nested: {
                    Type: {
                      values: {
                        PRIVATE_OWNER_INVITE: 0,
                        PRIVATE_MEMBER_INVITE: 1,
                        PUBLIC_JOIN_APPROVAL: 2,
                        PUBLIC_JOIN_OPEN: 3,
                        PUBLIC_ANONYMOUS: 4
                      }
                    }
                  }
                },
                Status: {
                  fields: {
                    errorCode: {
                      type: 'ErrorCode',
                      id: 1
                    },
                    description: {
                      type: 'string',
                      id: 2
                    }
                  },
                  nested: {
                    ErrorCode: {
                      values: {
                        OK: 0,
                        PERMISSION_DENIED: 1,
                        WRONG_PARAMETER: 2,
                        MUC_NOT_EXIST: 3,
                        USER_NOT_EXIST: 4,
                        UNKNOWN: 5
                      }
                    }
                  }
                },
                EventInfo: {
                  fields: {
                    eventType: {
                      type: 'EventType',
                      id: 1,
                      options: {
                        "default": 'EVENT_NONE'
                      }
                    },
                    ext: {
                      type: 'string',
                      id: 2
                    }
                  },
                  nested: {
                    EventType: {
                      values: {
                        EVENT_NONE: 0,
                        CIRCLE_CHANNEL: 1
                      }
                    }
                  }
                }
              }
            },
            RosterBody: {
              fields: {
                operation: {
                  type: 'Operation',
                  id: 1
                },
                status: {
                  type: 'Status',
                  id: 2
                },
                from: {
                  type: 'JID',
                  id: 3
                },
                to: {
                  rule: 'repeated',
                  type: 'JID',
                  id: 4
                },
                reason: {
                  type: 'string',
                  id: 5
                },
                rosterVer: {
                  type: 'string',
                  id: 6
                },
                biDirection: {
                  type: 'bool',
                  id: 7
                }
              },
              nested: {
                Operation: {
                  values: {
                    GET_ROSTER: 0,
                    GET_BLACKLIST: 1,
                    ADD: 2,
                    REMOVE: 3,
                    ACCEPT: 4,
                    DECLINE: 5,
                    BAN: 6,
                    ALLOW: 7,
                    REMOTE_ACCEPT: 8,
                    REMOTE_DECLINE: 9
                  }
                },
                Status: {
                  fields: {
                    errorCode: {
                      type: 'ErrorCode',
                      id: 1
                    },
                    description: {
                      type: 'string',
                      id: 2
                    }
                  },
                  nested: {
                    ErrorCode: {
                      values: {
                        OK: 0,
                        USER_NOT_EXIST: 1,
                        USER_ALREADY_FRIEND: 2,
                        USER_ALREADY_BLACKLIST: 3
                      }
                    }
                  }
                }
              }
            },
            StatisticsBody: {
              fields: {
                operation: {
                  type: 'Operation',
                  id: 1
                },
                os: {
                  type: 'OsType',
                  id: 2
                },
                version: {
                  type: 'string',
                  id: 3
                },
                network: {
                  type: 'NetworkType',
                  id: 4
                },
                imTime: {
                  type: 'uint32',
                  id: 5
                },
                chatTime: {
                  type: 'uint32',
                  id: 6
                },
                location: {
                  type: 'string',
                  id: 7
                }
              },
              nested: {
                Operation: {
                  values: {
                    INFORMATION: 0,
                    USER_REMOVED: 1,
                    USER_LOGIN_ANOTHER_DEVICE: 2,
                    USER_KICKED_BY_CHANGE_PASSWORD: 3,
                    USER_KICKED_BY_OTHER_DEVICE: 4
                  }
                },
                OsType: {
                  values: {
                    OS_IOS: 0,
                    OS_ANDROID: 1,
                    OS_LINUX: 2,
                    OS_OSX: 3,
                    OS_WIN: 4,
                    OS_OTHER: 16
                  }
                },
                NetworkType: {
                  values: {
                    NETWORK_NONE: 0,
                    NETWORK_WIFI: 1,
                    NETWORK_4G: 2,
                    NETWORK_3G: 3,
                    NETWORK_2G: 4,
                    NETWORK_WIRE: 5
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};


/***/ }),

/***/ "./src/status.ts":
/*!***********************!*\
  !*** ./src/status.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Code": function() { return /* binding */ Code; }
/* harmony export */ });
/**
 * The error codes in the SDK.
 * Defines error codes commonly used in the SDK.
 * @module StatusCode
 */
var Code;
(function (Code) {
  /** No error. */
  /** 无错误。 */
  Code[Code["REQUEST_SUCCESS"] = 0] = "REQUEST_SUCCESS";
  /** The server response times out. */
  /** 请求服务超时。 */
  Code[Code["REQUEST_TIMEOUT"] = -1] = "REQUEST_TIMEOUT";
  /** A general error.  */
  /** 默认未区分类型的错误。 */
  Code[Code["REQUEST_UNKNOWN"] = -2] = "REQUEST_UNKNOWN";
  /** The parameter is invalid. */
  /** 参数错误。 */
  Code[Code["REQUEST_PARAMETER_ERROR"] = -3] = "REQUEST_PARAMETER_ERROR";
  /** The request is canceled. */
  /** 取消请求。*/
  Code[Code["REQUEST_ABORT"] = -4] = "REQUEST_ABORT";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR"] = 0] = "WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR";
  /** Login failed.  */
  /** 登录失败。 */
  Code[Code["WEBIM_CONNCTION_OPEN_ERROR"] = 1] = "WEBIM_CONNCTION_OPEN_ERROR";
  /** The user authentication fails. The reasons are as follows. The SDK is not initiated. The user is not login. */
  /** 鉴权失败，如：SDK 未初始化或用户未登录就调用 API 进行其他操作。 */
  Code[Code["WEBIM_CONNCTION_AUTH_ERROR"] = 2] = "WEBIM_CONNCTION_AUTH_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_OPEN_USERGRID_ERROR"] = 3] = "WEBIM_CONNCTION_OPEN_USERGRID_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_ATTACH_ERROR"] = 4] = "WEBIM_CONNCTION_ATTACH_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_ATTACH_USERGRID_ERROR"] = 5] = "WEBIM_CONNCTION_ATTACH_USERGRID_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_REOPEN_ERROR"] = 6] = "WEBIM_CONNCTION_REOPEN_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_SERVER_CLOSE_ERROR"] = 7] = "WEBIM_CONNCTION_SERVER_CLOSE_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_SERVER_ERROR"] = 8] = "WEBIM_CONNCTION_SERVER_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_IQ_ERROR"] = 9] = "WEBIM_CONNCTION_IQ_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_PING_ERROR"] = 10] = "WEBIM_CONNCTION_PING_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_NOTIFYVERSION_ERROR"] = 11] = "WEBIM_CONNCTION_NOTIFYVERSION_ERROR";
  /** Fails to get the token. */
  /** 获取 Chat token 失败。 */
  Code[Code["WEBIM_CONNCTION_GETROSTER_ERROR"] = 12] = "WEBIM_CONNCTION_GETROSTER_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_CROSSDOMAIN_ERROR"] = 13] = "WEBIM_CONNCTION_CROSSDOMAIN_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES"] = 14] = "WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR"] = 15] = "WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR";
  /** Websocket is disconnected */
  /** WebSocket 断开连接。 */
  Code[Code["WEBIM_CONNCTION_DISCONNECTED"] = 16] = "WEBIM_CONNCTION_DISCONNECTED";
  /** A general error.  */
  /** 默认未区分类型的错误。（用 -2 替换） */
  Code[Code["WEBIM_CONNCTION_AJAX_ERROR"] = 17] = "WEBIM_CONNCTION_AJAX_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_JOINROOM_ERROR"] = 18] = "WEBIM_CONNCTION_JOINROOM_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_GETROOM_ERROR"] = 19] = "WEBIM_CONNCTION_GETROOM_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_GETROOMINFO_ERROR"] = 20] = "WEBIM_CONNCTION_GETROOMINFO_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_GETROOMMEMBER_ERROR"] = 21] = "WEBIM_CONNCTION_GETROOMMEMBER_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR"] = 22] = "WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_LOAD_CHATROOM_ERROR"] = 23] = "WEBIM_CONNCTION_LOAD_CHATROOM_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR"] = 24] = "WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_JOINCHATROOM_ERROR"] = 25] = "WEBIM_CONNCTION_JOINCHATROOM_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_QUITCHATROOM_ERROR"] = 26] = "WEBIM_CONNCTION_QUITCHATROOM_ERROR";
  /** The App Key is invalid. */
  /** 未设置 App Key。 */
  Code[Code["WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR"] = 27] = "WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR";
  /** The token is invalid. */
  /** 未传 token。 */
  Code[Code["WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR"] = 28] = "WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR"] = 29] = "WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR"] = 30] = "WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR";
  /** The callback inner error code while the message is successfully sent. */
  /** 消息发送成功的回调函数内部错误。 */
  Code[Code["WEBIM_CONNCTION_CALLBACK_INNER_ERROR"] = 31] = "WEBIM_CONNCTION_CALLBACK_INNER_ERROR";
  /** The current user is offline. */
  /** 当前用户未登录。*/
  Code[Code["WEBIM_CONNCTION_CLIENT_OFFLINE"] = 32] = "WEBIM_CONNCTION_CLIENT_OFFLINE";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_CLIENT_LOGOUT"] = 33] = "WEBIM_CONNCTION_CLIENT_LOGOUT";
  /** @hidden */
  Code[Code["WEBIM_CONNCTION_CLIENT_TOO_MUCH_ERROR"] = 34] = "WEBIM_CONNCTION_CLIENT_TOO_MUCH_ERROR";
  /** @hidden */
  Code[Code["WEBIM_CONNECTION_ACCEPT_INVITATION_FROM_GROUP"] = 35] = "WEBIM_CONNECTION_ACCEPT_INVITATION_FROM_GROUP";
  /** @hidden */
  Code[Code["WEBIM_CONNECTION_DECLINE_INVITATION_FROM_GROUP"] = 36] = "WEBIM_CONNECTION_DECLINE_INVITATION_FROM_GROUP";
  /** @hidden */
  Code[Code["WEBIM_CONNECTION_ACCEPT_JOIN_GROUP"] = 37] = "WEBIM_CONNECTION_ACCEPT_JOIN_GROUP";
  /** @hidden */
  Code[Code["WEBIM_CONNECTION_DECLINE_JOIN_GROUP"] = 38] = "WEBIM_CONNECTION_DECLINE_JOIN_GROUP";
  /** The user is not logged in.*/
  /** 未登录状态。 */
  Code[Code["WEBIM_CONNECTION_CLOSED"] = 39] = "WEBIM_CONNECTION_CLOSED";
  /** The user authentication fails. */
  /** 用户鉴权失败。 */
  Code[Code["WEBIM_CONNECTION_ERROR"] = 40] = "WEBIM_CONNECTION_ERROR";
  // 50 - 100 加通用的错误码
  /** The upper limit is reached. */
  /** 达到上限。  */
  Code[Code["MAX_LIMIT"] = 50] = "MAX_LIMIT";
  /** The message is not found. */
  /** 没查到消息。 */
  Code[Code["MESSAGE_NOT_FOUND"] = 51] = "MESSAGE_NOT_FOUND";
  /** Unauthorized operation. */
  /** 没有操作权限。 */
  Code[Code["NO_PERMISSION"] = 52] = "NO_PERMISSION";
  /** Unsupported Operation. */
  /** 不支持的操作。 */
  Code[Code["OPERATION_UNSUPPORTED"] = 53] = "OPERATION_UNSUPPORTED";
  /** An operation that is not allowed. */
  /** 不允许的操作。 */
  Code[Code["OPERATION_NOT_ALLOWED"] = 54] = "OPERATION_NOT_ALLOWED";
  /** @hidden */
  Code[Code["WEBIM_UPLOADFILE_BROWSER_ERROR"] = 100] = "WEBIM_UPLOADFILE_BROWSER_ERROR";
  /** The uploading of the file failed. */
  /** 上传文件失败。 */
  Code[Code["WEBIM_UPLOADFILE_ERROR"] = 101] = "WEBIM_UPLOADFILE_ERROR";
  /** The current user is not logged in when uploading the file. */
  /** 未登录上传文件。 */
  Code[Code["WEBIM_UPLOADFILE_NO_LOGIN"] = 102] = "WEBIM_UPLOADFILE_NO_LOGIN";
  /** @hidden */
  Code[Code["WEBIM_UPLOADFILE_NO_FILE"] = 103] = "WEBIM_UPLOADFILE_NO_FILE";
  /** File-downloading failed. */
  /** 下载文件失败。 */
  Code[Code["WEBIM_DOWNLOADFILE_ERROR"] = 200] = "WEBIM_DOWNLOADFILE_ERROR";
  /** @hidden */
  Code[Code["WEBIM_DOWNLOADFILE_NO_LOGIN"] = 201] = "WEBIM_DOWNLOADFILE_NO_LOGIN";
  /** @hidden */
  Code[Code["WEBIM_DOWNLOADFILE_BROWSER_ERROR"] = 202] = "WEBIM_DOWNLOADFILE_BROWSER_ERROR";
  /** User does not found. */
  /** 用户不存在。 */
  Code[Code["USER_NOT_FOUND"] = 204] = "USER_NOT_FOUND";
  /** The message parameter is invalid. */
  /** 消息参数错误。 */
  Code[Code["MESSAGE_PARAMETER_ERROR"] = 205] = "MESSAGE_PARAMETER_ERROR";
  /** The user is logged in on another device. */
  /** 用户在其他设备登录。 */
  Code[Code["WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE"] = 206] = "WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE";
  /** The user was removed. */
  /** 用户已经被注销。 */
  Code[Code["WEBIM_CONNCTION_USER_REMOVED"] = 207] = "WEBIM_CONNCTION_USER_REMOVED";
  /** The password is renewed. */
  /** 用户密码更新。 */
  Code[Code["WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD"] = 216] = "WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD";
  /** The user was kicked off from another device. */
  /** 用户被踢下线。 */
  Code[Code["WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE"] = 217] = "WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE";
  /** Global muted. */
  /** 被全局禁言。 */
  Code[Code["USER_MUTED_BY_ADMIN"] = 219] = "USER_MUTED_BY_ADMIN";
  /**
   * The user is not on your contact list, and you cannot send messages to him or her.
   * Note: You can send messages to strangers by default. This error occurs only when you enable the function of allowing to send messages only to your contacts.
   */
  /**
   * 该用户不是当前用户的好友，不能发送消息。
   * 注意：默认是可以给陌生人发送消息的，需要开启只有好友才能发送消息的功能，才会报此错。
   */
  Code[Code["USER_NOT_FRIEND"] = 221] = "USER_NOT_FRIEND";
  // 300 - 317 未启用
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_TEXT"] = 300] = "WEBIM_MESSAGE_REC_TEXT";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_TEXT_ERROR"] = 301] = "WEBIM_MESSAGE_REC_TEXT_ERROR";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_EMOTION"] = 302] = "WEBIM_MESSAGE_REC_EMOTION";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_PHOTO"] = 303] = "WEBIM_MESSAGE_REC_PHOTO";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_AUDIO"] = 304] = "WEBIM_MESSAGE_REC_AUDIO";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_AUDIO_FILE"] = 305] = "WEBIM_MESSAGE_REC_AUDIO_FILE";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_VEDIO"] = 306] = "WEBIM_MESSAGE_REC_VEDIO";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_VEDIO_FILE"] = 307] = "WEBIM_MESSAGE_REC_VEDIO_FILE";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_REC_FILE"] = 308] = "WEBIM_MESSAGE_REC_FILE";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_TEXT"] = 309] = "WEBIM_MESSAGE_SED_TEXT";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_EMOTION"] = 310] = "WEBIM_MESSAGE_SED_EMOTION";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_PHOTO"] = 311] = "WEBIM_MESSAGE_SED_PHOTO";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_AUDIO"] = 312] = "WEBIM_MESSAGE_SED_AUDIO";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_AUDIO_FILE"] = 313] = "WEBIM_MESSAGE_SED_AUDIO_FILE";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_VEDIO"] = 314] = "WEBIM_MESSAGE_SED_VEDIO";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_VEDIO_FILE"] = 315] = "WEBIM_MESSAGE_SED_VEDIO_FILE";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_FILE"] = 316] = "WEBIM_MESSAGE_SED_FILE";
  /** @hidden */
  Code[Code["WEBIM_MESSAGE_SED_ERROR"] = 317] = "WEBIM_MESSAGE_SED_ERROR";
  // 400 - 406 未启用
  /** @hidden */
  Code[Code["STATUS_INIT"] = 400] = "STATUS_INIT";
  /** @hidden */
  Code[Code["STATUS_DOLOGIN_USERGRID"] = 401] = "STATUS_DOLOGIN_USERGRID";
  /** @hidden */
  Code[Code["STATUS_DOLOGIN_IM"] = 402] = "STATUS_DOLOGIN_IM";
  /** @hidden */
  Code[Code["STATUS_OPENED"] = 403] = "STATUS_OPENED";
  /** @hidden */
  Code[Code["STATUS_CLOSING"] = 404] = "STATUS_CLOSING";
  /** @hidden */
  Code[Code["STATUS_CLOSED"] = 405] = "STATUS_CLOSED";
  /** @hidden */
  Code[Code["STATUS_ERROR"] = 406] = "STATUS_ERROR";
  /** The server is busy. */
  /** 服务器忙碌。 */
  Code[Code["SERVER_BUSY"] = 500] = "SERVER_BUSY";
  /** The message content contains illegal or sensitive words. */
  /** 消息内容包含非法或敏感词。 */
  Code[Code["MESSAGE_INCLUDE_ILLEGAL_CONTENT"] = 501] = "MESSAGE_INCLUDE_ILLEGAL_CONTENT";
  /** The message was blocked. */
  /** 消息被拦截。 */
  Code[Code["MESSAGE_EXTERNAL_LOGIC_BLOCKED"] = 502] = "MESSAGE_EXTERNAL_LOGIC_BLOCKED";
  /** Unknown error. */
  /** 消息发送失败未知错误。 */
  Code[Code["SERVER_UNKNOWN_ERROR"] = 503] = "SERVER_UNKNOWN_ERROR";
  /** The message recall has exceeded the time limit.*/
  /** 消息撤回超时。 */
  Code[Code["MESSAGE_RECALL_TIME_LIMIT"] = 504] = "MESSAGE_RECALL_TIME_LIMIT";
  /** The service is not enabled. */
  /** 服务未开启。 */
  Code[Code["SERVICE_NOT_ENABLED"] = 505] = "SERVICE_NOT_ENABLED";
  /** The message fails to be delivered because the user is not on the allow list.*/
  /** 用户未在白名单中 */
  Code[Code["SERVICE_NOT_ALLOW_MESSAGING"] = 506] = "SERVICE_NOT_ALLOW_MESSAGING";
  /** The current user is muted. */
  /** 当前用户被禁言。 */
  Code[Code["SERVICE_NOT_ALLOW_MESSAGING_MUTE"] = 507] = "SERVICE_NOT_ALLOW_MESSAGING_MUTE";
  /** The message is blocked by the Moderation service. */
  /** 消息被 Moderation 服务拦截。 */
  Code[Code["MESSAGE_MODERATION_BLOCKED"] = 508] = "MESSAGE_MODERATION_BLOCKED";
  /** Group chat ID current limiting. */
  /** 群聊 id 限流 */
  Code[Code["MESSAGE_CURRENT_LIMITING"] = 509] = "MESSAGE_CURRENT_LIMITING";
  /** The network is disconnected, causing message sending failure. */
  /** 网络断开连接导致消息发送失败。 */
  Code[Code["MESSAGE_WEBSOCKET_DISCONNECTED"] = 510] = "MESSAGE_WEBSOCKET_DISCONNECTED";
  /** You have exceeded the maximum allowed size of a message body.*/
  /** 消息体大小超过限制。 */
  Code[Code["MESSAGE_SIZE_LIMIT"] = 511] = "MESSAGE_SIZE_LIMIT";
  /** The group is not found. */
  /** 群组不存在。 */
  Code[Code["GROUP_NOT_EXIST"] = 605] = "GROUP_NOT_EXIST";
  /** The user being operated is not in the group. */
  /** 禁言等操作的人员不在群组中。 */
  Code[Code["GROUP_NOT_JOINED"] = 602] = "GROUP_NOT_JOINED";
  /** The number of members in the group reaches the limit. */
  /** 群组人数达到上限。 */
  Code[Code["GROUP_MEMBERS_FULL"] = 606] = "GROUP_MEMBERS_FULL";
  /** Permission denied. */
  /** 用户无权限。 */
  Code[Code["PERMISSION_DENIED"] = 603] = "PERMISSION_DENIED";
  /** Internal error. */
  /** 消息回调函数内部错误。 */
  Code[Code["WEBIM_LOAD_MSG_ERROR"] = 604] = "WEBIM_LOAD_MSG_ERROR";
  /** The current user is already in the group. */
  /** 当前用户已在该群组中。 */
  Code[Code["GROUP_ALREADY_JOINED"] = 601] = "GROUP_ALREADY_JOINED";
  /** The maximum number of group members exceeds the limit during group creation. */
  /** 创建群组时群成员最大数量超出限制。 */
  Code[Code["GROUP_MEMBERS_LIMIT"] = 607] = "GROUP_MEMBERS_LIMIT";
  /** Group disabled */
  /** 群组被禁用 */
  /** @hidden */
  Code[Code["GROUP_IS_DISABLED"] = 608] = "GROUP_IS_DISABLED";
  /** Failed to set the custom attributes of a group member. */
  /** 群成员属性设置失败。 */
  Code[Code["GROUP_MEMBER_ATTRIBUTES_SET_FAILED"] = 609] = "GROUP_MEMBER_ATTRIBUTES_SET_FAILED";
  /** Invalid token or App Key. */
  /** 没有 token 或 appkey。 */
  Code[Code["REST_PARAMS_STATUS"] = 700] = "REST_PARAMS_STATUS";
  /** The user being operated is not in the chatroom. */
  /** 被操作的人员不在聊天室。 */
  Code[Code["CHATROOM_NOT_JOINED"] = 702] = "CHATROOM_NOT_JOINED";
  /** The number of chatroom members reaches the limit.*/
  /** 聊天室人数达到上限。 */
  Code[Code["CHATROOM_MEMBERS_FULL"] = 704] = "CHATROOM_MEMBERS_FULL";
  /** The chatroom is not found. */
  /** 聊天室不存在。 */
  Code[Code["CHATROOM_NOT_EXIST"] = 705] = "CHATROOM_NOT_EXIST";
  /** Websocket error. */
  /** Websocket 发送消息错误。 */
  Code[Code["SDK_RUNTIME_ERROR"] = 999] = "SDK_RUNTIME_ERROR";
  /** The parameter length exceeds the limit when posting custom presence status. */
  /** 发布自定义在线状态时，参数长度超出限制。 */
  Code[Code["PRESENCE_PARAM_EXCEED"] = 1100] = "PRESENCE_PARAM_EXCEED";
  /** The Reaction already exists. */
  /** Reaction 重复添加。 */
  Code[Code["REACTION_ALREADY_ADDED"] = 1101] = "REACTION_ALREADY_ADDED";
  /** A Reaction is being created by multiple users at the same time. */
  /** 创建 Reaction 时，其他人正在创建。 */
  Code[Code["REACTION_CREATING"] = 1102] = "REACTION_CREATING";
  /** The user does not have the permission for the Reaction operation. For example, the user who does not add the reaction attempts to delete it, or the user that is neither the sender nor recipient of the one-to-one message attempts to add the Reaction. */
  /** 添加 reaction 时，当前用户不是这条消息的发送者或接收者。 */
  Code[Code["REACTION_OPERATION_IS_ILLEGAL"] = 1103] = "REACTION_OPERATION_IS_ILLEGAL";
  /** Invalid language code. */
  /** 传入的语言 code 不合法。 */
  Code[Code["TRANSLATION_NOT_VALID"] = 1200] = "TRANSLATION_NOT_VALID";
  /** The translated text is too long. */
  /** 翻译的文本过长。 */
  Code[Code["TRANSLATION_TEXT_TOO_LONG"] = 1201] = "TRANSLATION_TEXT_TOO_LONG";
  /** Failed to obtain the translation service. */
  /** 获取第三方翻译服务失败。 */
  Code[Code["TRANSLATION_FAILED"] = 1204] = "TRANSLATION_FAILED";
  /** The chatThread is not found. */
  /** chatThread 不存在。 */
  Code[Code["THREAD_NOT_EXIST"] = 1300] = "THREAD_NOT_EXIST";
  /** Chat thread already exists. */
  /** chatThread 已经存在。 */
  Code[Code["THREAD_ALREADY_EXIST"] = 1301] = "THREAD_ALREADY_EXIST";
  /** The message does not exist. */
  /** 被编辑的消息不存在。 */
  Code[Code["MODIFY_MESSAGE_NOT_EXIST"] = 1302] = "MODIFY_MESSAGE_NOT_EXIST";
  /** The modified limit reached. */
  /** 编辑次数已经达到上限。 */
  Code[Code["MODIFY_MESSAGE_LIMIT_REACHED"] = 1303] = "MODIFY_MESSAGE_LIMIT_REACHED";
  /** The modify messaged format error. */
  /** 编辑消息格式错误。 */
  Code[Code["MODIFY_MESSAGE_FORMAT_ERROR"] = 1304] = "MODIFY_MESSAGE_FORMAT_ERROR";
  /** The modify message failed. */
  /** 编辑消息失败。 */
  Code[Code["MODIFY_MESSAGE_FAILED"] = 1305] = "MODIFY_MESSAGE_FAILED";
})(Code || (Code = {}));


/***/ }),

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PLATFORM": function() { return /* binding */ PLATFORM; },
/* harmony export */   "_listenNetwork": function() { return /* binding */ _listenNetwork; },
/* harmony export */   "ajax": function() { return /* binding */ ajax; },
/* harmony export */   "download": function() { return /* binding */ download; },
/* harmony export */   "getUniqueId": function() { return /* binding */ getUniqueId; },
/* harmony export */   "listenNetwork": function() { return /* binding */ listenNetwork; },
/* harmony export */   "once": function() { return /* binding */ once; },
/* harmony export */   "uploadFile": function() { return /* binding */ uploadFile; },
/* harmony export */   "utils": function() { return /* binding */ utils; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");
/* harmony import */ var core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/web.url.js */ "./node_modules/core-js/modules/web.url.js");
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/web.url-search-params.js */ "./node_modules/core-js/modules/web.url-search-params.js");
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_array_last_index_of_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.array.last-index-of.js */ "./node_modules/core-js/modules/es.array.last-index-of.js");
/* harmony import */ var core_js_modules_es_array_last_index_of_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_last_index_of_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../status */ "./src/status.ts");
/* harmony import */ var _error_ajaxError__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../error/ajaxError */ "./src/error/ajaxError.ts");
/* harmony import */ var _dataReport_types__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../dataReport/types */ "./src/dataReport/types.ts");
/* harmony import */ var _dataReport_const__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../dataReport/const */ "./src/dataReport/const.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../logger */ "./src/logger/index.ts");

















/* eslint-disable no-undef */
/* eslint-disable no-prototype-builtins */
/* eslint-disable no-case-declarations */
/* eslint-disable @typescript-eslint/ban-ts-comment */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
/**
 * Tools provided by the SDK
 * @module Utils
 */





var EMPTYFN = function EMPTYFN() {
  // do nothing
};
/** @hidden */
function ajax(options, operateName) {
  var _this = this;
  var startTime;
  var envInfo = getEnvInfo();
  if (envInfo.platform === PLATFORM.WEB) {
    return new Promise(function (resolve, reject) {
      var dataType = options.dataType || 'text';
      var suc = options.success || EMPTYFN;
      var error = options.error || EMPTYFN;
      var xhr = new XMLHttpRequest();
      xhr.ontimeout = function () {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_TIMEOUT,
          message: 'Request Timeout',
          errorType: 'timeout_error',
          xhr: xhr
        });
      };
      xhr.onerror = function () {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_UNKNOWN,
          message: 'Request Unknow Error',
          errorType: 'onerror',
          xhr: xhr
        });
      };
      xhr.onabort = function () {
        reject({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_ABORT,
          message: 'Request Abort',
          errorType: 'onabort',
          xhr: xhr
        });
      };
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          var endTime = new Date().getTime();
          var elapsedTime = endTime - startTime;
          var status_1 = xhr.status || 0;
          var extraInfo = {
            elapse: elapsedTime,
            httpCode: status_1
          };
          if (status_1 === 200) {
            utils.ajaxUnconventionalErrorTimes = 0;
            try {
              switch (dataType) {
                case 'text':
                  // @ts-ignore
                  // if (options.version === '3.0') {
                  suc(xhr.responseText); // 兼容回调函数的方式
                  // @ts-ignore
                  resolve(xhr.responseText);
                  return;
                case 'json':
                  var res = JSON.parse(xhr.responseText);
                  res.extraInfo = extraInfo;
                  // @ts-ignore
                  // if (options.version === '3.0') {
                  suc(res); // 兼容回调函数的方式
                  // @ts-ignore
                  resolve(res);
                  return;
                // }
                case 'xml':
                  if (xhr.responseXML && xhr.responseXML.documentElement) {
                    // @ts-ignore
                    // if (options.version === '3.0') {
                    suc(xhr.responseXML.documentElement);
                    // @ts-ignore
                    resolve(xhr.responseXML.documentElement);
                    return;
                    // }
                  } else {
                    error({
                      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_AJAX_ERROR,
                      data: xhr.responseText,
                      message: 'XHR.responseXML is null or XHR.responseXML.documentElement is null'
                    });
                    reject({
                      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_AJAX_ERROR,
                      data: xhr.responseText,
                      message: 'XHR.responseXML is null or XHR.responseXML.documentElement is null'
                    });
                  }
                  return;
                default:
                  error({
                    type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_AJAX_ERROR,
                    data: xhr.responseText,
                    message: 'Invalid dataType'
                  });
                  reject({
                    type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_AJAX_ERROR,
                    data: xhr.responseText,
                    message: 'Invalid dataType'
                  });
              }
              // @ts-ignore
              // if (options.version === '3.0') {
              resolve(xhr.response || xhr.responseText);
              // @ts-ignore
              suc(xhr.response || xhr.responseText, xhr);
              return;
              // resolve({ type: 0, data: xhr.response || xhr.responseText })
            } catch (e) {
              reject(e);
            }
            return;
          } else {
            var generalErrorCode = [400, 401, 403, 404, 429, 500, 503];
            if (!generalErrorCode.includes(status_1)) {
              _logger__WEBPACK_IMPORTED_MODULE_21__.logger.debug('rest api request fail status:', status_1);
              utils.ajaxUnconventionalErrorTimes++;
            }
            (0,_error_ajaxError__WEBPACK_IMPORTED_MODULE_18__["default"])(xhr, reject, error, elapsedTime);
          }
        }
        if (xhr.readyState === 0) {
          error({
            type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_AJAX_ERROR,
            data: xhr.responseText,
            message: 'Request not initialized'
          });
          reject({
            type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_AJAX_ERROR,
            data: xhr.responseText,
            message: 'Request not initialized'
          });
        }
      };
      if (options.responseType) {
        if (xhr.responseType) {
          xhr.responseType = options.responseType;
        }
      }
      if (options.mimeType) {
        xhr.overrideMimeType(options.mimeType);
      }
      var type = options.type || 'POST';
      var data = options.data || null;
      var tempData = '';
      if (type.toLowerCase() === 'get' && data) {
        for (var o in data) {
          // eslint-disable-next-line no-prototype-builtins
          if (data.hasOwnProperty(o)) {
            tempData += o + '=' + data[o] + '&';
          }
        }
        tempData = tempData ? tempData.slice(0, -1) : tempData;
        options.url += (options.url.indexOf('?') > 0 ? '&' : '?') + (tempData ? tempData + '&' : tempData) + '_v=' + new Date().getTime();
        data = null;
        tempData = '';
      }
      startTime = new Date().getTime();
      xhr.open(type, options.url);
      var headers = options.headers || {};
      if (!headers['Content-Type']) {
        headers['Content-Type'] = 'application/json';
      }
      for (var key in headers) {
        if (headers.hasOwnProperty(key)) {
          xhr.setRequestHeader(key, headers[key]);
        }
      }
      xhr.send(data);
    }).then(function (res) {
      // 存在操作名称并且不是sdk内部逻辑则上报
      if (_this.dataReport && operateName && operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
        var rpt = _this.dataReport.geOperateFun({
          operationName: operateName
        });
        rpt({
          isEndApi: true,
          data: __assign({
            isSuccess: 1,
            requestUrl: options.url,
            requestName: operateName,
            requestMethod: options.type
          }, getExtraData(res.extraInfo))
        });
      }
      // sdk内部逻辑单独上报，不删除res.extraInfo
      if (operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
        delete res.extraInfo;
      }
      if (toRawType(res) === 'Object') {
        return __assign(__assign({}, res), {
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_SUCCESS
        });
      } else {
        return {
          data: res,
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_SUCCESS
        };
      }
    })["catch"](function (e) {
      // 存在操作名称并且不是sdk内部逻辑则上报
      if (_this.dataReport && operateName && operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
        var rpt = _this.dataReport.geOperateFun({
          operationName: operateName
        });
        rpt({
          isEndApi: true,
          data: __assign({
            isSuccess: 0,
            requestUrl: options.url,
            requestName: operateName,
            requestMethod: options.type
          }, getExtraData(e.extraInfo))
        });
      }
      // sdk内部逻辑单独上报，不删除e.extraInfo
      if (operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
        delete e.extraInfo;
      }
      throw e;
    });
  } else {
    return wxRequest.call(this, options, operateName);
  }
}
/** @hidden */
function toRawType(value) {
  var _toString = Object.prototype.toString;
  return _toString.call(value).slice(8, -1);
}
/** @hidden */
function wxRequest(options, operateName) {
  var _this = this;
  return new Promise(function (resole, reject) {
    var suc = options.success || EMPTYFN;
    var error = options.error || EMPTYFN;
    var type = options.type || 'POST';
    var data = options.data || null;
    var tempData = '';
    var startTime = new Date().getTime();
    var platForm = utils.getEnvInfo();
    if (type.toLowerCase() === 'get' && data) {
      for (var o in data) {
        if (data.hasOwnProperty(o)) {
          tempData += o + '=' + data[o] + '&';
        }
      }
      tempData = tempData ? tempData.slice(0, -1) : tempData;
      options.url += (options.url.indexOf('?') > 0 ? '&' : '?') + (tempData ? tempData + '&' : tempData) + '_v=' + new Date().getTime();
      data = null;
      tempData = '';
    }
    var reqData = {
      url: options.url,
      data: options.data,
      method: type,
      headers: {},
      success: function success(res) {
        var _a, _b, _c, _d, _e;
        var endTime = new Date().getTime();
        var elapsedTime = endTime - startTime;
        var extraInfo = {
          elapse: elapsedTime,
          httpCode: Number(((_a = res.statusCode) === null || _a === void 0 ? void 0 : _a.toString()) || ((_b = res.status) === null || _b === void 0 ? void 0 : _b.toString())),
          errDesc: ((_c = res === null || res === void 0 ? void 0 : res.data) === null || _c === void 0 ? void 0 : _c.error_description) || ''
        };
        if (((_d = res.statusCode) === null || _d === void 0 ? void 0 : _d.toString()) === '200' || ((_e = res.status) === null || _e === void 0 ? void 0 : _e.toString()) === '200') {
          res.data.extraInfo = extraInfo;
          var dt = res.data;
          suc(dt);
          resole(dt);
        } else {
          res.extraInfo = extraInfo;
          var dt = res;
          error(dt);
          reject(dt);
        }
      },
      complete: function complete() {
        // console.log("wx.request.complete", arguments);
      },
      fail: function fail(e) {
        var endTime = new Date().getTime();
        var elapsedTime = endTime - startTime;
        var extraInfo = {
          elapse: elapsedTime,
          httpCode: _dataReport_const__WEBPACK_IMPORTED_MODULE_20__.NET_WORK_ERROR_CODE,
          errDesc: 'request:fail'
        };
        e.extraInfo = extraInfo;
        // format error desc
        e.data = {
          error: 'request:fail',
          error_description: 'request:fail'
        };
        error(e);
        reject(e);
        // console.log("wx.request.fail", arguments);
      }
    };

    if (platForm.platform === 'zfb' || platForm.platform === 'dd') {
      reqData.headers = options.headers;
    } else {
      reqData.header = options.headers;
    }
    if (platForm.platform === 'dd') {
      // @ts-ignore
      return dd.httpRequest(reqData);
    }
    platForm.global.request(reqData);
  }).then(function (res) {
    // 存在操作名称并且不是sdk内部逻辑则上报
    if (_this.dataReport && operateName && operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
      var rpt = _this.dataReport.geOperateFun({
        operationName: operateName
      });
      rpt({
        isEndApi: true,
        data: __assign({
          isSuccess: 1,
          requestUrl: options.url,
          requestName: operateName,
          requestMethod: options.type
        }, getExtraData(res.extraInfo))
      });
    }
    // sdk内部逻辑单独上报，不删除res.extraInfo
    if (operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
      delete res.extraInfo;
    }
    if (toRawType(res) === 'Object') {
      return __assign(__assign({}, res), {
        type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_SUCCESS
      });
    } else {
      return {
        data: res,
        type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.REQUEST_SUCCESS
      };
    }
  })["catch"](function (e) {
    // 存在操作名称并且不是sdk内部逻辑则上报
    if (_this.dataReport && operateName && operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
      var rpt = _this.dataReport.geOperateFun({
        operationName: operateName
      });
      rpt({
        isEndApi: true,
        data: __assign({
          isSuccess: 0,
          requestUrl: options.url,
          requestName: operateName,
          requestMethod: options.type
        }, getExtraData(e.extraInfo))
      });
    }
    // sdk内部逻辑单独上报，不删除e.extraInfo
    if (operateName !== _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.SDK_INTERNAL) {
      delete e.extraInfo;
    }
    throw e;
  });
}
/**
 * @description get unique message id
 */
function getUniqueId() {
  //*******
  if (this.autoIncrement) {
    this.autoIncrement++;
  } else {
    this.autoIncrement = 1;
  }
  var cdate = new Date();
  var offdate = new Date(2010, 1, 1);
  var offset = cdate.getTime() - offdate.getTime();
  var hexd = offset + this.autoIncrement;
  return hexd.toString();
}
function once(fn, context) {
  var res;
  return function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (!fn) return res;
    res = context ? fn.apply(context, args) : fn.apply(void 0, args);
    fn = null;
  };
}
/**
 * @description listen network change
 */
var listenNetwork = once(_listenNetwork);
function _listenNetwork(onlineCallback, offlineCallback) {
  var envInfo = getEnvInfo();
  if (envInfo.platform !== PLATFORM.WEB) {
    var global_1 = envInfo.global;
    var netWorkWacher = function netWorkWacher(res) {
      if (res.isConnected) {
        onlineCallback();
      } else {
        offlineCallback();
      }
    };
    global_1.offNetworkStatusChange && global_1.offNetworkStatusChange(netWorkWacher);
    global_1.onNetworkStatusChange && global_1.onNetworkStatusChange(netWorkWacher);
  } else {
    if (typeof addEventListener !== 'undefined') {
      window.addEventListener('online', onlineCallback);
      window.addEventListener('offline', offlineCallback);
    }
  }
}
var PLATFORM;
(function (PLATFORM) {
  PLATFORM["WEB"] = "web";
  PLATFORM["WX"] = "wx";
  PLATFORM["ZFB"] = "zfb";
  PLATFORM["DD"] = "dd";
  PLATFORM["TT"] = "tt";
  PLATFORM["BAIDU"] = "baidu";
  PLATFORM["QUICK_APP"] = "quick_app";
  PLATFORM["UNI"] = "uni";
  PLATFORM["NODE"] = "node";
})(PLATFORM || (PLATFORM = {}));
/** @hidden */
function getEnvInfo() {
  // @ts-ignore
  if (typeof swan !== 'undefined' && hasMiniBaseEvent(swan)) {
    return {
      platform: PLATFORM.BAIDU,
      // @ts-ignore
      global: swan
    };
    // @ts-ignore
  } else if (typeof tt !== 'undefined' && hasMiniBaseEvent(tt)) {
    return {
      platform: PLATFORM.TT,
      // @ts-ignore
      global: tt
    };
    // @ts-ignore This judgment condition should be in front of 'zfb'
  } else if (typeof dd !== 'undefined' && hasMiniBaseEvent(dd)) {
    return {
      platform: PLATFORM.DD,
      // @ts-ignore
      global: dd
    };
    // @ts-ignore
  } else if (typeof my !== 'undefined' && hasMiniBaseEvent(my)) {
    return {
      platform: PLATFORM.ZFB,
      // @ts-ignore
      global: my
    };
    // @ts-ignore
  } else if (typeof wx !== 'undefined' && hasMiniBaseEvent(wx)) {
    return {
      platform: PLATFORM.WX,
      // @ts-ignore
      global: wx
    };
    // @ts-ignore
  } else if (typeof uni !== 'undefined' && hasMiniBaseEvent(uni)) {
    return {
      platform: PLATFORM.UNI,
      // @ts-ignore
      global: uni
    };
  } else if (typeof window !== 'undefined' && window.WebSocket) {
    return {
      platform: PLATFORM.WEB,
      // @ts-ignore
      global: window
    };
  } else {
    return {
      platform: PLATFORM.NODE,
      // @ts-ignore
      global: __webpack_require__.g || {}
    };
  }
}
/** @hidden */
function hasMiniBaseEvent(miniGlobal) {
  var baseMiniEventNames = ['canIUse', 'getSystemInfo'];
  for (var i = 0, max = baseMiniEventNames.length; i < max; i++) {
    var baseEventName = baseMiniEventNames[i];
    if (!miniGlobal[baseEventName]) {
      return false;
    }
  }
  return true;
}
/**
 * get file url
 */
function getFileUrl(fileInputId) {
  var uri = {
    url: '',
    filename: '',
    filetype: '',
    data: {}
  };
  var fileObj = typeof fileInputId === 'string' ? document.getElementById(fileInputId) : fileInputId;
  if (window.URL.createObjectURL) {
    if (!fileObj.files) {
      throw Error('this is not HTMLInputElement');
    }
    var fileItems = fileObj.files;
    if (fileItems.length > 0) {
      var u = fileItems.item(0);
      uri.data = u;
      uri.url = window.URL.createObjectURL(u);
      uri.filename = (u === null || u === void 0 ? void 0 : u.name) || '';
    }
  } else {
    // IE
    if (typeof fileInputId !== 'string') {
      throw Error('in IE fileInputId must be string');
    }
    var inputEl = document.getElementById(fileInputId);
    var u = inputEl.value;
    uri.url = u;
    var pos1 = u.lastIndexOf('/');
    var pos2 = u.lastIndexOf('\\');
    var pos = Math.max(pos1, pos2);
    if (pos < 0) uri.filename = u;else uri.filename = u.substring(pos + 1);
  }
  var index = uri.filename.lastIndexOf('.');
  if (index !== -1) {
    uri.filetype = uri.filename.substring(index + 1).toLowerCase();
  }
  return uri;
}
/**
 * @description upload file
 */
function uploadFile(options, operateName) {
  var _a, _b;
  // eslint-disable-next-line @typescript-eslint/no-this-alias
  var that = this;
  var startTime = new Date().getTime();
  var acc = options.accessToken;
  if (!acc) {
    options.onFileUploadError && options.onFileUploadError({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_UPLOADFILE_NO_LOGIN,
      message: 'AccessToken cannot be empty'
    });
    return;
  }
  var appKey = options.appKey;
  var devInfos = [];
  var orgName = '';
  var appName = '';
  if (appKey) {
    devInfos = appKey.split('#');
    orgName = devInfos[0];
    appName = devInfos[1];
  }
  if (!orgName && !appName) {
    options.onFileUploadError && options.onFileUploadError({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_UPLOADFILE_ERROR,
      message: 'AppKey illegal'
    });
    return;
  }
  var apiUrl = options.apiUrl;
  var uploadUrl = options.uploadUrl || apiUrl + '/' + orgName + '/' + appName + '/chatfiles';
  var fileSize = (_b = (_a = options === null || options === void 0 ? void 0 : options.file) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.size;
  if (fileSize <= 0) {
    options.onFileUploadError && options.onFileUploadError({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_UPLOADFILE_ERROR,
      message: 'fileSize must be greater than 0'
    });
    return;
  }
  function onUploadError(errInfo) {
    var elapse = new Date().getTime() - startTime;
    // 存在操作名称则上报
    if (that.dataReport && operateName && [_dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.UPLOAD_MSG_ATTACH, _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.UPLOAD_CHATROOM_FILE, _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.UPLOAD_GROUP_FILE].includes(operateName)) {
      var rpt = that.dataReport.geOperateFun({
        operationName: operateName
      });
      rpt({
        isEndApi: true,
        data: {
          isSuccess: 0,
          requestMethod: 'POST',
          requestName: operateName,
          requestElapse: elapse,
          requestUrl: uploadUrl,
          code: (xhr === null || xhr === void 0 ? void 0 : xhr.status) || 0,
          codeDesc: 'upload file error'
        }
      });
    }
    options.onFileUploadError && options.onFileUploadError(errInfo);
  }
  function onUploadComplete(json) {
    var elapse = new Date().getTime() - startTime;
    // 存在操作名称则上报
    if (that.dataReport && operateName && [_dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.UPLOAD_MSG_ATTACH, _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.UPLOAD_CHATROOM_FILE, _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.UPLOAD_GROUP_FILE].includes(operateName)) {
      var rpt = that.dataReport.geOperateFun({
        operationName: operateName
      });
      rpt({
        isEndApi: true,
        data: {
          isSuccess: (json === null || json === void 0 ? void 0 : json.error) ? 0 : 1,
          requestMethod: 'POST',
          requestName: operateName,
          requestElapse: elapse,
          requestUrl: uploadUrl,
          code: xhr.status,
          codeDesc: (json === null || json === void 0 ? void 0 : json.error_description) || ''
        }
      });
    }
    options.onFileUploadComplete && options.onFileUploadComplete(json);
  }
  function onError(e) {
    onUploadError({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_UPLOADFILE_ERROR,
      data: xhr
    });
  }
  var xhr = new XMLHttpRequest();
  if (xhr.upload) {
    xhr.upload.addEventListener('progress', options.onFileUploadProgress || EMPTYFN, false);
  }
  xhr.addEventListener('abort', options.onFileUploadCanceled || EMPTYFN, false);
  xhr.addEventListener('error', onError, false);
  xhr.addEventListener('load', function (e) {
    try {
      var json = JSON.parse(xhr.responseText);
      if (xhr.status === 400) {
        onUploadError({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_UPLOADFILE_ERROR,
          data: json
        });
        return false;
      }
      try {
        onUploadComplete(json);
      } catch (e) {
        onUploadError({
          type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,
          data: e
        });
      }
    } catch (e) {
      onUploadError({
        type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_UPLOADFILE_ERROR,
        data: xhr.responseText
      });
    }
  }, false);
  xhr.open('POST', uploadUrl);
  xhr.setRequestHeader('restrict-access', 'true');
  xhr.setRequestHeader('Accept', '*/*'); // Android QQ browser has some problem with this attribute.
  xhr.setRequestHeader('Authorization', 'Bearer ' + acc);
  var formData = new FormData();
  formData.append('file', options.file.data);
  xhr.send(formData);
}
/**
 * @description download file
 */
function download(options, operateName) {
  options.onFileDownloadComplete = options.onFileDownloadComplete || EMPTYFN;
  options.onFileDownloadError = options.onFileDownloadError || EMPTYFN;
  var startTime = new Date().getTime();
  var xhr = new XMLHttpRequest();
  // eslint-disable-next-line @typescript-eslint/no-this-alias
  var that = this;
  var onError = function onError(e) {
    var elapse = new Date().getTime() - startTime;
    // 存在操作名称则上报
    if (that.dataReport && operateName && operateName === _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.DOWN_GROUP_FILE) {
      var rpt = that.dataReport.geOperateFun({
        operationName: operateName
      });
      rpt({
        isEndApi: true,
        data: {
          isSuccess: 0,
          requestMethod: 'POST',
          requestName: operateName,
          requestElapse: elapse,
          requestUrl: options === null || options === void 0 ? void 0 : options.url,
          code: (xhr === null || xhr === void 0 ? void 0 : xhr.status) || 0,
          codeDesc: 'download file error'
        }
      });
    }
    options.onFileDownloadError && options.onFileDownloadError({
      type: _status__WEBPACK_IMPORTED_MODULE_17__.Code.WEBIM_DOWNLOADFILE_ERROR,
      id: options.id,
      xhr: xhr
    });
  };
  xhr.addEventListener('load', function (e) {
    var elapse = new Date().getTime() - startTime;
    if (that.dataReport && operateName && operateName === _dataReport_types__WEBPACK_IMPORTED_MODULE_19__.OperationName.DOWN_GROUP_FILE) {
      var rpt = that.dataReport.geOperateFun({
        operationName: operateName
      });
      rpt({
        isEndApi: true,
        data: {
          isSuccess: xhr.status === 200 ? 1 : 0,
          requestMethod: 'POST',
          requestName: operateName,
          requestElapse: elapse,
          requestUrl: options === null || options === void 0 ? void 0 : options.url,
          code: xhr.status,
          codeDesc: xhr.status === 200 ? '' : 'download file error'
        }
      });
    }
    options.onFileDownloadComplete && options.onFileDownloadComplete(xhr.response);
  }, false);
  xhr.addEventListener('error', onError, false);
  var method = options.method || 'GET';
  var resType = options.responseType || 'blob';
  var mimeType = options.mimeType || 'text/plain; charset=x-user-defined';
  xhr.open(method, options.url);
  if (typeof Blob !== 'undefined') {
    xhr.responseType = resType;
  } else {
    xhr.overrideMimeType(mimeType);
  }
  var innerHeaer = {
    'X-Requested-With': 'XMLHttpRequest',
    Accept: 'application/octet-stream',
    'share-secret': options.secret,
    Authorization: 'Bearer ' + this.context.accessToken
  };
  var headers = options.headers || {};
  for (var key in headers) {
    innerHeaer[key] = headers[key];
  }
  for (var key in innerHeaer) {
    if (innerHeaer[key]) {
      xhr.setRequestHeader(key, innerHeaer[key]);
    }
  }
  // fix: ie8 status error
  // window.XDomainRequest && (xhr.readyState = 2)
  xhr.send(null);
}
/** @hidden */
function flow(fns) {
  var len = fns.length;
  // 检查所有参数是否为函数
  var index = len;
  while (index--) {
    if (typeof fns[index] !== 'function') {
      throw new TypeError('Expected a function');
    }
  }
  return function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    var index = 0;
    var reslut = len ? fns[index].apply(this, args) : args[0];
    while (++index < len) {
      reslut = fns[index].call(this, reslut);
    }
    return reslut;
  };
}
/**
 *
 * @param response the download response
 * @returns the
 */
function parseDownloadResponse(response) {
  if (!(window && window.URL)) {
    throw Error('parseDownloadResponse can be used in broswer only');
  }
  return response && response.type && response.type === 'application/json' || 0 > Object.prototype.toString.call(response).indexOf('Blob') ? this.url + '?token=' : window.URL.createObjectURL(response);
}
function parseNotify(payload) {
  var encoded = '';
  for (var i = 0; i < payload.length; i++) {
    encoded += '%' + payload[i].toString(16);
  }
  // const data = String.fromCharCode(...payload);
  // console.log(data, 'data');
  return JSON.parse(decodeURIComponent(encoded));
}
function getExtraData(extraInfo) {
  if (extraInfo === void 0) {
    extraInfo = {};
  }
  var _a = extraInfo.elapse,
    elapse = _a === void 0 ? 0 : _a,
    _b = extraInfo.httpCode,
    httpCode = _b === void 0 ? 0 : _b,
    _c = extraInfo.errDesc,
    errDesc = _c === void 0 ? '' : _c;
  return {
    requestElapse: elapse,
    code: httpCode,
    codeDesc: errDesc
  };
}
var utils = {
  /** @hidden */
  autoIncrement: 0,
  /** @hidden */
  ajaxUnconventionalErrorTimes: 0,
  /** @hidden */
  ajax: ajax,
  getUniqueId: getUniqueId,
  getFileUrl: getFileUrl,
  uploadFile: uploadFile,
  /** @hidden */
  flow: flow,
  listenNetwork: listenNetwork,
  getEnvInfo: getEnvInfo,
  /** @hidden */
  wxRequest: wxRequest,
  /** @hidden */
  parseDownloadResponse: parseDownloadResponse,
  download: download,
  /** @hidden */
  parseNotify: parseNotify,
  /** @hidden */
  getExtraData: getExtraData
};

// export default utils;

/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-constructor.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/a-constructor.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsConstructor(argument) is true`
module.exports = function (argument) {
  if (isConstructor(argument)) return argument;
  throw $TypeError(tryToString(argument) + ' is not a constructor');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-possible-prototype.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var $String = String;
var $TypeError = TypeError;

module.exports = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw $TypeError("Can't set " + $String(argument) + ' as a prototype');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-instance.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");

var $TypeError = TypeError;

module.exports = function (it, Prototype) {
  if (isPrototypeOf(Prototype, it)) return it;
  throw $TypeError('Incorrect invocation');
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-buffer-basic-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer-basic-detection.js ***!
  \************************************************************************/
/***/ (function(module) {

// eslint-disable-next-line es/no-typed-arrays -- safe
module.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';


/***/ }),

/***/ "./node_modules/core-js/internals/array-buffer-non-extensible.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer-non-extensible.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = fails(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8);
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
  }
});


/***/ }),

/***/ "./node_modules/core-js/internals/array-buffer-view-core.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer-view-core.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-basic-detection */ "./node_modules/core-js/internals/array-buffer-basic-detection.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var TypeError = global.TypeError;

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQUIRED = false;
var NAME, Constructor, Prototype;

var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};

var BigIntArrayConstructorsList = {
  BigInt64Array: 8,
  BigUint64Array: 8
};

var isView = function isView(it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return klass === 'DataView'
    || hasOwn(TypedArrayConstructorsList, klass)
    || hasOwn(BigIntArrayConstructorsList, klass);
};

var getTypedArrayConstructor = function (it) {
  var proto = getPrototypeOf(it);
  if (!isObject(proto)) return;
  var state = getInternalState(proto);
  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);
};

var isTypedArray = function (it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return hasOwn(TypedArrayConstructorsList, klass)
    || hasOwn(BigIntArrayConstructorsList, klass);
};

var aTypedArray = function (it) {
  if (isTypedArray(it)) return it;
  throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor = function (C) {
  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;
  throw TypeError(tryToString(C) + ' is not a typed array constructor');
};

var exportTypedArrayMethod = function (KEY, property, forced, options) {
  if (!DESCRIPTORS) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {
      delete TypedArrayConstructor.prototype[KEY];
    } catch (error) {
      // old WebKit bug - some methods are non-configurable
      try {
        TypedArrayConstructor.prototype[KEY] = property;
      } catch (error2) { /* empty */ }
    }
  }
  if (!TypedArrayPrototype[KEY] || forced) {
    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property
      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);
  }
};

var exportTypedArrayStaticMethod = function (KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS) return;
  if (setPrototypeOf) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global[ARRAY];
      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {
        delete TypedArrayConstructor[KEY];
      } catch (error) { /* empty */ }
    }
    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
      } catch (error) { /* empty */ }
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      defineBuiltIn(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;
  else NATIVE_ARRAY_BUFFER_VIEWS = false;
}

for (NAME in BigIntArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow -- safe
  TypedArray = function TypedArray() {
    throw TypeError('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQUIRED = true;
  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {
    configurable: true,
    get: function () {
      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
    }
  });
  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
  }
}

module.exports = {
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportTypedArrayMethod: exportTypedArrayMethod,
  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
  getTypedArrayConstructor: getTypedArrayConstructor,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-buffer.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-basic-detection */ "./node_modules/core-js/internals/array-buffer-basic-detection.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "./node_modules/core-js/internals/to-index.js");
var IEEE754 = __webpack_require__(/*! ../internals/ieee754 */ "./node_modules/core-js/internals/ieee754.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var arrayFill = __webpack_require__(/*! ../internals/array-fill */ "./node_modules/core-js/internals/array-fill.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var getInternalArrayBufferState = InternalStateModule.getterFor(ARRAY_BUFFER);
var getInternalDataViewState = InternalStateModule.getterFor(DATA_VIEW);
var setInternalState = InternalStateModule.set;
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var ArrayBufferPrototype = $ArrayBuffer && $ArrayBuffer[PROTOTYPE];
var $DataView = global[DATA_VIEW];
var DataViewPrototype = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype = Object.prototype;
var Array = global.Array;
var RangeError = global.RangeError;
var fill = uncurryThis(arrayFill);
var reverse = uncurryThis([].reverse);

var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;

var packInt8 = function (number) {
  return [number & 0xFF];
};

var packInt16 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var unpackInt32 = function (buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packFloat32 = function (number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function (number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function (Constructor, key, getInternalState) {
  defineBuiltInAccessor(Constructor[PROTOTYPE], key, {
    configurable: true,
    get: function () {
      return getInternalState(this)[key];
    }
  });
};

var get = function (view, count, index, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalDataViewState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = store.bytes;
  var start = intIndex + store.byteOffset;
  var pack = arraySlice(bytes, start, start + count);
  return isLittleEndian ? pack : reverse(pack);
};

var set = function (view, count, index, conversion, value, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalDataViewState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = store.bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);
  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, ArrayBufferPrototype);
    var byteLength = toIndex(length);
    setInternalState(this, {
      type: ARRAY_BUFFER,
      bytes: fill(Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) {
      this.byteLength = byteLength;
      this.detached = false;
    }
  };

  ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE];

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, DataViewPrototype);
    anInstance(buffer, ArrayBufferPrototype);
    var bufferState = getInternalArrayBufferState(buffer);
    var bufferLength = bufferState.byteLength;
    var offset = toIntegerOrInfinity(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      type: DATA_VIEW,
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset,
      bytes: bufferState.bytes
    });
    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  DataViewPrototype = $DataView[PROTOTYPE];

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength', getInternalArrayBufferState);
    addGetter($DataView, 'buffer', getInternalDataViewState);
    addGetter($DataView, 'byteLength', getInternalDataViewState);
    addGetter($DataView, 'byteOffset', getInternalDataViewState);
  }

  defineBuiltIns(DataViewPrototype, {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
    }
  });
} else {
  var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;
  /* eslint-disable no-new -- required for testing */
  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1);
  }) || fails(function () {
    new NativeArrayBuffer();
    new NativeArrayBuffer(1.5);
    new NativeArrayBuffer(NaN);
    return NativeArrayBuffer.length != 1 || INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
  })) {
    /* eslint-enable no-new -- required for testing */
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, ArrayBufferPrototype);
      return new NativeArrayBuffer(toIndex(length));
    };

    $ArrayBuffer[PROTOTYPE] = ArrayBufferPrototype;

    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) {
        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
      }
    }

    ArrayBufferPrototype.constructor = $ArrayBuffer;
  } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
    createNonEnumerableProperty(NativeArrayBuffer, 'name', ARRAY_BUFFER);
  }

  // WebKit bug - the same parent prototype for typed arrays and data view
  if (setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
    setPrototypeOf(DataViewPrototype, ObjectPrototype);
  }

  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = uncurryThis(DataViewPrototype.setInt8);
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) defineBuiltIns(DataViewPrototype, {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    }
  }, { unsafe: true });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);

module.exports = {
  ArrayBuffer: $ArrayBuffer,
  DataView: $DataView
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-copy-within.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/array-copy-within.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var deletePropertyOrThrow = __webpack_require__(/*! ../internals/delete-property-or-throw */ "./node_modules/core-js/internals/delete-property-or-throw.js");

var min = Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
// eslint-disable-next-line es/no-array-prototype-copywithin -- safe
module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = lengthOfArrayLike(O);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else deletePropertyOrThrow(O, to);
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-fill.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-fill.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = lengthOfArrayLike(O);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-for-each.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-for-each.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),

/***/ "./node_modules/core-js/internals/array-from-constructor-and-list.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-from-constructor-and-list.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

module.exports = function (Constructor, list) {
  var index = 0;
  var length = lengthOfArrayLike(list);
  var result = new Constructor(length);
  while (length > index) result[index] = list[index++];
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-from.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-from.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var $Array = Array;

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var IS_CONSTRUCTOR = isConstructor(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];
    for (;!(step = call(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = lengthOfArrayLike(O);
    result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-last-index-of.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/array-last-index-of.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-lastindexof -- safe */
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var min = Math.min;
var $lastIndexOf = [].lastIndexOf;
var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
module.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return apply($lastIndexOf, this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = lengthOfArrayLike(O);
  var index = length - 1;
  if (arguments.length > 1) index = min(index, toIntegerOrInfinity(arguments[1]));
  if (index < 0) index = length + index;
  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
  return -1;
} : $lastIndexOf;


/***/ }),

/***/ "./node_modules/core-js/internals/array-method-has-species-support.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-has-species-support.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-method-is-strict.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-is-strict.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-reduce.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/array-reduce.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

var $TypeError = TypeError;

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aCallable(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = lengthOfArrayLike(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw $TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-set-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/array-set-length.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Safari < 13 does not throw an error in this case
var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {
  // makes no sense without proper strict mode support
  if (this !== undefined) return true;
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', { writable: false }).length = 1;
  } catch (error) {
    return error instanceof TypeError;
  }
}();

module.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {
  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {
    throw $TypeError('Cannot set read only .length');
  } return O.length = length;
} : function (O, length) {
  return O.length = length;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice-simple.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice-simple.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

var $Array = Array;
var max = Math.max;

module.exports = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = $Array(max(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis([].slice);


/***/ }),

/***/ "./node_modules/core-js/internals/array-sort.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-sort.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

var floor = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySlice(array, 0, middle), comparefn),
    mergeSort(arraySlice(array, middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

module.exports = mergeSort;


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose(iterator, 'throw', error);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-strong.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/collection-strong.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fastKey = (__webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js").fastKey);
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    defineBuiltIns(Prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    defineBuiltIns(Prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineBuiltInAccessor(Prototype, 'size', {
      configurable: true,
      get: function () {
        return getInternalState(this).size;
      }
    });
    return Constructor;
  },
  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return createIterResultObject(undefined, true);
      }
      // return step by kind
      if (kind == 'keys') return createIterResultObject(entry.key, false);
      if (kind == 'values') return createIterResultObject(entry.value, false);
      return createIterResultObject([entry.key, entry.value], false);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/collection.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
    defineBuiltIn(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        uncurriedNativeMethod(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, NativePrototype);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, constructor: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-is-regexp-logic.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "./node_modules/core-js/internals/create-iter-result-object.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iter-result-object.js ***!
  \*********************************************************************/
/***/ (function(module) {

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
module.exports = function (value, done) {
  return { value: value, done: done };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ (function(module) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in-accessor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in-accessor.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, name, descriptor) {
  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
  return defineProperty.f(target, name, descriptor);
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-ins.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-ins.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

module.exports = function (target, src, options) {
  for (var key in src) defineBuiltIn(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-global-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/delete-property-or-throw.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/delete-property-or-throw.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

module.exports = function (O, P) {
  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
/***/ (function(module) {

var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

module.exports = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/does-not-exceed-safe-integer.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/does-not-exceed-safe-integer.js ***!
  \************************************************************************/
/***/ (function(module) {

var $TypeError = TypeError;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

module.exports = function (it) {
  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-iterables.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/dom-iterables.js ***!
  \*********************************************************/
/***/ (function(module) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-token-list-prototype.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/dom-token-list-prototype.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-ff-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-ff-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var firefox = userAgent.match(/firefox\/(\d+)/i);

module.exports = !!firefox && +firefox[1];


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-browser.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-browser.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var IS_DENO = __webpack_require__(/*! ../internals/engine-is-deno */ "./node_modules/core-js/internals/engine-is-deno.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

module.exports = !IS_DENO && !IS_NODE
  && typeof window == 'object'
  && typeof document == 'object';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-bun.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-bun.js ***!
  \*********************************************************/
/***/ (function(module) {

/* global Bun -- Deno case */
module.exports = typeof Bun == 'function' && Bun && typeof Bun.version == 'string';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-deno.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-deno.js ***!
  \**********************************************************/
/***/ (function(module) {

/* global Deno -- Deno case */
module.exports = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ie-or-edge.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ie-or-edge.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var UA = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /MSIE|Trident/.test(UA);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios-pebble.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios-pebble.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /ipad|iphone|ipod/i.test(userAgent) && typeof Pebble != 'undefined';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

// eslint-disable-next-line redos/no-vulnerable -- safe
module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-node.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-node.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

module.exports = typeof process != 'undefined' && classof(process) == 'process';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-webos-webkit.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-webos-webkit.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ (function(module) {

module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-webkit-version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-webkit-version.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

module.exports = !!webkit && +webkit[1];


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ (function(module) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ (function(module) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/freezing.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/freezing.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-apply.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/function-apply.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var $Function = Function;
var concat = uncurryThis([].concat);
var join = uncurryThis([].join);
var factories = {};

var construct = function (C, argsLength, args) {
  if (!hasOwn(factories, argsLength)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
// eslint-disable-next-line es/no-function-prototype-bind -- detection
module.exports = NATIVE_BIND ? $Function.bind : function bind(that /* , ...args */) {
  var F = aCallable(this);
  var Prototype = F.prototype;
  var partArgs = arraySlice(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = concat(partArgs, arraySlice(arguments));
    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
  };
  if (isObject(Prototype)) boundFunction.prototype = Prototype;
  return boundFunction;
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-accessor.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-accessor.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

module.exports = function (object, key, method) {
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) { /* empty */ }
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis(fn);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator-method.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)
    || getMethod(it, '@@iterator')
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var $TypeError = TypeError;

module.exports = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
  throw $TypeError(tryToString(argument) + ' is not iterable');
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-json-replacer-function.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/get-json-replacer-function.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");

var push = uncurryThis([].push);

module.exports = function (replacer) {
  if (isCallable(replacer)) return replacer;
  if (!isArray(replacer)) return;
  var rawLength = replacer.length;
  var keys = [];
  for (var i = 0; i < rawLength; i++) {
    var element = replacer[i];
    if (typeof element == 'string') push(keys, element);
    else if (typeof element == 'number' || classof(element) == 'Number' || classof(element) == 'String') push(keys, toString(element));
  }
  var keysLength = keys.length;
  var root = true;
  return function (key, value) {
    if (root) {
      root = false;
      return value;
    }
    if (isArray(this)) return value;
    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || this || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ (function(module) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/host-report-errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/host-report-errors.js ***!
  \**************************************************************/
/***/ (function(module) {

module.exports = function (a, b) {
  try {
    // eslint-disable-next-line no-console -- safe
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  } catch (error) { /* empty */ }
};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/ieee754.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/ieee754.js ***!
  \***************************************************/
/***/ (function(module) {

// IEEE754 conversions based on https://github.com/feross/ieee754
var $Array = Array;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

var pack = function (number, mantissaLength, bytes) {
  var buffer = $Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare -- NaN check
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    c = pow(2, -exponent);
    if (number * c < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }
  while (mantissaLength >= 8) {
    buffer[index++] = mantissa & 255;
    mantissa /= 256;
    mantissaLength -= 8;
  }
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  while (exponentLength > 0) {
    buffer[index++] = exponent & 255;
    exponent /= 256;
    exponentLength -= 8;
  }
  buffer[--index] |= sign * 128;
  return buffer;
};

var unpack = function (buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  while (nBits > 0) {
    exponent = exponent * 256 + buffer[index--];
    nBits -= 8;
  }
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  while (nBits > 0) {
    mantissa = mantissa * 256 + buffer[index--];
    nBits -= 8;
  }
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

module.exports = {
  pack: pack,
  unpack: unpack
};


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inherit-if-required.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/inherit-if-required.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-metadata.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/internal-metadata.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternalModule = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
var isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "./node_modules/core-js/internals/object-is-extensible.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");

var REQUIRED = false;
var METADATA = uid('meta');
var id = 0;

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + id++, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function () {
  meta.enable = function () { /* empty */ };
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis([].splice);
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      } return result;
    };

    $({ target: 'Object', stat: true, forced: true }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = module.exports = {
  enable: enable,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array-iterator-method.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-big-int-array.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/is-big-int-array.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

module.exports = function (it) {
  var klass = classof(it);
  return klass == 'BigInt64Array' || klass == 'BigUint64Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-integral-number.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/is-integral-number.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var floor = Math.floor;

// `IsIntegralNumber` abstract operation
// https://tc39.es/ecma262/#sec-isintegralnumber
// eslint-disable-next-line es/no-number-isinteger -- safe
module.exports = Number.isInteger || function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
/***/ (function(module) {

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

module.exports = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ (function(module) {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-regexp.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-regexp.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterate.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

var $TypeError = TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = call(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
  } return new Result(false);
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-close.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-close.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-create-constructor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-create-constructor.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-define.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-define.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/iterator-create-constructor */ "./node_modules/core-js/internals/iterator-create-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
  }
  Iterators[NAME] = defaultIterator;

  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators-core.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  defineBuiltIn(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
/***/ (function(module) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/make-built-in.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ "./node_modules/core-js/internals/math-trunc.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
/***/ (function(module) {

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ "./node_modules/core-js/internals/microtask.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/microtask.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var macrotask = (__webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set);
var Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/core-js/internals/queue.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_IOS_PEBBLE = __webpack_require__(/*! ../internals/engine-is-ios-pebble */ "./node_modules/core-js/internals/engine-is-ios-pebble.js");
var IS_WEBOS_WEBKIT = __webpack_require__(/*! ../internals/engine-is-webos-webkit */ "./node_modules/core-js/internals/engine-is-webos-webkit.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var microtask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
var notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!microtask) {
  var queue = new Queue();

  var flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (fn = queue.get()) try {
      fn();
    } catch (error) {
      if (queue.head) notify();
      throw error;
    }
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise;
    then = bind(promise.then, promise);
    notify = function () {
      then(flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessage
  // - onreadystatechange
  // - setTimeout
  } else {
    // `webpack` dev server bug on IE global methods - use bind(fn, global)
    macrotask = bind(macrotask, global);
    notify = function () {
      macrotask(flush);
    };
  }

  microtask = function (fn) {
    if (!queue.head) notify();
    queue.add(fn);
  };
}

module.exports = microtask;


/***/ }),

/***/ "./node_modules/core-js/internals/new-promise-capability.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/new-promise-capability.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

var $TypeError = TypeError;

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw $TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable(resolve);
  this.reject = aCallable(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/internals/not-a-regexp.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/not-a-regexp.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "./node_modules/core-js/internals/is-regexp.js");

var $TypeError = TypeError;

module.exports = function (it) {
  if (isRegExp(it)) {
    throw $TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-assign.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var $getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && classof(it) == 'Window'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-extensible.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-extensible.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "./node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = fails(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
module.exports = (FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
  if (!isObject(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return false;
  return $isExtensible ? $isExtensible(it) : true;
} : $isExtensible;


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var uncurryThisAccessor = __webpack_require__(/*! ../internals/function-uncurry-this-accessor */ "./node_modules/core-js/internals/function-uncurry-this-accessor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "./node_modules/core-js/internals/object-to-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-array.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var $propertyIsEnumerable = (__webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js").f);

var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
var push = uncurryThis([].push);

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {
        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-string.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/perform.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/perform.js ***!
  \***************************************************/
/***/ (function(module) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-constructor-detection.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-constructor-detection.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_BROWSER = __webpack_require__(/*! ../internals/engine-is-browser */ "./node_modules/core-js/internals/engine-is-browser.js");
var IS_DENO = __webpack_require__(/*! ../internals/engine-is-deno */ "./node_modules/core-js/internals/engine-is-deno.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
var SPECIES = wellKnownSymbol('species');
var SUBCLASSING = false;
var NATIVE_PROMISE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);

var FORCED_PROMISE_CONSTRUCTOR = isForced('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
  // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution
  if (IS_PURE && !(NativePromisePrototype['catch'] && NativePromisePrototype['finally'])) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new NativePromiseConstructor(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES] = FakePromise;
    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  } return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT;
});

module.exports = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
  SUBCLASSING: SUBCLASSING
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-native-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-native-constructor.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global.Promise;


/***/ }),

/***/ "./node_modules/core-js/internals/promise-resolve.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/promise-resolve.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-statics-incorrect-iteration.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-statics-incorrect-iteration.js ***!
  \*******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);

module.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function (iterable) {
  NativePromiseConstructor.all(iterable).then(undefined, function () { /* empty */ });
});


/***/ }),

/***/ "./node_modules/core-js/internals/queue.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/queue.js ***!
  \*************************************************/
/***/ (function(module) {

var Queue = function () {
  this.head = null;
  this.tail = null;
};

Queue.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    var tail = this.tail;
    if (tail) tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      var next = this.head = entry.next;
      if (next === null) this.tail = null;
      return entry.item;
    }
  }
};

module.exports = Queue;


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-exec.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var regexpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "./node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").get);
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "./node_modules/core-js/internals/regexp-unsupported-ncg.js");

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call(nativeExec, re1, 'a');
  call(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = call(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace(flags, 'y', '');
      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice(match.input, charsAdded);
        match[0] = stringSlice(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      call(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-flags.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-flags.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-get-flags.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-get-flags.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "./node_modules/core-js/internals/regexp-flags.js");

var RegExpPrototype = RegExp.prototype;

module.exports = function (R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)
    ? call(regExpFlags, R) : flags;
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-sticky-helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-sticky-helpers.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global.RegExp;

var UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
  return !$RegExp('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

module.exports = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-dot-all.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-unsupported-ncg.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-ncg.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/schedulers-fix.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/schedulers-fix.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var ENGINE_IS_BUN = __webpack_require__(/*! ../internals/engine-is-bun */ "./node_modules/core-js/internals/engine-is-bun.js");
var USER_AGENT = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");

var Function = global.Function;
// dirty IE9- and Bun 0.3.0- checks
var WRAP = /MSIE .\./.test(USER_AGENT) || ENGINE_IS_BUN && (function () {
  var version = global.Bun.version.split('.');
  return version.length < 3 || version[0] == 0 && (version[1] < 3 || version[1] == 3 && version[2] == 0);
})();

// IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
// https://github.com/oven-sh/bun/issues/1633
module.exports = function (scheduler, hasTimeArg) {
  var firstParamIndex = hasTimeArg ? 2 : 1;
  return WRAP ? function (handler, timeout /* , ...arguments */) {
    var boundArgs = validateArgumentsLength(arguments.length, 1) > firstParamIndex;
    var fn = isCallable(handler) ? handler : Function(handler);
    var params = boundArgs ? arraySlice(arguments, firstParamIndex) : [];
    var callback = boundArgs ? function () {
      apply(fn, this, params);
    } : fn;
    return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);
  } : scheduler;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-species.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/set-species.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineBuiltInAccessor(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.30.2',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/species-constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/species-constructor.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/core-js/internals/a-constructor.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-multibyte.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-punycode-to-ascii.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/string-punycode-to-ascii.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;

var $RangeError = RangeError;
var exec = uncurryThis(regexSeparators.exec);
var floor = Math.floor;
var fromCharCode = String.fromCharCode;
var charCodeAt = uncurryThis(''.charCodeAt);
var join = uncurryThis([].join);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var split = uncurryThis(''.split);
var toLowerCase = uncurryThis(''.toLowerCase);

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = charCodeAt(string, counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = charCodeAt(string, counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        push(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        push(output, value);
        counter--;
      }
    } else {
      push(output, value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  while (delta > baseMinusTMin * tMax >> 1) {
    delta = floor(delta / baseMinusTMin);
    k += base;
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      push(output, fromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    push(output, delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw $RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw $RangeError(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        var k = base;
        while (true) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          push(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
          k += base;
        }

        push(output, fromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        handledCPCount++;
      }
    }

    delta++;
    n++;
  }
  return join(output, '');
};

module.exports = function (input) {
  var encoded = [];
  var labels = split(replace(toLowerCase(input), regexSeparators, '\u002E'), '.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    push(encoded, exec(regexNonASCII, label) ? 'xn--' + encode(label) : label);
  }
  return join(encoded, '.');
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-trim.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/string-trim.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "./node_modules/core-js/internals/whitespaces.js");

var replace = uncurryThis(''.replace);
var ltrim = RegExp('^[' + whitespaces + ']+');
var rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = replace(string, ltrim, '');
    if (TYPE & 2) string = replace(string, rtrim, '$1');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-define-to-primitive.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-define-to-primitive.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

module.exports = function () {
  var Symbol = getBuiltIn('Symbol');
  var SymbolPrototype = Symbol && Symbol.prototype;
  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
    // `Symbol.prototype[@@toPrimitive]` method
    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
    // eslint-disable-next-line no-unused-vars -- required for .length
    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {
      return call(valueOf, this);
    }, { arity: 1 });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-registry-detection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-registry-detection.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

/* eslint-disable es/no-symbol -- safe */
module.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;


/***/ }),

/***/ "./node_modules/core-js/internals/task.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/task.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var $location, defer, channel, port;

fails(function () {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location = global.location;
});

var run = function (id) {
  if (hasOwn(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var eventListener = function (event) {
  run(event.data);
};

var globalPostMessageDefer = function (id) {
  // old engines have not location.origin
  global.postMessage(String(id), $location.protocol + '//' + $location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = arraySlice(arguments, 1);
    queue[++counter] = function () {
      apply(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = eventListener;
    defer = bind(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    isCallable(global.postMessage) &&
    !global.importScripts &&
    $location && $location.protocol !== 'file:' &&
    !fails(globalPostMessageDefer)
  ) {
    defer = globalPostMessageDefer;
    global.addEventListener('message', eventListener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "./node_modules/core-js/internals/this-number-value.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/this-number-value.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
module.exports = uncurryThis(1.0.valueOf);


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-big-int.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/to-big-int.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");

var $TypeError = TypeError;

// `ToBigInt` abstract operation
// https://tc39.es/ecma262/#sec-tobigint
module.exports = function (argument) {
  var prim = toPrimitive(argument, 'number');
  if (typeof prim == 'number') throw $TypeError("Can't convert number to bigint");
  // eslint-disable-next-line es/no-bigint -- safe
  return BigInt(prim);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-index.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/to-index.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

var $RangeError = RangeError;

// `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toIntegerOrInfinity(it);
  var length = toLength(number);
  if (number !== length) throw $RangeError('Wrong length or index');
  return length;
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-offset.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-offset.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPositiveInteger = __webpack_require__(/*! ../internals/to-positive-integer */ "./node_modules/core-js/internals/to-positive-integer.js");

var $RangeError = RangeError;

module.exports = function (it, BYTES) {
  var offset = toPositiveInteger(it);
  if (offset % BYTES) throw $RangeError('Wrong offset');
  return offset;
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-positive-integer.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/to-positive-integer.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var $RangeError = RangeError;

module.exports = function (it) {
  var result = toIntegerOrInfinity(it);
  if (result < 0) throw $RangeError("The argument can't be less than 0");
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/to-string.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

var $String = String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String(argument);
};


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ (function(module) {

var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/typed-array-constructor.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/typed-array-constructor.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "./node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "./node_modules/core-js/internals/array-buffer.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var isIntegralNumber = __webpack_require__(/*! ../internals/is-integral-number */ "./node_modules/core-js/internals/is-integral-number.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "./node_modules/core-js/internals/to-index.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "./node_modules/core-js/internals/to-offset.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "./node_modules/core-js/internals/typed-array-from.js");
var forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var enforceInternalState = InternalStateModule.enforce;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var round = Math.round;
var RangeError = global.RangeError;
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var ArrayBufferPrototype = ArrayBuffer.prototype;
var DataView = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray = ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';

var fromList = function (C, list) {
  aTypedArrayConstructor(C);
  var index = 0;
  var length = list.length;
  var result = new C(length);
  while (length > index) result[index] = list[index++];
  return result;
};

var addGetter = function (it, key) {
  defineBuiltInAccessor(it, key, {
    configurable: true,
    get: function () {
      return getInternalState(this)[key];
    }
  });
};

var isArrayBuffer = function (it) {
  var klass;
  return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
};

var isTypedArrayIndex = function (target, key) {
  return isTypedArray(target)
    && !isSymbol(key)
    && key in target
    && isIntegralNumber(+key)
    && key >= 0;
};

var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
  key = toPropertyKey(key);
  return isTypedArrayIndex(target, key)
    ? createPropertyDescriptor(2, target[key])
    : nativeGetOwnPropertyDescriptor(target, key);
};

var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
  key = toPropertyKey(key);
  if (isTypedArrayIndex(target, key)
    && isObject(descriptor)
    && hasOwn(descriptor, 'value')
    && !hasOwn(descriptor, 'get')
    && !hasOwn(descriptor, 'set')
    // TODO: add validation descriptor w/o calling accessors
    && !descriptor.configurable
    && (!hasOwn(descriptor, 'writable') || descriptor.writable)
    && (!hasOwn(descriptor, 'enumerable') || descriptor.enumerable)
  ) {
    target[key] = descriptor.value;
    return target;
  } return nativeDefineProperty(target, key, descriptor);
};

if (DESCRIPTORS) {
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype, 'buffer');
    addGetter(TypedArrayPrototype, 'byteOffset');
    addGetter(TypedArrayPrototype, 'byteLength');
    addGetter(TypedArrayPrototype, 'length');
  }

  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });

  module.exports = function (TYPE, wrapper, CLAMPED) {
    var BYTES = TYPE.match(/\d+/)[0] / 8;
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};

    var getter = function (that, index) {
      var data = getInternalState(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };

    var setter = function (that, index, value) {
      var data = getInternalState(that);
      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
      data.view[SETTER](index * BYTES + data.byteOffset, value, true);
    };

    var addElement = function (that, index) {
      nativeDefineProperty(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance(that, TypedArrayConstructorPrototype);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset(offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return fromList(TypedArrayConstructor, data);
        } else {
          return call(typedArrayFrom, TypedArrayConstructor, data);
        }
        setInternalState(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
        anInstance(dummy, TypedArrayConstructorPrototype);
        return inheritIfRequired(function () {
          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
          if (isArrayBuffer(data)) return $length !== undefined
            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)
            : typedArrayOffset !== undefined
              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))
              : new NativeTypedArrayConstructor(data);
          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
          return call(typedArrayFrom, TypedArrayConstructor, data);
        }(), dummy, TypedArrayConstructor);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) {
          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
        }
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }

    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }

    enforceInternalState(TypedArrayConstructorPrototype).TypedArrayConstructor = TypedArrayConstructor;

    if (TYPED_ARRAY_TAG) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
    }

    var FORCED = TypedArrayConstructor != NativeTypedArrayConstructor;

    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

    $({ global: true, constructor: true, forced: FORCED, sham: !NATIVE_ARRAY_BUFFER_VIEWS }, exported);

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }

    setSpecies(CONSTRUCTOR_NAME);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/internals/typed-array-constructors-require-wrappers.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/core-js/internals/typed-array-constructors-require-wrappers.js ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-new -- required for testing */
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var NATIVE_ARRAY_BUFFER_VIEWS = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER_VIEWS);

var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;

module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
  Int8Array(1);
}) || !fails(function () {
  new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array();
  new Int8Array(null);
  new Int8Array(1.5);
  new Int8Array(iterable);
}, true) || fails(function () {
  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});


/***/ }),

/***/ "./node_modules/core-js/internals/typed-array-from-species-and-list.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/core-js/internals/typed-array-from-species-and-list.js ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayFromConstructorAndList = __webpack_require__(/*! ../internals/array-from-constructor-and-list */ "./node_modules/core-js/internals/array-from-constructor-and-list.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "./node_modules/core-js/internals/typed-array-species-constructor.js");

module.exports = function (instance, list) {
  return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);
};


/***/ }),

/***/ "./node_modules/core-js/internals/typed-array-from.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/typed-array-from.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/core-js/internals/a-constructor.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var isBigIntArray = __webpack_require__(/*! ../internals/is-big-int-array */ "./node_modules/core-js/internals/is-big-int-array.js");
var aTypedArrayConstructor = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js").aTypedArrayConstructor);
var toBigInt = __webpack_require__(/*! ../internals/to-big-int */ "./node_modules/core-js/internals/to-big-int.js");

module.exports = function from(source /* , mapfn, thisArg */) {
  var C = aConstructor(this);
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var i, length, result, thisIsBigIntArray, value, step, iterator, next;
  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    O = [];
    while (!(step = call(next, iterator)).done) {
      O.push(step.value);
    }
  }
  if (mapping && argumentsLength > 2) {
    mapfn = bind(mapfn, arguments[2]);
  }
  length = lengthOfArrayLike(O);
  result = new (aTypedArrayConstructor(C))(length);
  thisIsBigIntArray = isBigIntArray(result);
  for (i = 0; length > i; i++) {
    value = mapping ? mapfn(O[i], i) : O[i];
    // FF30- typed arrays doesn't properly convert objects to typed array values
    result[i] = thisIsBigIntArray ? toBigInt(value) : +value;
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/typed-array-species-constructor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/typed-array-species-constructor.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");

var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;

// a part of `TypedArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#typedarray-species-create
module.exports = function (originalArray) {
  return aTypedArrayConstructor(speciesConstructor(originalArray, getTypedArrayConstructor(originalArray)));
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/url-constructor-detection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/url-constructor-detection.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = !fails(function () {
  // eslint-disable-next-line unicorn/relative-url-style -- required for testing
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (IS_PURE && !url.toJSON)
    || (!searchParams.size && (IS_PURE || !DESCRIPTORS))
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://тест').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#б').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/validate-arguments-length.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/validate-arguments-length.js ***!
  \*********************************************************************/
/***/ (function(module) {

var $TypeError = TypeError;

module.exports = function (passed, required) {
  if (passed < required) throw $TypeError('Not enough arguments');
  return passed;
};


/***/ }),

/***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol-define.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol-define.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js/internals/path.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "./node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol-wrapped.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol-wrapped.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
      ? Symbol[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/internals/whitespaces.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/whitespaces.js ***!
  \*******************************************************/
/***/ (function(module) {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "./node_modules/core-js/modules/es.array-buffer.constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array-buffer.constructor.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var arrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "./node_modules/core-js/internals/array-buffer.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");

var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor
$({ global: true, constructor: true, forced: NativeArrayBuffer !== ArrayBuffer }, {
  ArrayBuffer: ArrayBuffer
});

setSpecies(ARRAY_BUFFER);


/***/ }),

/***/ "./node_modules/core-js/modules/es.array-buffer.slice.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array-buffer.slice.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "./node_modules/core-js/internals/array-buffer.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");

var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var DataViewPrototype = DataView.prototype;
var nativeArrayBufferSlice = uncurryThis(ArrayBuffer.prototype.slice);
var getUint8 = uncurryThis(DataViewPrototype.getUint8);
var setUint8 = uncurryThis(DataViewPrototype.setUint8);

var INCORRECT_SLICE = fails(function () {
  return !new ArrayBuffer(2).slice(1, undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice
$({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {
  slice: function slice(start, end) {
    if (nativeArrayBufferSlice && end === undefined) {
      return nativeArrayBufferSlice(anObject(this), start); // FF fix
    }
    var length = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
    var viewSource = new DataView(this);
    var viewTarget = new DataView(result);
    var index = 0;
    while (first < fin) {
      setUint8(viewTarget, index++, getUint8(viewSource, first++));
    } return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.concat.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.concat.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var doesNotExceedSafeInteger = __webpack_require__(/*! ../internals/does-not-exceed-safe-integer */ "./node_modules/core-js/internals/does-not-exceed-safe-integer.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = lengthOfArrayLike(E);
        doesNotExceedSafeInteger(n + len);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        doesNotExceedSafeInteger(n + 1);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.filter.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.filter.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $filter = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").filter);
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.for-each.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.for-each.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.includes.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.includes.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $includes = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").includes);
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

// FF99+ bug
var BROKEN_ON_SPARSE = fails(function () {
  // eslint-disable-next-line es/no-array-prototype-includes -- detection
  return !Array(1).includes();
});

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.index-of.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.index-of.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-indexof -- required for testing */
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var $indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var nativeIndexOf = uncurryThis([].indexOf);

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;
var FORCED = NEGATIVE_ZERO || !arrayMethodIsStrict('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: FORCED }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf(this, searchElement, fromIndex) || 0
      : $indexOf(this, searchElement, fromIndex);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.is-array.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

// `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray
$({ target: 'Array', stat: true }, {
  isArray: isArray
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject(index, false);
  if (kind == 'values') return createIterResultObject(target[index], false);
  return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.join.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.join.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var nativeJoin = uncurryThis([].join);

var ES3_STRINGS = IndexedObject != Object;
var FORCED = ES3_STRINGS || !arrayMethodIsStrict('join', ',');

// `Array.prototype.join` method
// https://tc39.es/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: FORCED }, {
  join: function join(separator) {
    return nativeJoin(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.last-index-of.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.last-index-of.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "./node_modules/core-js/internals/array-last-index-of.js");

// `Array.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
// eslint-disable-next-line es/no-array-prototype-lastindexof -- required for testing
$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {
  lastIndexOf: lastIndexOf
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.map.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.map.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $map = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").map);
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.reverse.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.reverse.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

var nativeReverse = uncurryThis([].reverse);
var test = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.es/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign -- dirty hack
    if (isArray(this)) this.length = this.length;
    return nativeReverse(this);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.slice.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.slice.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");
var nativeSlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var $Array = Array;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === $Array || Constructor === undefined) {
        return nativeSlice(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.some.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.some.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $some = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").some);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('some');

// `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.splice.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.splice.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var setArrayLength = __webpack_require__(/*! ../internals/array-set-length */ "./node_modules/core-js/internals/array-set-length.js");
var doesNotExceedSafeInteger = __webpack_require__(/*! ../internals/does-not-exceed-safe-integer */ "./node_modules/core-js/internals/does-not-exceed-safe-integer.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var deletePropertyOrThrow = __webpack_require__(/*! ../internals/delete-property-or-throw */ "./node_modules/core-js/internals/delete-property-or-throw.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

var max = Math.max;
var min = Math.min;

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
    }
    doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else deletePropertyOrThrow(O, to);
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow(O, k - 1);
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else deletePropertyOrThrow(O, to);
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    setArrayLength(O, len - actualDeleteCount + insertCount);
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.date.now.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es.date.now.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove from `core-js@4`
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var $Date = Date;
var thisTimeValue = uncurryThis($Date.prototype.getTime);

// `Date.now` method
// https://tc39.es/ecma262/#sec-date.now
$({ target: 'Date', stat: true }, {
  now: function now() {
    return thisTimeValue(new $Date());
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.date.to-string.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.date.to-string.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove from `core-js@4`
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

var DatePrototype = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var nativeDateToString = uncurryThis(DatePrototype[TO_STRING]);
var thisTimeValue = uncurryThis(DatePrototype.getTime);

// `Date.prototype.toString` method
// https://tc39.es/ecma262/#sec-date.prototype.tostring
if (String(new Date(NaN)) != INVALID_DATE) {
  defineBuiltIn(DatePrototype, TO_STRING, function toString() {
    var value = thisTimeValue(this);
    // eslint-disable-next-line no-self-compare -- NaN check
    return value === value ? nativeDateToString(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.function.bind.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.function.bind.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove from `core-js@4`
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "./node_modules/core-js/internals/function-bind.js");

// `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind
// eslint-disable-next-line es/no-function-prototype-bind -- detection
$({ target: 'Function', proto: true, forced: Function.bind !== bind }, {
  bind: bind
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.function.name.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.function.name.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var FUNCTION_NAME_EXISTS = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").EXISTS);
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");

var FunctionPrototype = Function.prototype;
var functionToString = uncurryThis(FunctionPrototype.toString);
var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
var regExpExec = uncurryThis(nameRE.exec);
var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
  defineBuiltInAccessor(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return regExpExec(nameRE, functionToString(this))[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.json.stringify.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.json.stringify.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var getReplacerFunction = __webpack_require__(/*! ../internals/get-json-replacer-function */ "./node_modules/core-js/internals/get-json-replacer-function.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

var $String = String;
var $stringify = getBuiltIn('JSON', 'stringify');
var exec = uncurryThis(/./.exec);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var replace = uncurryThis(''.replace);
var numberToString = uncurryThis(1.0.toString);

var tester = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;

var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {
  var symbol = getBuiltIn('Symbol')();
  // MS Edge converts symbol values to JSON as {}
  return $stringify([symbol]) != '[null]'
    // WebKit converts symbol values to JSON as null
    || $stringify({ a: symbol }) != '{}'
    // V8 throws on boxed symbols
    || $stringify(Object(symbol)) != '{}';
});

// https://github.com/tc39/proposal-well-formed-stringify
var ILL_FORMED_UNICODE = fails(function () {
  return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
    || $stringify('\uDEAD') !== '"\\udead"';
});

var stringifyWithSymbolsFix = function (it, replacer) {
  var args = arraySlice(arguments);
  var $replacer = getReplacerFunction(replacer);
  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined
  args[1] = function (key, value) {
    // some old implementations (like WebKit) could pass numbers as keys
    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);
    if (!isSymbol(value)) return value;
  };
  return apply($stringify, null, args);
};

var fixIllFormed = function (match, offset, string) {
  var prev = charAt(string, offset - 1);
  var next = charAt(string, offset + 1);
  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {
    return '\\u' + numberToString(charCodeAt(match, 0), 16);
  } return match;
};

if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice(arguments);
      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;
    }
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.map.constructor.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.map.constructor.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "./node_modules/core-js/internals/collection-strong.js");

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "./node_modules/core-js/modules/es.map.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/es.map.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/es.map.constructor */ "./node_modules/core-js/modules/es.map.constructor.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.number.constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.number.constructor.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js/internals/path.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "./node_modules/core-js/internals/this-number-value.js");
var trim = (__webpack_require__(/*! ../internals/string-trim */ "./node_modules/core-js/internals/string-trim.js").trim);

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var PureNumberNamespace = path[NUMBER];
var NumberPrototype = NativeNumber.prototype;
var TypeError = global.TypeError;
var stringSlice = uncurryThis(''.slice);
var charCodeAt = uncurryThis(''.charCodeAt);

// `ToNumeric` abstract operation
// https://tc39.es/ecma262/#sec-tonumeric
var toNumeric = function (value) {
  var primValue = toPrimitive(value, 'number');
  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
};

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = charCodeAt(it, 0);
    if (first === 43 || first === 45) {
      third = charCodeAt(it, 2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (charCodeAt(it, 1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = stringSlice(it, 2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = charCodeAt(digits, index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

var FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));

var calledWithNew = function (dummy) {
  // includes check on 1..constructor(foo) case
  return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); });
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
var NumberWrapper = function Number(value) {
  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
  return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;
};

NumberWrapper.prototype = NumberPrototype;
if (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;

$({ global: true, constructor: true, wrap: true, forced: FORCED }, {
  Number: NumberWrapper
});

// Use `internal/copy-constructor-properties` helper in `core-js@4`
var copyConstructorProperties = function (target, source) {
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

if (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);
if (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);


/***/ }),

/***/ "./node_modules/core-js/modules/es.number.is-integer.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.number.is-integer.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isIntegralNumber = __webpack_require__(/*! ../internals/is-integral-number */ "./node_modules/core-js/internals/is-integral-number.js");

// `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger
$({ target: 'Number', stat: true }, {
  isInteger: isIntegralNumber
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.define-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.define-property.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
// eslint-disable-next-line es/no-object-defineproperty -- safe
$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {
  defineProperty: defineProperty
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.entries.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.entries.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $entries = (__webpack_require__(/*! ../internals/object-to-array */ "./node_modules/core-js/internals/object-to-array.js").entries);

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
$({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.get-own-property-symbols.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.get-own-property-symbols.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });

// `Object.getOwnPropertySymbols` method
// https://tc39.es/ecma262/#sec-object.getownpropertysymbols
$({ target: 'Object', stat: true, forced: FORCED }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.keys.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var nativeKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.to-string.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  defineBuiltIn(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.all.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/core-js/internals/promise-statics-incorrect-iteration.js");

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
$({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.catch.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.catch.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
$({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR, real: true }, {
  'catch': function (onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if (!IS_PURE && isCallable(NativePromiseConstructor)) {
  var method = getBuiltIn('Promise').prototype['catch'];
  if (NativePromisePrototype['catch'] !== method) {
    defineBuiltIn(NativePromisePrototype, 'catch', method, { unsafe: true });
  }
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.constructor.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var task = (__webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set);
var microtask = __webpack_require__(/*! ../internals/microtask */ "./node_modules/core-js/internals/microtask.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "./node_modules/core-js/internals/host-report-errors.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/core-js/internals/queue.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var PromiseConstructorDetection = __webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");

var PROMISE = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR = PromiseConstructorDetection.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var setInternalState = InternalStateModule.set;
var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
var PromiseConstructor = NativePromiseConstructor;
var PromisePrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;

var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;

var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && isCallable(then = it.then) ? then : false;
};

var callReaction = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        call(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          call(then, value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromisePrototype);
    aCallable(executor);
    call(Internal, this);
    var state = getInternalPromiseState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };

  PromisePrototype = PromiseConstructor.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new Queue(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal.prototype = defineBuiltIn(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState(this);
    var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
    state.parent = true;
    reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable(onRejected) && onRejected;
    reaction.domain = IS_NODE ? process.domain : undefined;
    if (state.state == PENDING) state.reactions.add(reaction);
    else microtask(function () {
      callReaction(reaction, state);
    });
    return reaction.promise;
  });

  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalPromiseState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };

  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && isCallable(NativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!NATIVE_PROMISE_SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromisePrototype);
    }
  }
}

$({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove this module from `core-js@4` since it's split to modules listed below
__webpack_require__(/*! ../modules/es.promise.constructor */ "./node_modules/core-js/modules/es.promise.constructor.js");
__webpack_require__(/*! ../modules/es.promise.all */ "./node_modules/core-js/modules/es.promise.all.js");
__webpack_require__(/*! ../modules/es.promise.catch */ "./node_modules/core-js/modules/es.promise.catch.js");
__webpack_require__(/*! ../modules/es.promise.race */ "./node_modules/core-js/modules/es.promise.race.js");
__webpack_require__(/*! ../modules/es.promise.reject */ "./node_modules/core-js/modules/es.promise.reject.js");
__webpack_require__(/*! ../modules/es.promise.resolve */ "./node_modules/core-js/modules/es.promise.resolve.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.race.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.race.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/core-js/internals/promise-statics-incorrect-iteration.js");

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
$({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      iterate(iterable, function (promise) {
        call($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.reject.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.reject.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
$({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
  reject: function reject(r) {
    var capability = newPromiseCapabilityModule.f(this);
    call(capability.reject, undefined, r);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.resolve.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.resolve.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/core-js/internals/promise-resolve.js");

var PromiseConstructorWrapper = getBuiltIn('Promise');
var CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
$({ target: 'Promise', stat: true, forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR }, {
  resolve: function resolve(x) {
    return promiseResolve(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor : this, x);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.exec.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.exec.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var exec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.to-string.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var PROPER_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").PROPER);
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getRegExpFlags = __webpack_require__(/*! ../internals/regexp-get-flags */ "./node_modules/core-js/internals/regexp-get-flags.js");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var pattern = $toString(R.source);
    var flags = $toString(getRegExpFlags(R));
    return '/' + pattern + '/' + flags;
  }, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.includes.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.includes.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "./node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "./node_modules/core-js/internals/correct-is-regexp-logic.js");

var stringIndexOf = uncurryThis(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf(
      toString(requireObjectCoercible(this)),
      toString(notARegExp(searchString)),
      arguments.length > 1 ? arguments[1] : undefined
    );
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.iterator.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return createIterResultObject(undefined, true);
  point = charAt(string, index);
  state.index += point.length;
  return createIterResultObject(point, false);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.constructor.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var nativeObjectCreate = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternal = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "./node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineWellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol-define */ "./node_modules/core-js/internals/well-known-symbol-define.js");
var defineSymbolToPrimitive = __webpack_require__(/*! ../internals/symbol-define-to-primitive */ "./node_modules/core-js/internals/symbol-define-to-primitive.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';

var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);

var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
var TypeError = global.TypeError;
var QObject = global.QObject;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var push = uncurryThis([].push);

var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var WellKnownSymbolsStore = shared('wks');

// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);
  if (hasOwn(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPropertyKey(V);
  var enumerable = call(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]
    ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);
  });
  return result;
};

var $getOwnPropertySymbols = function (O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
      push(result, AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);
      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  SymbolPrototype = $Symbol[PROTOTYPE];

  defineBuiltIn(SymbolPrototype, 'toString', function toString() {
    return getInternalState(this).tag;
  });

  defineBuiltIn($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  definePropertiesModule.f = $defineProperties;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    defineBuiltInAccessor(SymbolPrototype, 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames
});

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
defineSymbolToPrimitive();

// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.description.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.description.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");

var NativeSymbol = global.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var thisSymbolValue = uncurryThis(SymbolPrototype.valueOf);
  var symbolDescriptiveString = uncurryThis(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace = uncurryThis(''.replace);
  var stringSlice = uncurryThis(''.slice);

  defineBuiltInAccessor(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.for.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.for.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var NATIVE_SYMBOL_REGISTRY = __webpack_require__(/*! ../internals/symbol-registry-detection */ "./node_modules/core-js/internals/symbol-registry-detection.js");

var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');

// `Symbol.for` method
// https://tc39.es/ecma262/#sec-symbol.for
$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
  'for': function (key) {
    var string = toString(key);
    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = getBuiltIn('Symbol')(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.iterator.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol-define */ "./node_modules/core-js/internals/well-known-symbol-define.js");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove this module from `core-js@4` since it's split to modules listed below
__webpack_require__(/*! ../modules/es.symbol.constructor */ "./node_modules/core-js/modules/es.symbol.constructor.js");
__webpack_require__(/*! ../modules/es.symbol.for */ "./node_modules/core-js/modules/es.symbol.for.js");
__webpack_require__(/*! ../modules/es.symbol.key-for */ "./node_modules/core-js/modules/es.symbol.key-for.js");
__webpack_require__(/*! ../modules/es.json.stringify */ "./node_modules/core-js/modules/es.json.stringify.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-symbols */ "./node_modules/core-js/modules/es.object.get-own-property-symbols.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.key-for.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.key-for.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var NATIVE_SYMBOL_REGISTRY = __webpack_require__(/*! ../internals/symbol-registry-detection */ "./node_modules/core-js/internals/symbol-registry-detection.js");

var SymbolToStringRegistry = shared('symbol-to-string-registry');

// `Symbol.keyFor` method
// https://tc39.es/ecma262/#sec-symbol.keyfor
$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');
    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.copy-within.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.copy-within.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $ArrayCopyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "./node_modules/core-js/internals/array-copy-within.js");

var u$ArrayCopyWithin = uncurryThis($ArrayCopyWithin);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
exportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {
  return u$ArrayCopyWithin(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.every.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.every.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $every = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").every);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.every` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
exportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {
  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.fill.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.fill.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $fill = __webpack_require__(/*! ../internals/array-fill */ "./node_modules/core-js/internals/array-fill.js");
var toBigInt = __webpack_require__(/*! ../internals/to-big-int */ "./node_modules/core-js/internals/to-big-int.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var slice = uncurryThis(''.slice);

// V8 ~ Chrome < 59, Safari < 14.1, FF < 55, Edge <=18
var CONVERSION_BUG = fails(function () {
  var count = 0;
  // eslint-disable-next-line es/no-typed-arrays -- safe
  new Int8Array(2).fill({ valueOf: function () { return count++; } });
  return count !== 1;
});

// `%TypedArray%.prototype.fill` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
exportTypedArrayMethod('fill', function fill(value /* , start, end */) {
  var length = arguments.length;
  aTypedArray(this);
  var actualValue = slice(classof(this), 0, 3) === 'Big' ? toBigInt(value) : +value;
  return call($fill, this, actualValue, length > 1 ? arguments[1] : undefined, length > 2 ? arguments[2] : undefined);
}, CONVERSION_BUG);


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.filter.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.filter.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $filter = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").filter);
var fromSpeciesAndList = __webpack_require__(/*! ../internals/typed-array-from-species-and-list */ "./node_modules/core-js/internals/typed-array-from-species-and-list.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.filter` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
exportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {
  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  return fromSpeciesAndList(this, list);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.find-index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.find-index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $findIndex = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").findIndex);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
exportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {
  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.find.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.find.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $find = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").find);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.find` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
exportTypedArrayMethod('find', function find(predicate /* , thisArg */) {
  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.for-each.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.for-each.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.forEach` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
exportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {
  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.includes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.includes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $includes = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").includes);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.includes` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
exportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {
  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.index-of.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.index-of.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
exportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {
  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.iterator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.iterator.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayIterators = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var Uint8Array = global.Uint8Array;
var arrayValues = uncurryThis(ArrayIterators.values);
var arrayKeys = uncurryThis(ArrayIterators.keys);
var arrayEntries = uncurryThis(ArrayIterators.entries);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var TypedArrayPrototype = Uint8Array && Uint8Array.prototype;

var GENERIC = !fails(function () {
  TypedArrayPrototype[ITERATOR].call([1]);
});

var ITERATOR_IS_VALUES = !!TypedArrayPrototype
  && TypedArrayPrototype.values
  && TypedArrayPrototype[ITERATOR] === TypedArrayPrototype.values
  && TypedArrayPrototype.values.name === 'values';

var typedArrayValues = function values() {
  return arrayValues(aTypedArray(this));
};

// `%TypedArray%.prototype.entries` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
exportTypedArrayMethod('entries', function entries() {
  return arrayEntries(aTypedArray(this));
}, GENERIC);
// `%TypedArray%.prototype.keys` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
exportTypedArrayMethod('keys', function keys() {
  return arrayKeys(aTypedArray(this));
}, GENERIC);
// `%TypedArray%.prototype.values` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
exportTypedArrayMethod('values', typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, { name: 'values' });
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
exportTypedArrayMethod(ITERATOR, typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, { name: 'values' });


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.join.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.join.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $join = uncurryThis([].join);

// `%TypedArray%.prototype.join` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
exportTypedArrayMethod('join', function join(separator) {
  return $join(aTypedArray(this), separator);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.last-index-of.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.last-index-of.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var $lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "./node_modules/core-js/internals/array-last-index-of.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
exportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
  var length = arguments.length;
  return apply($lastIndexOf, aTypedArray(this), length > 1 ? [searchElement, arguments[1]] : [searchElement]);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.map.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.map.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $map = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").map);
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "./node_modules/core-js/internals/typed-array-species-constructor.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.map` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
exportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {
  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
    return new (typedArraySpeciesConstructor(O))(length);
  });
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.reduce-right.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.reduce-right.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $reduceRight = (__webpack_require__(/*! ../internals/array-reduce */ "./node_modules/core-js/internals/array-reduce.js").right);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
exportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
  var length = arguments.length;
  return $reduceRight(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.reduce.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.reduce.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $reduce = (__webpack_require__(/*! ../internals/array-reduce */ "./node_modules/core-js/internals/array-reduce.js").left);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduce` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
exportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {
  var length = arguments.length;
  return $reduce(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.reverse.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.reverse.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var floor = Math.floor;

// `%TypedArray%.prototype.reverse` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
exportTypedArrayMethod('reverse', function reverse() {
  var that = this;
  var length = aTypedArray(that).length;
  var middle = floor(length / 2);
  var index = 0;
  var value;
  while (index < middle) {
    value = that[index];
    that[index++] = that[--length];
    that[length] = value;
  } return that;
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.set.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.set.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "./node_modules/core-js/internals/to-offset.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var RangeError = global.RangeError;
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var $set = Int8ArrayPrototype && Int8ArrayPrototype.set;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

var WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS = !fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  var array = new Uint8ClampedArray(2);
  call($set, array, { length: 1, 0: 3 }, 1);
  return array[1] !== 3;
});

// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other
var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {
  var array = new Int8Array(2);
  array.set(1);
  array.set('2', 1);
  return array[0] !== 0 || array[1] !== 2;
});

// `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
exportTypedArrayMethod('set', function set(arrayLike /* , offset */) {
  aTypedArray(this);
  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
  var src = toIndexedObject(arrayLike);
  if (WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);
  var length = this.length;
  var len = lengthOfArrayLike(src);
  var index = 0;
  if (len + offset > length) throw RangeError('Wrong length');
  while (index < len) this[offset + index] = src[index++];
}, !WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.slice.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.slice.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "./node_modules/core-js/internals/typed-array-species-constructor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

var FORCED = fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).slice();
});

// `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
exportTypedArrayMethod('slice', function slice(start, end) {
  var list = arraySlice(aTypedArray(this), start, end);
  var C = typedArraySpeciesConstructor(this);
  var index = 0;
  var length = list.length;
  var result = new C(length);
  while (length > index) result[index] = list[index++];
  return result;
}, FORCED);


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.some.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.some.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var $some = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").some);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.some` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
exportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {
  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.sort.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.sort.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var internalSort = __webpack_require__(/*! ../internals/array-sort */ "./node_modules/core-js/internals/array-sort.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var FF = __webpack_require__(/*! ../internals/engine-ff-version */ "./node_modules/core-js/internals/engine-ff-version.js");
var IE_OR_EDGE = __webpack_require__(/*! ../internals/engine-is-ie-or-edge */ "./node_modules/core-js/internals/engine-is-ie-or-edge.js");
var V8 = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "./node_modules/core-js/internals/engine-webkit-version.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var Uint16Array = global.Uint16Array;
var nativeSort = Uint16Array && uncurryThis(Uint16Array.prototype.sort);

// WebKit
var ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !(fails(function () {
  nativeSort(new Uint16Array(2), null);
}) && fails(function () {
  nativeSort(new Uint16Array(2), {});
}));

var STABLE_SORT = !!nativeSort && !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 74;
  if (FF) return FF < 67;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 602;

  var array = new Uint16Array(516);
  var expected = Array(516);
  var index, mod;

  for (index = 0; index < 516; index++) {
    mod = index % 4;
    array[index] = 515 - index;
    expected[index] = index - 2 * mod + 3;
  }

  nativeSort(array, function (a, b) {
    return (a / 4 | 0) - (b / 4 | 0);
  });

  for (index = 0; index < 516; index++) {
    if (array[index] !== expected[index]) return true;
  }
});

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (y !== y) return -1;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (x !== x) return 1;
    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
    return x > y;
  };
};

// `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
exportTypedArrayMethod('sort', function sort(comparefn) {
  if (comparefn !== undefined) aCallable(comparefn);
  if (STABLE_SORT) return nativeSort(this, comparefn);

  return internalSort(aTypedArray(this), getSortCompare(comparefn));
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.subarray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.subarray.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "./node_modules/core-js/internals/typed-array-species-constructor.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
exportTypedArrayMethod('subarray', function subarray(begin, end) {
  var O = aTypedArray(this);
  var length = O.length;
  var beginIndex = toAbsoluteIndex(begin, length);
  var C = typedArraySpeciesConstructor(O);
  return new C(
    O.buffer,
    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,
    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)
  );
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.to-locale-string.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.to-locale-string.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");

var Int8Array = global.Int8Array;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $toLocaleString = [].toLocaleString;

// iOS Safari 6.x fails here
var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {
  $toLocaleString.call(new Int8Array(1));
});

var FORCED = fails(function () {
  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
}) || !fails(function () {
  Int8Array.prototype.toLocaleString.call([1, 2]);
});

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
exportTypedArrayMethod('toLocaleString', function toLocaleString() {
  return apply(
    $toLocaleString,
    TO_LOCALE_STRING_BUG ? arraySlice(aTypedArray(this)) : aTypedArray(this),
    arraySlice(arguments)
  );
}, FORCED);


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.to-string.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.to-string.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var exportTypedArrayMethod = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "./node_modules/core-js/internals/array-buffer-view-core.js").exportTypedArrayMethod);
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var Uint8Array = global.Uint8Array;
var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
var arrayToString = [].toString;
var join = uncurryThis([].join);

if (fails(function () { arrayToString.call({}); })) {
  arrayToString = function toString() {
    return join(this);
  };
}

var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;

// `%TypedArray%.prototype.toString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);


/***/ }),

/***/ "./node_modules/core-js/modules/es.typed-array.uint8-array.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.typed-array.uint8-array.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "./node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.for-each.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

var handlePrototype = function (CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  if (DOMIterables[COLLECTION_NAME]) {
    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
  }
}

handlePrototype(DOMTokenListPrototype);


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');


/***/ }),

/***/ "./node_modules/core-js/modules/web.set-interval.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.set-interval.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var schedulersFix = __webpack_require__(/*! ../internals/schedulers-fix */ "./node_modules/core-js/internals/schedulers-fix.js");

var setInterval = schedulersFix(global.setInterval, true);

// Bun / IE9- setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
$({ global: true, bind: true, forced: global.setInterval !== setInterval }, {
  setInterval: setInterval
});


/***/ }),

/***/ "./node_modules/core-js/modules/web.set-timeout.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/web.set-timeout.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var schedulersFix = __webpack_require__(/*! ../internals/schedulers-fix */ "./node_modules/core-js/internals/schedulers-fix.js");

var setTimeout = schedulersFix(global.setTimeout, true);

// Bun / IE9- setTimeout additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
$({ global: true, bind: true, forced: global.setTimeout !== setTimeout }, {
  setTimeout: setTimeout
});


/***/ }),

/***/ "./node_modules/core-js/modules/web.timers.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/web.timers.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove this module from `core-js@4` since it's split to modules listed below
__webpack_require__(/*! ../modules/web.set-interval */ "./node_modules/core-js/modules/web.set-interval.js");
__webpack_require__(/*! ../modules/web.set-timeout */ "./node_modules/core-js/modules/web.set-timeout.js");


/***/ }),

/***/ "./node_modules/core-js/modules/web.url-search-params.constructor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/modules/web.url-search-params.constructor.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/url-constructor-detection */ "./node_modules/core-js/internals/url-constructor-detection.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/iterator-create-constructor */ "./node_modules/core-js/internals/iterator-create-constructor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var arraySort = __webpack_require__(/*! ../internals/array-sort */ "./node_modules/core-js/internals/array-sort.js");

var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Avoid NodeJS experimental warning
var safeGetBuiltIn = function (name) {
  if (!DESCRIPTORS) return global[name];
  var descriptor = getOwnPropertyDescriptor(global, name);
  return descriptor && descriptor.value;
};

var nativeFetch = safeGetBuiltIn('fetch');
var NativeRequest = safeGetBuiltIn('Request');
var Headers = safeGetBuiltIn('Headers');
var RequestPrototype = NativeRequest && NativeRequest.prototype;
var HeadersPrototype = Headers && Headers.prototype;
var RegExp = global.RegExp;
var TypeError = global.TypeError;
var decodeURIComponent = global.decodeURIComponent;
var encodeURIComponent = global.encodeURIComponent;
var charAt = uncurryThis(''.charAt);
var join = uncurryThis([].join);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var shift = uncurryThis([].shift);
var splice = uncurryThis([].splice);
var split = uncurryThis(''.split);
var stringSlice = uncurryThis(''.slice);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = replace(it, plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = replace(result, percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replacements = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replacements[match];
};

var serialize = function (it) {
  return replace(encodeURIComponent(it), find, replacer);
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
}, true);

var URLSearchParamsState = function (init) {
  this.entries = [];
  this.url = null;

  if (init !== undefined) {
    if (isObject(init)) this.parseObject(init);
    else this.parseQuery(typeof init == 'string' ? charAt(init, 0) === '?' ? stringSlice(init, 1) : init : $toString(init));
  }
};

URLSearchParamsState.prototype = {
  type: URL_SEARCH_PARAMS,
  bindURL: function (url) {
    this.url = url;
    this.update();
  },
  parseObject: function (object) {
    var iteratorMethod = getIteratorMethod(object);
    var iterator, next, step, entryIterator, entryNext, first, second;

    if (iteratorMethod) {
      iterator = getIterator(object, iteratorMethod);
      next = iterator.next;
      while (!(step = call(next, iterator)).done) {
        entryIterator = getIterator(anObject(step.value));
        entryNext = entryIterator.next;
        if (
          (first = call(entryNext, entryIterator)).done ||
          (second = call(entryNext, entryIterator)).done ||
          !call(entryNext, entryIterator).done
        ) throw TypeError('Expected sequence with length 2');
        push(this.entries, { key: $toString(first.value), value: $toString(second.value) });
      }
    } else for (var key in object) if (hasOwn(object, key)) {
      push(this.entries, { key: key, value: $toString(object[key]) });
    }
  },
  parseQuery: function (query) {
    if (query) {
      var attributes = split(query, '&');
      var index = 0;
      var attribute, entry;
      while (index < attributes.length) {
        attribute = attributes[index++];
        if (attribute.length) {
          entry = split(attribute, '=');
          push(this.entries, {
            key: deserialize(shift(entry)),
            value: deserialize(join(entry, '='))
          });
        }
      }
    }
  },
  serialize: function () {
    var entries = this.entries;
    var result = [];
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      push(result, serialize(entry.key) + '=' + serialize(entry.value));
    } return join(result, '&');
  },
  update: function () {
    this.entries.length = 0;
    this.parseQuery(this.url.query);
  },
  updateURL: function () {
    if (this.url) this.url.update();
  }
};

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsPrototype);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  var state = setInternalState(this, new URLSearchParamsState(init));
  if (!DESCRIPTORS) this.length = state.entries.length;
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

defineBuiltIns(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    push(state.entries, { key: $toString(name), value: $toString(value) });
    if (!DESCRIPTORS) this.length++;
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = $toString(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) splice(entries, index, 1);
      else index++;
    }
    if (!DESCRIPTORS) this.length = entries.length;
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) push(result, entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = $toString(name);
    var val = $toString(value);
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) splice(entries, index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) push(entries, { key: key, value: val });
    if (!DESCRIPTORS) this.length = entries.length;
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    arraySort(state.entries, function (a, b) {
      return a.key > b.key ? 1 : -1;
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
defineBuiltIn(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries, { name: 'entries' });

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
defineBuiltIn(URLSearchParamsPrototype, 'toString', function toString() {
  return getInternalParamsState(this).serialize();
}, { enumerable: true });

// `URLSearchParams.prototype.size` getter
// https://github.com/whatwg/url/pull/734
if (DESCRIPTORS) defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {
  get: function size() {
    return getInternalParamsState(this).entries.length;
  },
  configurable: true,
  enumerable: true
});

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

$({ global: true, constructor: true, forced: !USE_NATIVE_URL }, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`
if (!USE_NATIVE_URL && isCallable(Headers)) {
  var headersHas = uncurryThis(HeadersPrototype.has);
  var headersSet = uncurryThis(HeadersPrototype.set);

  var wrapRequestOptions = function (init) {
    if (isObject(init)) {
      var body = init.body;
      var headers;
      if (classof(body) === URL_SEARCH_PARAMS) {
        headers = init.headers ? new Headers(init.headers) : new Headers();
        if (!headersHas(headers, 'content-type')) {
          headersSet(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
        return create(init, {
          body: createPropertyDescriptor(0, $toString(body)),
          headers: createPropertyDescriptor(0, headers)
        });
      }
    } return init;
  };

  if (isCallable(nativeFetch)) {
    $({ global: true, enumerable: true, dontCallGetSet: true, forced: true }, {
      fetch: function fetch(input /* , init */) {
        return nativeFetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
      }
    });
  }

  if (isCallable(NativeRequest)) {
    var RequestConstructor = function Request(input /* , init */) {
      anInstance(this, RequestPrototype);
      return new NativeRequest(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
    };

    RequestPrototype.constructor = RequestConstructor;
    RequestConstructor.prototype = RequestPrototype;

    $({ global: true, constructor: true, dontCallGetSet: true, forced: true }, {
      Request: RequestConstructor
    });
  }
}

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};


/***/ }),

/***/ "./node_modules/core-js/modules/web.url-search-params.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/web.url-search-params.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/web.url-search-params.constructor */ "./node_modules/core-js/modules/web.url-search-params.constructor.js");


/***/ }),

/***/ "./node_modules/core-js/modules/web.url.constructor.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/web.url.constructor.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/url-constructor-detection */ "./node_modules/core-js/internals/url-constructor-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");
var arrayFrom = __webpack_require__(/*! ../internals/array-from */ "./node_modules/core-js/internals/array-from.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");
var codeAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").codeAt);
var toASCII = __webpack_require__(/*! ../internals/string-punycode-to-ascii */ "./node_modules/core-js/internals/string-punycode-to-ascii.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");
var URLSearchParamsModule = __webpack_require__(/*! ../modules/web.url-search-params.constructor */ "./node_modules/core-js/modules/web.url-search-params.constructor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;

var NativeURL = global.URL;
var TypeError = global.TypeError;
var parseInt = global.parseInt;
var floor = Math.floor;
var pow = Math.pow;
var charAt = uncurryThis(''.charAt);
var exec = uncurryThis(/./.exec);
var join = uncurryThis([].join);
var numberToString = uncurryThis(1.0.toString);
var pop = uncurryThis([].pop);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var shift = uncurryThis([].shift);
var split = uncurryThis(''.split);
var stringSlice = uncurryThis(''.slice);
var toLowerCase = uncurryThis(''.toLowerCase);
var unshift = uncurryThis([].unshift);

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[a-z]/i;
// eslint-disable-next-line regexp/no-obscure-range -- safe
var ALPHANUMERIC = /[\d+-.a-z]/i;
var DIGIT = /\d/;
var HEX_START = /^0x/i;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\da-f]+$/i;
/* eslint-disable regexp/no-control-character -- safe */
var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
var LEADING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+/;
var TRAILING_C0_CONTROL_OR_SPACE = /(^|[^\u0000-\u0020])[\u0000-\u0020]+$/;
var TAB_AND_NEW_LINE = /[\t\n\r]/g;
/* eslint-enable regexp/no-control-character -- safe */
var EOF;

// https://url.spec.whatwg.org/#ipv4-number-parser
var parseIPv4 = function (input) {
  var parts = split(input, '.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.length--;
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && charAt(part, 0) == '0') {
      radix = exec(HEX_START, part) ? 16 : 8;
      part = stringSlice(part, radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;
      number = parseInt(part, radix);
    }
    push(numbers, number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = pop(numbers);
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// https://url.spec.whatwg.org/#concept-ipv6-parser
// eslint-disable-next-line max-statements -- TODO
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var chr = function () {
    return charAt(input, pointer);
  };

  if (chr() == ':') {
    if (charAt(input, 1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (chr()) {
    if (pieceIndex == 8) return;
    if (chr() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && exec(HEX, chr())) {
      value = value * 16 + parseInt(chr(), 16);
      pointer++;
      length++;
    }
    if (chr() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (chr()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (chr() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!exec(DIGIT, chr())) return;
        while (exec(DIGIT, chr())) {
          number = parseInt(chr(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (chr() == ':') {
      pointer++;
      if (!chr()) return;
    } else if (chr()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

// https://url.spec.whatwg.org/#host-serializing
var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      unshift(result, host % 256);
      host = floor(host / 256);
    } return join(result, '.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += numberToString(host[index], 16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (chr, set) {
  var code = codeAt(chr, 0);
  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);
};

// https://url.spec.whatwg.org/#special-scheme
var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

// https://url.spec.whatwg.org/#windows-drive-letter
var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && exec(ALPHA, charAt(string, 0))
    && ((second = charAt(string, 1)) == ':' || (!normalized && second == '|'));
};

// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter
var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (
    string.length == 2 ||
    ((third = charAt(string, 2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

// https://url.spec.whatwg.org/#single-dot-path-segment
var isSingleDot = function (segment) {
  return segment === '.' || toLowerCase(segment) === '%2e';
};

// https://url.spec.whatwg.org/#double-dot-path-segment
var isDoubleDot = function (segment) {
  segment = toLowerCase(segment);
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

var URLState = function (url, isBase, base) {
  var urlString = $toString(url);
  var baseState, failure, searchParams;
  if (isBase) {
    failure = this.parse(urlString);
    if (failure) throw TypeError(failure);
    this.searchParams = null;
  } else {
    if (base !== undefined) baseState = new URLState(base, true);
    failure = this.parse(urlString, null, baseState);
    if (failure) throw TypeError(failure);
    searchParams = getInternalSearchParamsState(new URLSearchParams());
    searchParams.bindURL(this);
    this.searchParams = searchParams;
  }
};

URLState.prototype = {
  type: 'URL',
  // https://url.spec.whatwg.org/#url-parsing
  // eslint-disable-next-line max-statements -- TODO
  parse: function (input, stateOverride, base) {
    var url = this;
    var state = stateOverride || SCHEME_START;
    var pointer = 0;
    var buffer = '';
    var seenAt = false;
    var seenBracket = false;
    var seenPasswordToken = false;
    var codePoints, chr, bufferCodePoints, failure;

    input = $toString(input);

    if (!stateOverride) {
      url.scheme = '';
      url.username = '';
      url.password = '';
      url.host = null;
      url.port = null;
      url.path = [];
      url.query = null;
      url.fragment = null;
      url.cannotBeABaseURL = false;
      input = replace(input, LEADING_C0_CONTROL_OR_SPACE, '');
      input = replace(input, TRAILING_C0_CONTROL_OR_SPACE, '$1');
    }

    input = replace(input, TAB_AND_NEW_LINE, '');

    codePoints = arrayFrom(input);

    while (pointer <= codePoints.length) {
      chr = codePoints[pointer];
      switch (state) {
        case SCHEME_START:
          if (chr && exec(ALPHA, chr)) {
            buffer += toLowerCase(chr);
            state = SCHEME;
          } else if (!stateOverride) {
            state = NO_SCHEME;
            continue;
          } else return INVALID_SCHEME;
          break;

        case SCHEME:
          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {
            buffer += toLowerCase(chr);
          } else if (chr == ':') {
            if (stateOverride && (
              (url.isSpecial() != hasOwn(specialSchemes, buffer)) ||
              (buffer == 'file' && (url.includesCredentials() || url.port !== null)) ||
              (url.scheme == 'file' && !url.host)
            )) return;
            url.scheme = buffer;
            if (stateOverride) {
              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;
              return;
            }
            buffer = '';
            if (url.scheme == 'file') {
              state = FILE;
            } else if (url.isSpecial() && base && base.scheme == url.scheme) {
              state = SPECIAL_RELATIVE_OR_AUTHORITY;
            } else if (url.isSpecial()) {
              state = SPECIAL_AUTHORITY_SLASHES;
            } else if (codePoints[pointer + 1] == '/') {
              state = PATH_OR_AUTHORITY;
              pointer++;
            } else {
              url.cannotBeABaseURL = true;
              push(url.path, '');
              state = CANNOT_BE_A_BASE_URL_PATH;
            }
          } else if (!stateOverride) {
            buffer = '';
            state = NO_SCHEME;
            pointer = 0;
            continue;
          } else return INVALID_SCHEME;
          break;

        case NO_SCHEME:
          if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;
          if (base.cannotBeABaseURL && chr == '#') {
            url.scheme = base.scheme;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            url.cannotBeABaseURL = true;
            state = FRAGMENT;
            break;
          }
          state = base.scheme == 'file' ? FILE : RELATIVE;
          continue;

        case SPECIAL_RELATIVE_OR_AUTHORITY:
          if (chr == '/' && codePoints[pointer + 1] == '/') {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
            pointer++;
          } else {
            state = RELATIVE;
            continue;
          } break;

        case PATH_OR_AUTHORITY:
          if (chr == '/') {
            state = AUTHORITY;
            break;
          } else {
            state = PATH;
            continue;
          }

        case RELATIVE:
          url.scheme = base.scheme;
          if (chr == EOF) {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
          } else if (chr == '/' || (chr == '\\' && url.isSpecial())) {
            state = RELATIVE_SLASH;
          } else if (chr == '?') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.path.length--;
            state = PATH;
            continue;
          } break;

        case RELATIVE_SLASH:
          if (url.isSpecial() && (chr == '/' || chr == '\\')) {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          } else if (chr == '/') {
            state = AUTHORITY;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            state = PATH;
            continue;
          } break;

        case SPECIAL_AUTHORITY_SLASHES:
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;
          pointer++;
          break;

        case SPECIAL_AUTHORITY_IGNORE_SLASHES:
          if (chr != '/' && chr != '\\') {
            state = AUTHORITY;
            continue;
          } break;

        case AUTHORITY:
          if (chr == '@') {
            if (seenAt) buffer = '%40' + buffer;
            seenAt = true;
            bufferCodePoints = arrayFrom(buffer);
            for (var i = 0; i < bufferCodePoints.length; i++) {
              var codePoint = bufferCodePoints[i];
              if (codePoint == ':' && !seenPasswordToken) {
                seenPasswordToken = true;
                continue;
              }
              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
              if (seenPasswordToken) url.password += encodedCodePoints;
              else url.username += encodedCodePoints;
            }
            buffer = '';
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial())
          ) {
            if (seenAt && buffer == '') return INVALID_AUTHORITY;
            pointer -= arrayFrom(buffer).length + 1;
            buffer = '';
            state = HOST;
          } else buffer += chr;
          break;

        case HOST:
        case HOSTNAME:
          if (stateOverride && url.scheme == 'file') {
            state = FILE_HOST;
            continue;
          } else if (chr == ':' && !seenBracket) {
            if (buffer == '') return INVALID_HOST;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PORT;
            if (stateOverride == HOSTNAME) return;
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial())
          ) {
            if (url.isSpecial() && buffer == '') return INVALID_HOST;
            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PATH_START;
            if (stateOverride) return;
            continue;
          } else {
            if (chr == '[') seenBracket = true;
            else if (chr == ']') seenBracket = false;
            buffer += chr;
          } break;

        case PORT:
          if (exec(DIGIT, chr)) {
            buffer += chr;
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial()) ||
            stateOverride
          ) {
            if (buffer != '') {
              var port = parseInt(buffer, 10);
              if (port > 0xFFFF) return INVALID_PORT;
              url.port = (url.isSpecial() && port === specialSchemes[url.scheme]) ? null : port;
              buffer = '';
            }
            if (stateOverride) return;
            state = PATH_START;
            continue;
          } else return INVALID_PORT;
          break;

        case FILE:
          url.scheme = 'file';
          if (chr == '/' || chr == '\\') state = FILE_SLASH;
          else if (base && base.scheme == 'file') {
            if (chr == EOF) {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = base.query;
            } else if (chr == '?') {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = base.query;
              url.fragment = '';
              state = FRAGMENT;
            } else {
              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
                url.host = base.host;
                url.path = arraySlice(base.path);
                url.shortenPath();
              }
              state = PATH;
              continue;
            }
          } else {
            state = PATH;
            continue;
          } break;

        case FILE_SLASH:
          if (chr == '/' || chr == '\\') {
            state = FILE_HOST;
            break;
          }
          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);
            else url.host = base.host;
          }
          state = PATH;
          continue;

        case FILE_HOST:
          if (chr == EOF || chr == '/' || chr == '\\' || chr == '?' || chr == '#') {
            if (!stateOverride && isWindowsDriveLetter(buffer)) {
              state = PATH;
            } else if (buffer == '') {
              url.host = '';
              if (stateOverride) return;
              state = PATH_START;
            } else {
              failure = url.parseHost(buffer);
              if (failure) return failure;
              if (url.host == 'localhost') url.host = '';
              if (stateOverride) return;
              buffer = '';
              state = PATH_START;
            } continue;
          } else buffer += chr;
          break;

        case PATH_START:
          if (url.isSpecial()) {
            state = PATH;
            if (chr != '/' && chr != '\\') continue;
          } else if (!stateOverride && chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            state = PATH;
            if (chr != '/') continue;
          } break;

        case PATH:
          if (
            chr == EOF || chr == '/' ||
            (chr == '\\' && url.isSpecial()) ||
            (!stateOverride && (chr == '?' || chr == '#'))
          ) {
            if (isDoubleDot(buffer)) {
              url.shortenPath();
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push(url.path, '');
              }
            } else if (isSingleDot(buffer)) {
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push(url.path, '');
              }
            } else {
              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
                if (url.host) url.host = '';
                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter
              }
              push(url.path, buffer);
            }
            buffer = '';
            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {
              while (url.path.length > 1 && url.path[0] === '') {
                shift(url.path);
              }
            }
            if (chr == '?') {
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.fragment = '';
              state = FRAGMENT;
            }
          } else {
            buffer += percentEncode(chr, pathPercentEncodeSet);
          } break;

        case CANNOT_BE_A_BASE_URL_PATH:
          if (chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
          } break;

        case QUERY:
          if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            if (chr == "'" && url.isSpecial()) url.query += '%27';
            else if (chr == '#') url.query += '%23';
            else url.query += percentEncode(chr, C0ControlPercentEncodeSet);
          } break;

        case FRAGMENT:
          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
          break;
      }

      pointer++;
    }
  },
  // https://url.spec.whatwg.org/#host-parsing
  parseHost: function (input) {
    var result, codePoints, index;
    if (charAt(input, 0) == '[') {
      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;
      result = parseIPv6(stringSlice(input, 1, -1));
      if (!result) return INVALID_HOST;
      this.host = result;
    // opaque host
    } else if (!this.isSpecial()) {
      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;
      result = '';
      codePoints = arrayFrom(input);
      for (index = 0; index < codePoints.length; index++) {
        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
      }
      this.host = result;
    } else {
      input = toASCII(input);
      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;
      result = parseIPv4(input);
      if (result === null) return INVALID_HOST;
      this.host = result;
    }
  },
  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  cannotHaveUsernamePasswordPort: function () {
    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';
  },
  // https://url.spec.whatwg.org/#include-credentials
  includesCredentials: function () {
    return this.username != '' || this.password != '';
  },
  // https://url.spec.whatwg.org/#is-special
  isSpecial: function () {
    return hasOwn(specialSchemes, this.scheme);
  },
  // https://url.spec.whatwg.org/#shorten-a-urls-path
  shortenPath: function () {
    var path = this.path;
    var pathSize = path.length;
    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
      path.length--;
    }
  },
  // https://url.spec.whatwg.org/#concept-url-serializer
  serialize: function () {
    var url = this;
    var scheme = url.scheme;
    var username = url.username;
    var password = url.password;
    var host = url.host;
    var port = url.port;
    var path = url.path;
    var query = url.query;
    var fragment = url.fragment;
    var output = scheme + ':';
    if (host !== null) {
      output += '//';
      if (url.includesCredentials()) {
        output += username + (password ? ':' + password : '') + '@';
      }
      output += serializeHost(host);
      if (port !== null) output += ':' + port;
    } else if (scheme == 'file') output += '//';
    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
    if (query !== null) output += '?' + query;
    if (fragment !== null) output += '#' + fragment;
    return output;
  },
  // https://url.spec.whatwg.org/#dom-url-href
  setHref: function (href) {
    var failure = this.parse(href);
    if (failure) throw TypeError(failure);
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-origin
  getOrigin: function () {
    var scheme = this.scheme;
    var port = this.port;
    if (scheme == 'blob') try {
      return new URLConstructor(scheme.path[0]).origin;
    } catch (error) {
      return 'null';
    }
    if (scheme == 'file' || !this.isSpecial()) return 'null';
    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');
  },
  // https://url.spec.whatwg.org/#dom-url-protocol
  getProtocol: function () {
    return this.scheme + ':';
  },
  setProtocol: function (protocol) {
    this.parse($toString(protocol) + ':', SCHEME_START);
  },
  // https://url.spec.whatwg.org/#dom-url-username
  getUsername: function () {
    return this.username;
  },
  setUsername: function (username) {
    var codePoints = arrayFrom($toString(username));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.username = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-password
  getPassword: function () {
    return this.password;
  },
  setPassword: function (password) {
    var codePoints = arrayFrom($toString(password));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.password = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-host
  getHost: function () {
    var host = this.host;
    var port = this.port;
    return host === null ? ''
      : port === null ? serializeHost(host)
      : serializeHost(host) + ':' + port;
  },
  setHost: function (host) {
    if (this.cannotBeABaseURL) return;
    this.parse(host, HOST);
  },
  // https://url.spec.whatwg.org/#dom-url-hostname
  getHostname: function () {
    var host = this.host;
    return host === null ? '' : serializeHost(host);
  },
  setHostname: function (hostname) {
    if (this.cannotBeABaseURL) return;
    this.parse(hostname, HOSTNAME);
  },
  // https://url.spec.whatwg.org/#dom-url-port
  getPort: function () {
    var port = this.port;
    return port === null ? '' : $toString(port);
  },
  setPort: function (port) {
    if (this.cannotHaveUsernamePasswordPort()) return;
    port = $toString(port);
    if (port == '') this.port = null;
    else this.parse(port, PORT);
  },
  // https://url.spec.whatwg.org/#dom-url-pathname
  getPathname: function () {
    var path = this.path;
    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
  },
  setPathname: function (pathname) {
    if (this.cannotBeABaseURL) return;
    this.path = [];
    this.parse(pathname, PATH_START);
  },
  // https://url.spec.whatwg.org/#dom-url-search
  getSearch: function () {
    var query = this.query;
    return query ? '?' + query : '';
  },
  setSearch: function (search) {
    search = $toString(search);
    if (search == '') {
      this.query = null;
    } else {
      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);
      this.query = '';
      this.parse(search, QUERY);
    }
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-searchparams
  getSearchParams: function () {
    return this.searchParams.facade;
  },
  // https://url.spec.whatwg.org/#dom-url-hash
  getHash: function () {
    var fragment = this.fragment;
    return fragment ? '#' + fragment : '';
  },
  setHash: function (hash) {
    hash = $toString(hash);
    if (hash == '') {
      this.fragment = null;
      return;
    }
    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);
    this.fragment = '';
    this.parse(hash, FRAGMENT);
  },
  update: function () {
    this.query = this.searchParams.serialize() || null;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLPrototype);
  var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : undefined;
  var state = setInternalState(that, new URLState(url, false, base));
  if (!DESCRIPTORS) {
    that.href = state.serialize();
    that.origin = state.getOrigin();
    that.protocol = state.getProtocol();
    that.username = state.getUsername();
    that.password = state.getPassword();
    that.host = state.getHost();
    that.hostname = state.getHostname();
    that.port = state.getPort();
    that.pathname = state.getPathname();
    that.search = state.getSearch();
    that.searchParams = state.getSearchParams();
    that.hash = state.getHash();
  }
};

var URLPrototype = URLConstructor.prototype;

var accessorDescriptor = function (getter, setter) {
  return {
    get: function () {
      return getInternalURLState(this)[getter]();
    },
    set: setter && function (value) {
      return getInternalURLState(this)[setter](value);
    },
    configurable: true,
    enumerable: true
  };
};

if (DESCRIPTORS) {
  // `URL.prototype.href` accessors pair
  // https://url.spec.whatwg.org/#dom-url-href
  defineBuiltInAccessor(URLPrototype, 'href', accessorDescriptor('serialize', 'setHref'));
  // `URL.prototype.origin` getter
  // https://url.spec.whatwg.org/#dom-url-origin
  defineBuiltInAccessor(URLPrototype, 'origin', accessorDescriptor('getOrigin'));
  // `URL.prototype.protocol` accessors pair
  // https://url.spec.whatwg.org/#dom-url-protocol
  defineBuiltInAccessor(URLPrototype, 'protocol', accessorDescriptor('getProtocol', 'setProtocol'));
  // `URL.prototype.username` accessors pair
  // https://url.spec.whatwg.org/#dom-url-username
  defineBuiltInAccessor(URLPrototype, 'username', accessorDescriptor('getUsername', 'setUsername'));
  // `URL.prototype.password` accessors pair
  // https://url.spec.whatwg.org/#dom-url-password
  defineBuiltInAccessor(URLPrototype, 'password', accessorDescriptor('getPassword', 'setPassword'));
  // `URL.prototype.host` accessors pair
  // https://url.spec.whatwg.org/#dom-url-host
  defineBuiltInAccessor(URLPrototype, 'host', accessorDescriptor('getHost', 'setHost'));
  // `URL.prototype.hostname` accessors pair
  // https://url.spec.whatwg.org/#dom-url-hostname
  defineBuiltInAccessor(URLPrototype, 'hostname', accessorDescriptor('getHostname', 'setHostname'));
  // `URL.prototype.port` accessors pair
  // https://url.spec.whatwg.org/#dom-url-port
  defineBuiltInAccessor(URLPrototype, 'port', accessorDescriptor('getPort', 'setPort'));
  // `URL.prototype.pathname` accessors pair
  // https://url.spec.whatwg.org/#dom-url-pathname
  defineBuiltInAccessor(URLPrototype, 'pathname', accessorDescriptor('getPathname', 'setPathname'));
  // `URL.prototype.search` accessors pair
  // https://url.spec.whatwg.org/#dom-url-search
  defineBuiltInAccessor(URLPrototype, 'search', accessorDescriptor('getSearch', 'setSearch'));
  // `URL.prototype.searchParams` getter
  // https://url.spec.whatwg.org/#dom-url-searchparams
  defineBuiltInAccessor(URLPrototype, 'searchParams', accessorDescriptor('getSearchParams'));
  // `URL.prototype.hash` accessors pair
  // https://url.spec.whatwg.org/#dom-url-hash
  defineBuiltInAccessor(URLPrototype, 'hash', accessorDescriptor('getHash', 'setHash'));
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
defineBuiltIn(URLPrototype, 'toJSON', function toJSON() {
  return getInternalURLState(this).serialize();
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
defineBuiltIn(URLPrototype, 'toString', function toString() {
  return getInternalURLState(this).serialize();
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  if (nativeCreateObjectURL) defineBuiltIn(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL));
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  if (nativeRevokeObjectURL) defineBuiltIn(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));
}

setToStringTag(URLConstructor, 'URL');

$({ global: true, constructor: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
  URL: URLConstructor
});


/***/ }),

/***/ "./node_modules/core-js/modules/web.url.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/web.url.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/web.url.constructor */ "./node_modules/core-js/modules/web.url.constructor.js");


/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ (function(module) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ "./node_modules/long/src/long.js":
/*!***************************************!*\
  !*** ./node_modules/long/src/long.js ***!
  \***************************************/
/***/ (function(module) {

module.exports = Long;

/**
 * wasm optimizations, to do native i64 multiplication and divide
 */
var wasm = null;

try {
  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11
  ])), {}).exports;
} catch (e) {
  // no wasm support :(
}

/**
 * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
 *  See the from* functions below for more convenient ways of constructing Longs.
 * @exports Long
 * @class A Long class for representing a 64 bit two's-complement integer value.
 * @param {number} low The low (signed) 32 bits of the long
 * @param {number} high The high (signed) 32 bits of the long
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @constructor
 */
function Long(low, high, unsigned) {

    /**
     * The low 32 bits as a signed value.
     * @type {number}
     */
    this.low = low | 0;

    /**
     * The high 32 bits as a signed value.
     * @type {number}
     */
    this.high = high | 0;

    /**
     * Whether unsigned or not.
     * @type {boolean}
     */
    this.unsigned = !!unsigned;
}

// The internal representation of a long is the two given signed, 32-bit values.
// We use 32-bit pieces because these are the size of integers on which
// Javascript performs bit-operations.  For operations like addition and
// multiplication, we split each number into 16 bit pieces, which can easily be
// multiplied within Javascript's floating-point representation without overflow
// or change in sign.
//
// In the algorithms below, we frequently reduce the negative case to the
// positive case by negating the input(s) and then post-processing the result.
// Note that we must ALWAYS check specially whether those values are MIN_VALUE
// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
// a positive number, it overflows back into a negative).  Not handling this
// case would often result in infinite recursion.
//
// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
// methods on which they depend.

/**
 * An indicator used to reliably determine if an object is a Long or not.
 * @type {boolean}
 * @const
 * @private
 */
Long.prototype.__isLong__;

Object.defineProperty(Long.prototype, "__isLong__", { value: true });

/**
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 * @inner
 */
function isLong(obj) {
    return (obj && obj["__isLong__"]) === true;
}

/**
 * Tests if the specified object is a Long.
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 */
Long.isLong = isLong;

/**
 * A cache of the Long representations of small integer values.
 * @type {!Object}
 * @inner
 */
var INT_CACHE = {};

/**
 * A cache of the Long representations of small unsigned integer values.
 * @type {!Object}
 * @inner
 */
var UINT_CACHE = {};

/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromInt(value, unsigned) {
    var obj, cachedObj, cache;
    if (unsigned) {
        value >>>= 0;
        if (cache = (0 <= value && value < 256)) {
            cachedObj = UINT_CACHE[value];
            if (cachedObj)
                return cachedObj;
        }
        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
        if (cache)
            UINT_CACHE[value] = obj;
        return obj;
    } else {
        value |= 0;
        if (cache = (-128 <= value && value < 128)) {
            cachedObj = INT_CACHE[value];
            if (cachedObj)
                return cachedObj;
        }
        obj = fromBits(value, value < 0 ? -1 : 0, false);
        if (cache)
            INT_CACHE[value] = obj;
        return obj;
    }
}

/**
 * Returns a Long representing the given 32 bit integer value.
 * @function
 * @param {number} value The 32 bit integer in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromInt = fromInt;

/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromNumber(value, unsigned) {
    if (isNaN(value))
        return unsigned ? UZERO : ZERO;
    if (unsigned) {
        if (value < 0)
            return UZERO;
        if (value >= TWO_PWR_64_DBL)
            return MAX_UNSIGNED_VALUE;
    } else {
        if (value <= -TWO_PWR_63_DBL)
            return MIN_VALUE;
        if (value + 1 >= TWO_PWR_63_DBL)
            return MAX_VALUE;
    }
    if (value < 0)
        return fromNumber(-value, unsigned).neg();
    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);
}

/**
 * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
 * @function
 * @param {number} value The number in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromNumber = fromNumber;

/**
 * @param {number} lowBits
 * @param {number} highBits
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromBits(lowBits, highBits, unsigned) {
    return new Long(lowBits, highBits, unsigned);
}

/**
 * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
 *  assumed to use 32 bits.
 * @function
 * @param {number} lowBits The low 32 bits
 * @param {number} highBits The high 32 bits
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromBits = fromBits;

/**
 * @function
 * @param {number} base
 * @param {number} exponent
 * @returns {number}
 * @inner
 */
var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)

/**
 * @param {string} str
 * @param {(boolean|number)=} unsigned
 * @param {number=} radix
 * @returns {!Long}
 * @inner
 */
function fromString(str, unsigned, radix) {
    if (str.length === 0)
        throw Error('empty string');
    if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
        return ZERO;
    if (typeof unsigned === 'number') {
        // For goog.math.long compatibility
        radix = unsigned,
        unsigned = false;
    } else {
        unsigned = !! unsigned;
    }
    radix = radix || 10;
    if (radix < 2 || 36 < radix)
        throw RangeError('radix');

    var p;
    if ((p = str.indexOf('-')) > 0)
        throw Error('interior hyphen');
    else if (p === 0) {
        return fromString(str.substring(1), unsigned, radix).neg();
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = fromNumber(pow_dbl(radix, 8));

    var result = ZERO;
    for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i),
            value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
            var power = fromNumber(pow_dbl(radix, size));
            result = result.mul(power).add(fromNumber(value));
        } else {
            result = result.mul(radixToPower);
            result = result.add(fromNumber(value));
        }
    }
    result.unsigned = unsigned;
    return result;
}

/**
 * Returns a Long representation of the given string, written using the specified radix.
 * @function
 * @param {string} str The textual representation of the Long
 * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed
 * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
 * @returns {!Long} The corresponding Long value
 */
Long.fromString = fromString;

/**
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromValue(val, unsigned) {
    if (typeof val === 'number')
        return fromNumber(val, unsigned);
    if (typeof val === 'string')
        return fromString(val, unsigned);
    // Throws for non-objects, converts non-instanceof Long:
    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);
}

/**
 * Converts the specified value to a Long using the appropriate from* function for its type.
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long}
 */
Long.fromValue = fromValue;

// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be
// no runtime penalty for these.

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_16_DBL = 1 << 16;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_24_DBL = 1 << 24;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;

/**
 * @type {!Long}
 * @const
 * @inner
 */
var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);

/**
 * @type {!Long}
 * @inner
 */
var ZERO = fromInt(0);

/**
 * Signed zero.
 * @type {!Long}
 */
Long.ZERO = ZERO;

/**
 * @type {!Long}
 * @inner
 */
var UZERO = fromInt(0, true);

/**
 * Unsigned zero.
 * @type {!Long}
 */
Long.UZERO = UZERO;

/**
 * @type {!Long}
 * @inner
 */
var ONE = fromInt(1);

/**
 * Signed one.
 * @type {!Long}
 */
Long.ONE = ONE;

/**
 * @type {!Long}
 * @inner
 */
var UONE = fromInt(1, true);

/**
 * Unsigned one.
 * @type {!Long}
 */
Long.UONE = UONE;

/**
 * @type {!Long}
 * @inner
 */
var NEG_ONE = fromInt(-1);

/**
 * Signed negative one.
 * @type {!Long}
 */
Long.NEG_ONE = NEG_ONE;

/**
 * @type {!Long}
 * @inner
 */
var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);

/**
 * Maximum signed value.
 * @type {!Long}
 */
Long.MAX_VALUE = MAX_VALUE;

/**
 * @type {!Long}
 * @inner
 */
var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);

/**
 * Maximum unsigned value.
 * @type {!Long}
 */
Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;

/**
 * @type {!Long}
 * @inner
 */
var MIN_VALUE = fromBits(0, 0x80000000|0, false);

/**
 * Minimum signed value.
 * @type {!Long}
 */
Long.MIN_VALUE = MIN_VALUE;

/**
 * @alias Long.prototype
 * @inner
 */
var LongPrototype = Long.prototype;

/**
 * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
 * @returns {number}
 */
LongPrototype.toInt = function toInt() {
    return this.unsigned ? this.low >>> 0 : this.low;
};

/**
 * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
 * @returns {number}
 */
LongPrototype.toNumber = function toNumber() {
    if (this.unsigned)
        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);
    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
};

/**
 * Converts the Long to a string written in the specified radix.
 * @param {number=} radix Radix (2-36), defaults to 10
 * @returns {string}
 * @override
 * @throws {RangeError} If `radix` is out of range
 */
LongPrototype.toString = function toString(radix) {
    radix = radix || 10;
    if (radix < 2 || 36 < radix)
        throw RangeError('radix');
    if (this.isZero())
        return '0';
    if (this.isNegative()) { // Unsigned Longs are never negative
        if (this.eq(MIN_VALUE)) {
            // We need to change the Long value before it can be negated, so we remove
            // the bottom-most digit in this base and then recurse to do the rest.
            var radixLong = fromNumber(radix),
                div = this.div(radixLong),
                rem1 = div.mul(radixLong).sub(this);
            return div.toString(radix) + rem1.toInt().toString(radix);
        } else
            return '-' + this.neg().toString(radix);
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),
        rem = this;
    var result = '';
    while (true) {
        var remDiv = rem.div(radixToPower),
            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,
            digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero())
            return digits + result;
        else {
            while (digits.length < 6)
                digits = '0' + digits;
            result = '' + digits + result;
        }
    }
};

/**
 * Gets the high 32 bits as a signed integer.
 * @returns {number} Signed high bits
 */
LongPrototype.getHighBits = function getHighBits() {
    return this.high;
};

/**
 * Gets the high 32 bits as an unsigned integer.
 * @returns {number} Unsigned high bits
 */
LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
    return this.high >>> 0;
};

/**
 * Gets the low 32 bits as a signed integer.
 * @returns {number} Signed low bits
 */
LongPrototype.getLowBits = function getLowBits() {
    return this.low;
};

/**
 * Gets the low 32 bits as an unsigned integer.
 * @returns {number} Unsigned low bits
 */
LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
    return this.low >>> 0;
};

/**
 * Gets the number of bits needed to represent the absolute value of this Long.
 * @returns {number}
 */
LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
    if (this.isNegative()) // Unsigned Longs are never negative
        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
    var val = this.high != 0 ? this.high : this.low;
    for (var bit = 31; bit > 0; bit--)
        if ((val & (1 << bit)) != 0)
            break;
    return this.high != 0 ? bit + 33 : bit + 1;
};

/**
 * Tests if this Long's value equals zero.
 * @returns {boolean}
 */
LongPrototype.isZero = function isZero() {
    return this.high === 0 && this.low === 0;
};

/**
 * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.
 * @returns {boolean}
 */
LongPrototype.eqz = LongPrototype.isZero;

/**
 * Tests if this Long's value is negative.
 * @returns {boolean}
 */
LongPrototype.isNegative = function isNegative() {
    return !this.unsigned && this.high < 0;
};

/**
 * Tests if this Long's value is positive.
 * @returns {boolean}
 */
LongPrototype.isPositive = function isPositive() {
    return this.unsigned || this.high >= 0;
};

/**
 * Tests if this Long's value is odd.
 * @returns {boolean}
 */
LongPrototype.isOdd = function isOdd() {
    return (this.low & 1) === 1;
};

/**
 * Tests if this Long's value is even.
 * @returns {boolean}
 */
LongPrototype.isEven = function isEven() {
    return (this.low & 1) === 0;
};

/**
 * Tests if this Long's value equals the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.equals = function equals(other) {
    if (!isLong(other))
        other = fromValue(other);
    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)
        return false;
    return this.high === other.high && this.low === other.low;
};

/**
 * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.eq = LongPrototype.equals;

/**
 * Tests if this Long's value differs from the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.notEquals = function notEquals(other) {
    return !this.eq(/* validates */ other);
};

/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.neq = LongPrototype.notEquals;

/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.ne = LongPrototype.notEquals;

/**
 * Tests if this Long's value is less than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lessThan = function lessThan(other) {
    return this.comp(/* validates */ other) < 0;
};

/**
 * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lt = LongPrototype.lessThan;

/**
 * Tests if this Long's value is less than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
    return this.comp(/* validates */ other) <= 0;
};

/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lte = LongPrototype.lessThanOrEqual;

/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.le = LongPrototype.lessThanOrEqual;

/**
 * Tests if this Long's value is greater than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.greaterThan = function greaterThan(other) {
    return this.comp(/* validates */ other) > 0;
};

/**
 * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.gt = LongPrototype.greaterThan;

/**
 * Tests if this Long's value is greater than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
    return this.comp(/* validates */ other) >= 0;
};

/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.gte = LongPrototype.greaterThanOrEqual;

/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.ge = LongPrototype.greaterThanOrEqual;

/**
 * Compares this Long's value with the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */
LongPrototype.compare = function compare(other) {
    if (!isLong(other))
        other = fromValue(other);
    if (this.eq(other))
        return 0;
    var thisNeg = this.isNegative(),
        otherNeg = other.isNegative();
    if (thisNeg && !otherNeg)
        return -1;
    if (!thisNeg && otherNeg)
        return 1;
    // At this point the sign bits are the same
    if (!this.unsigned)
        return this.sub(other).isNegative() ? -1 : 1;
    // Both are positive if at least one is unsigned
    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;
};

/**
 * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */
LongPrototype.comp = LongPrototype.compare;

/**
 * Negates this Long's value.
 * @returns {!Long} Negated Long
 */
LongPrototype.negate = function negate() {
    if (!this.unsigned && this.eq(MIN_VALUE))
        return MIN_VALUE;
    return this.not().add(ONE);
};

/**
 * Negates this Long's value. This is an alias of {@link Long#negate}.
 * @function
 * @returns {!Long} Negated Long
 */
LongPrototype.neg = LongPrototype.negate;

/**
 * Returns the sum of this and the specified Long.
 * @param {!Long|number|string} addend Addend
 * @returns {!Long} Sum
 */
LongPrototype.add = function add(addend) {
    if (!isLong(addend))
        addend = fromValue(addend);

    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high >>> 16;
    var a32 = this.high & 0xFFFF;
    var a16 = this.low >>> 16;
    var a00 = this.low & 0xFFFF;

    var b48 = addend.high >>> 16;
    var b32 = addend.high & 0xFFFF;
    var b16 = addend.low >>> 16;
    var b00 = addend.low & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
};

/**
 * Returns the difference of this and the specified Long.
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */
LongPrototype.subtract = function subtract(subtrahend) {
    if (!isLong(subtrahend))
        subtrahend = fromValue(subtrahend);
    return this.add(subtrahend.neg());
};

/**
 * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
 * @function
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */
LongPrototype.sub = LongPrototype.subtract;

/**
 * Returns the product of this and the specified Long.
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */
LongPrototype.multiply = function multiply(multiplier) {
    if (this.isZero())
        return ZERO;
    if (!isLong(multiplier))
        multiplier = fromValue(multiplier);

    // use wasm support if present
    if (wasm) {
        var low = wasm.mul(this.low,
                           this.high,
                           multiplier.low,
                           multiplier.high);
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    if (multiplier.isZero())
        return ZERO;
    if (this.eq(MIN_VALUE))
        return multiplier.isOdd() ? MIN_VALUE : ZERO;
    if (multiplier.eq(MIN_VALUE))
        return this.isOdd() ? MIN_VALUE : ZERO;

    if (this.isNegative()) {
        if (multiplier.isNegative())
            return this.neg().mul(multiplier.neg());
        else
            return this.neg().mul(multiplier).neg();
    } else if (multiplier.isNegative())
        return this.mul(multiplier.neg()).neg();

    // If both longs are small, use float multiplication
    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high >>> 16;
    var a32 = this.high & 0xFFFF;
    var a16 = this.low >>> 16;
    var a00 = this.low & 0xFFFF;

    var b48 = multiplier.high >>> 16;
    var b32 = multiplier.high & 0xFFFF;
    var b16 = multiplier.low >>> 16;
    var b00 = multiplier.low & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
};

/**
 * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
 * @function
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */
LongPrototype.mul = LongPrototype.multiply;

/**
 * Returns this Long divided by the specified. The result is signed if this Long is signed or
 *  unsigned if this Long is unsigned.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */
LongPrototype.divide = function divide(divisor) {
    if (!isLong(divisor))
        divisor = fromValue(divisor);
    if (divisor.isZero())
        throw Error('division by zero');

    // use wasm support if present
    if (wasm) {
        // guard against signed division overflow: the largest
        // negative number / -1 would be 1 larger than the largest
        // positive number, due to two's complement.
        if (!this.unsigned &&
            this.high === -0x80000000 &&
            divisor.low === -1 && divisor.high === -1) {
            // be consistent with non-wasm code path
            return this;
        }
        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(
            this.low,
            this.high,
            divisor.low,
            divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    if (this.isZero())
        return this.unsigned ? UZERO : ZERO;
    var approx, rem, res;
    if (!this.unsigned) {
        // This section is only relevant for signed longs and is derived from the
        // closure library as a whole.
        if (this.eq(MIN_VALUE)) {
            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
            else if (divisor.eq(MIN_VALUE))
                return ONE;
            else {
                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
                var halfThis = this.shr(1);
                approx = halfThis.div(divisor).shl(1);
                if (approx.eq(ZERO)) {
                    return divisor.isNegative() ? ONE : NEG_ONE;
                } else {
                    rem = this.sub(divisor.mul(approx));
                    res = approx.add(rem.div(divisor));
                    return res;
                }
            }
        } else if (divisor.eq(MIN_VALUE))
            return this.unsigned ? UZERO : ZERO;
        if (this.isNegative()) {
            if (divisor.isNegative())
                return this.neg().div(divisor.neg());
            return this.neg().div(divisor).neg();
        } else if (divisor.isNegative())
            return this.div(divisor.neg()).neg();
        res = ZERO;
    } else {
        // The algorithm below has not been made for unsigned longs. It's therefore
        // required to take special care of the MSB prior to running it.
        if (!divisor.unsigned)
            divisor = divisor.toUnsigned();
        if (divisor.gt(this))
            return UZERO;
        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true
            return UONE;
        res = UZERO;
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    rem = this;
    while (rem.gte(divisor)) {
        // Approximate the result of division. This may be a little greater or
        // smaller than the actual value.
        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));

        // We will tweak the approximate result by changing it in the 48-th digit or
        // the smallest non-fractional digit, whichever is larger.
        var log2 = Math.ceil(Math.log(approx) / Math.LN2),
            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),

        // Decrease the approximation until it is smaller than the remainder.  Note
        // that if it is too large, the product overflows and is negative.
            approxRes = fromNumber(approx),
            approxRem = approxRes.mul(divisor);
        while (approxRem.isNegative() || approxRem.gt(rem)) {
            approx -= delta;
            approxRes = fromNumber(approx, this.unsigned);
            approxRem = approxRes.mul(divisor);
        }

        // We know the answer can't be zero... and actually, zero would cause
        // infinite recursion since we would make no progress.
        if (approxRes.isZero())
            approxRes = ONE;

        res = res.add(approxRes);
        rem = rem.sub(approxRem);
    }
    return res;
};

/**
 * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */
LongPrototype.div = LongPrototype.divide;

/**
 * Returns this Long modulo the specified.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.modulo = function modulo(divisor) {
    if (!isLong(divisor))
        divisor = fromValue(divisor);

    // use wasm support if present
    if (wasm) {
        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(
            this.low,
            this.high,
            divisor.low,
            divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    return this.sub(this.div(divisor).mul(divisor));
};

/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.mod = LongPrototype.modulo;

/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.rem = LongPrototype.modulo;

/**
 * Returns the bitwise NOT of this Long.
 * @returns {!Long}
 */
LongPrototype.not = function not() {
    return fromBits(~this.low, ~this.high, this.unsigned);
};

/**
 * Returns the bitwise AND of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.and = function and(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
};

/**
 * Returns the bitwise OR of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.or = function or(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
};

/**
 * Returns the bitwise XOR of this Long and the given one.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.xor = function xor(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
};

/**
 * Returns this Long with bits shifted to the left by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftLeft = function shiftLeft(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    if ((numBits &= 63) === 0)
        return this;
    else if (numBits < 32)
        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);
    else
        return fromBits(0, this.low << (numBits - 32), this.unsigned);
};

/**
 * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shl = LongPrototype.shiftLeft;

/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftRight = function shiftRight(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    if ((numBits &= 63) === 0)
        return this;
    else if (numBits < 32)
        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);
    else
        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);
};

/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shr = LongPrototype.shiftRight;

/**
 * Returns this Long with bits logically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    numBits &= 63;
    if (numBits === 0)
        return this;
    else {
        var high = this.high;
        if (numBits < 32) {
            var low = this.low;
            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);
        } else if (numBits === 32)
            return fromBits(high, 0, this.unsigned);
        else
            return fromBits(high >>> (numBits - 32), 0, this.unsigned);
    }
};

/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shru = LongPrototype.shiftRightUnsigned;

/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;

/**
 * Converts this Long to signed.
 * @returns {!Long} Signed long
 */
LongPrototype.toSigned = function toSigned() {
    if (!this.unsigned)
        return this;
    return fromBits(this.low, this.high, false);
};

/**
 * Converts this Long to unsigned.
 * @returns {!Long} Unsigned long
 */
LongPrototype.toUnsigned = function toUnsigned() {
    if (this.unsigned)
        return this;
    return fromBits(this.low, this.high, true);
};

/**
 * Converts this Long to its byte representation.
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {!Array.<number>} Byte representation
 */
LongPrototype.toBytes = function toBytes(le) {
    return le ? this.toBytesLE() : this.toBytesBE();
};

/**
 * Converts this Long to its little endian byte representation.
 * @returns {!Array.<number>} Little endian byte representation
 */
LongPrototype.toBytesLE = function toBytesLE() {
    var hi = this.high,
        lo = this.low;
    return [
        lo        & 0xff,
        lo >>>  8 & 0xff,
        lo >>> 16 & 0xff,
        lo >>> 24       ,
        hi        & 0xff,
        hi >>>  8 & 0xff,
        hi >>> 16 & 0xff,
        hi >>> 24
    ];
};

/**
 * Converts this Long to its big endian byte representation.
 * @returns {!Array.<number>} Big endian byte representation
 */
LongPrototype.toBytesBE = function toBytesBE() {
    var hi = this.high,
        lo = this.low;
    return [
        hi >>> 24       ,
        hi >>> 16 & 0xff,
        hi >>>  8 & 0xff,
        hi        & 0xff,
        lo >>> 24       ,
        lo >>> 16 & 0xff,
        lo >>>  8 & 0xff,
        lo        & 0xff
    ];
};

/**
 * Creates a Long from its byte representation.
 * @param {!Array.<number>} bytes Byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {Long} The corresponding Long value
 */
Long.fromBytes = function fromBytes(bytes, unsigned, le) {
    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);
};

/**
 * Creates a Long from its little endian byte representation.
 * @param {!Array.<number>} bytes Little endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */
Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {
    return new Long(
        bytes[0]       |
        bytes[1] <<  8 |
        bytes[2] << 16 |
        bytes[3] << 24,
        bytes[4]       |
        bytes[5] <<  8 |
        bytes[6] << 16 |
        bytes[7] << 24,
        unsigned
    );
};

/**
 * Creates a Long from its big endian byte representation.
 * @param {!Array.<number>} bytes Big endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */
Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {
    return new Long(
        bytes[4] << 24 |
        bytes[5] << 16 |
        bytes[6] <<  8 |
        bytes[7],
        bytes[0] << 24 |
        bytes[1] << 16 |
        bytes[2] <<  8 |
        bytes[3],
        unsigned
    );
};


/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/***/ (function(module) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ "./node_modules/protobufjs/index.js":
/*!******************************************!*\
  !*** ./node_modules/protobufjs/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
// full library entry point.


module.exports = __webpack_require__(/*! ./src/index */ "./node_modules/protobufjs/src/index.js");


/***/ }),

/***/ "./node_modules/protobufjs/src/common.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/common.js ***!
  \***********************************************/
/***/ (function(module) {

"use strict";

module.exports = common;

var commonRe = /\/|\./;

/**
 * Provides common type definitions.
 * Can also be used to provide additional google types or your own custom types.
 * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name
 * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition
 * @returns {undefined}
 * @property {INamespace} google/protobuf/any.proto Any
 * @property {INamespace} google/protobuf/duration.proto Duration
 * @property {INamespace} google/protobuf/empty.proto Empty
 * @property {INamespace} google/protobuf/field_mask.proto FieldMask
 * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue
 * @property {INamespace} google/protobuf/timestamp.proto Timestamp
 * @property {INamespace} google/protobuf/wrappers.proto Wrappers
 * @example
 * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)
 * protobuf.common("descriptor", descriptorJson);
 *
 * // manually provides a custom definition (uses my.foo namespace)
 * protobuf.common("my/foo/bar.proto", myFooBarJson);
 */
function common(name, json) {
    if (!commonRe.test(name)) {
        name = "google/protobuf/" + name + ".proto";
        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };
    }
    common[name] = json;
}

// Not provided because of limited use (feel free to discuss or to provide yourself):
//
// google/protobuf/descriptor.proto
// google/protobuf/source_context.proto
// google/protobuf/type.proto
//
// Stripped and pre-parsed versions of these non-bundled files are instead available as part of
// the repository or package within the google/protobuf directory.

common("any", {

    /**
     * Properties of a google.protobuf.Any message.
     * @interface IAny
     * @type {Object}
     * @property {string} [typeUrl]
     * @property {Uint8Array} [bytes]
     * @memberof common
     */
    Any: {
        fields: {
            type_url: {
                type: "string",
                id: 1
            },
            value: {
                type: "bytes",
                id: 2
            }
        }
    }
});

var timeType;

common("duration", {

    /**
     * Properties of a google.protobuf.Duration message.
     * @interface IDuration
     * @type {Object}
     * @property {number|Long} [seconds]
     * @property {number} [nanos]
     * @memberof common
     */
    Duration: timeType = {
        fields: {
            seconds: {
                type: "int64",
                id: 1
            },
            nanos: {
                type: "int32",
                id: 2
            }
        }
    }
});

common("timestamp", {

    /**
     * Properties of a google.protobuf.Timestamp message.
     * @interface ITimestamp
     * @type {Object}
     * @property {number|Long} [seconds]
     * @property {number} [nanos]
     * @memberof common
     */
    Timestamp: timeType
});

common("empty", {

    /**
     * Properties of a google.protobuf.Empty message.
     * @interface IEmpty
     * @memberof common
     */
    Empty: {
        fields: {}
    }
});

common("struct", {

    /**
     * Properties of a google.protobuf.Struct message.
     * @interface IStruct
     * @type {Object}
     * @property {Object.<string,IValue>} [fields]
     * @memberof common
     */
    Struct: {
        fields: {
            fields: {
                keyType: "string",
                type: "Value",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.Value message.
     * @interface IValue
     * @type {Object}
     * @property {string} [kind]
     * @property {0} [nullValue]
     * @property {number} [numberValue]
     * @property {string} [stringValue]
     * @property {boolean} [boolValue]
     * @property {IStruct} [structValue]
     * @property {IListValue} [listValue]
     * @memberof common
     */
    Value: {
        oneofs: {
            kind: {
                oneof: [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                ]
            }
        },
        fields: {
            nullValue: {
                type: "NullValue",
                id: 1
            },
            numberValue: {
                type: "double",
                id: 2
            },
            stringValue: {
                type: "string",
                id: 3
            },
            boolValue: {
                type: "bool",
                id: 4
            },
            structValue: {
                type: "Struct",
                id: 5
            },
            listValue: {
                type: "ListValue",
                id: 6
            }
        }
    },

    NullValue: {
        values: {
            NULL_VALUE: 0
        }
    },

    /**
     * Properties of a google.protobuf.ListValue message.
     * @interface IListValue
     * @type {Object}
     * @property {Array.<IValue>} [values]
     * @memberof common
     */
    ListValue: {
        fields: {
            values: {
                rule: "repeated",
                type: "Value",
                id: 1
            }
        }
    }
});

common("wrappers", {

    /**
     * Properties of a google.protobuf.DoubleValue message.
     * @interface IDoubleValue
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    DoubleValue: {
        fields: {
            value: {
                type: "double",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.FloatValue message.
     * @interface IFloatValue
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    FloatValue: {
        fields: {
            value: {
                type: "float",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.Int64Value message.
     * @interface IInt64Value
     * @type {Object}
     * @property {number|Long} [value]
     * @memberof common
     */
    Int64Value: {
        fields: {
            value: {
                type: "int64",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.UInt64Value message.
     * @interface IUInt64Value
     * @type {Object}
     * @property {number|Long} [value]
     * @memberof common
     */
    UInt64Value: {
        fields: {
            value: {
                type: "uint64",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.Int32Value message.
     * @interface IInt32Value
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    Int32Value: {
        fields: {
            value: {
                type: "int32",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.UInt32Value message.
     * @interface IUInt32Value
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    UInt32Value: {
        fields: {
            value: {
                type: "uint32",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.BoolValue message.
     * @interface IBoolValue
     * @type {Object}
     * @property {boolean} [value]
     * @memberof common
     */
    BoolValue: {
        fields: {
            value: {
                type: "bool",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.StringValue message.
     * @interface IStringValue
     * @type {Object}
     * @property {string} [value]
     * @memberof common
     */
    StringValue: {
        fields: {
            value: {
                type: "string",
                id: 1
            }
        }
    },

    /**
     * Properties of a google.protobuf.BytesValue message.
     * @interface IBytesValue
     * @type {Object}
     * @property {Uint8Array} [value]
     * @memberof common
     */
    BytesValue: {
        fields: {
            value: {
                type: "bytes",
                id: 1
            }
        }
    }
});

common("field_mask", {

    /**
     * Properties of a google.protobuf.FieldMask message.
     * @interface IDoubleValue
     * @type {Object}
     * @property {number} [value]
     * @memberof common
     */
    FieldMask: {
        fields: {
            paths: {
                rule: "repeated",
                type: "string",
                id: 1
            }
        }
    }
});

/**
 * Gets the root definition of the specified common proto file.
 *
 * Bundled definitions are:
 * - google/protobuf/any.proto
 * - google/protobuf/duration.proto
 * - google/protobuf/empty.proto
 * - google/protobuf/field_mask.proto
 * - google/protobuf/struct.proto
 * - google/protobuf/timestamp.proto
 * - google/protobuf/wrappers.proto
 *
 * @param {string} file Proto file name
 * @returns {INamespace|null} Root definition or `null` if not defined
 */
common.get = function get(file) {
    return common[file] || null;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/converter.js":
/*!**************************************************!*\
  !*** ./node_modules/protobufjs/src/converter.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/**
 * Runtime message from/to plain object converters.
 * @namespace
 */
var converter = exports;

var Enum = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    util = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

/**
 * Generates a partial value fromObject conveter.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} prop Property reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genValuePartial_fromObject(gen, field, fieldIndex, prop) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    if (field.resolvedType) {
        if (field.resolvedType instanceof Enum) { gen
            ("switch(d%s){", prop);
            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {
                if (field.repeated && values[keys[i]] === field.typeDefault) gen
                ("default:");
                gen
                ("case%j:", keys[i])
                ("case %i:", values[keys[i]])
                    ("m%s=%j", prop, values[keys[i]])
                    ("break");
            } gen
            ("}");
        } else gen
            ("if(typeof d%s!==\"object\")", prop)
                ("throw TypeError(%j)", field.fullName + ": object expected")
            ("m%s=types[%i].fromObject(d%s)", prop, fieldIndex, prop);
    } else {
        var isUnsigned = false;
        switch (field.type) {
            case "double":
            case "float": gen
                ("m%s=Number(d%s)", prop, prop); // also catches "NaN", "Infinity"
                break;
            case "uint32":
            case "fixed32": gen
                ("m%s=d%s>>>0", prop, prop);
                break;
            case "int32":
            case "sint32":
            case "sfixed32": gen
                ("m%s=d%s|0", prop, prop);
                break;
            case "uint64":
                isUnsigned = true;
                // eslint-disable-line no-fallthrough
            case "int64":
            case "sint64":
            case "fixed64":
            case "sfixed64": gen
                ("if(util.Long)")
                    ("(m%s=util.Long.fromValue(d%s)).unsigned=%j", prop, prop, isUnsigned)
                ("else if(typeof d%s===\"string\")", prop)
                    ("m%s=parseInt(d%s,10)", prop, prop)
                ("else if(typeof d%s===\"number\")", prop)
                    ("m%s=d%s", prop, prop)
                ("else if(typeof d%s===\"object\")", prop)
                    ("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", prop, prop, prop, isUnsigned ? "true" : "");
                break;
            case "bytes": gen
                ("if(typeof d%s===\"string\")", prop)
                    ("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", prop, prop, prop)
                ("else if(d%s.length)", prop)
                    ("m%s=d%s", prop, prop);
                break;
            case "string": gen
                ("m%s=String(d%s)", prop, prop);
                break;
            case "bool": gen
                ("m%s=Boolean(d%s)", prop, prop);
                break;
            /* default: gen
                ("m%s=d%s", prop, prop);
                break; */
        }
    }
    return gen;
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
}

/**
 * Generates a plain object to runtime message converter specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
converter.fromObject = function fromObject(mtype) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    var fields = mtype.fieldsArray;
    var gen = util.codegen(["d"], mtype.name + "$fromObject")
    ("if(d instanceof this.ctor)")
        ("return d");
    if (!fields.length) return gen
    ("return new this.ctor");
    gen
    ("var m=new this.ctor");
    for (var i = 0; i < fields.length; ++i) {
        var field  = fields[i].resolve(),
            prop   = util.safeProp(field.name);

        // Map fields
        if (field.map) { gen
    ("if(d%s){", prop)
        ("if(typeof d%s!==\"object\")", prop)
            ("throw TypeError(%j)", field.fullName + ": object expected")
        ("m%s={}", prop)
        ("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", prop);
            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + "[ks[i]]")
        ("}")
    ("}");

        // Repeated fields
        } else if (field.repeated) { gen
    ("if(d%s){", prop)
        ("if(!Array.isArray(d%s))", prop)
            ("throw TypeError(%j)", field.fullName + ": array expected")
        ("m%s=[]", prop)
        ("for(var i=0;i<d%s.length;++i){", prop);
            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + "[i]")
        ("}")
    ("}");

        // Non-repeated fields
        } else {
            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)
    ("if(d%s!=null){", prop); // !== undefined && !== null
        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);
            if (!(field.resolvedType instanceof Enum)) gen
    ("}");
        }
    } return gen
    ("return m");
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
};

/**
 * Generates a partial value toObject converter.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} prop Property reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genValuePartial_toObject(gen, field, fieldIndex, prop) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    if (field.resolvedType) {
        if (field.resolvedType instanceof Enum) gen
            ("d%s=o.enums===String?types[%i].values[m%s]:m%s", prop, fieldIndex, prop, prop);
        else gen
            ("d%s=types[%i].toObject(m%s,o)", prop, fieldIndex, prop);
    } else {
        var isUnsigned = false;
        switch (field.type) {
            case "double":
            case "float": gen
            ("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", prop, prop, prop, prop);
                break;
            case "uint64":
                isUnsigned = true;
                // eslint-disable-line no-fallthrough
            case "int64":
            case "sint64":
            case "fixed64":
            case "sfixed64": gen
            ("if(typeof m%s===\"number\")", prop)
                ("d%s=o.longs===String?String(m%s):m%s", prop, prop, prop)
            ("else") // Long-like
                ("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", prop, prop, prop, prop, isUnsigned ? "true": "", prop);
                break;
            case "bytes": gen
            ("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", prop, prop, prop, prop, prop);
                break;
            default: gen
            ("d%s=m%s", prop, prop);
                break;
        }
    }
    return gen;
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
}

/**
 * Generates a runtime message to plain object converter specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
converter.toObject = function toObject(mtype) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);
    if (!fields.length)
        return util.codegen()("return {}");
    var gen = util.codegen(["m", "o"], mtype.name + "$toObject")
    ("if(!o)")
        ("o={}")
    ("var d={}");

    var repeatedFields = [],
        mapFields = [],
        normalFields = [],
        i = 0;
    for (; i < fields.length; ++i)
        if (!fields[i].partOf)
            ( fields[i].resolve().repeated ? repeatedFields
            : fields[i].map ? mapFields
            : normalFields).push(fields[i]);

    if (repeatedFields.length) { gen
    ("if(o.arrays||o.defaults){");
        for (i = 0; i < repeatedFields.length; ++i) gen
        ("d%s=[]", util.safeProp(repeatedFields[i].name));
        gen
    ("}");
    }

    if (mapFields.length) { gen
    ("if(o.objects||o.defaults){");
        for (i = 0; i < mapFields.length; ++i) gen
        ("d%s={}", util.safeProp(mapFields[i].name));
        gen
    ("}");
    }

    if (normalFields.length) { gen
    ("if(o.defaults){");
        for (i = 0; i < normalFields.length; ++i) {
            var field = normalFields[i],
                prop  = util.safeProp(field.name);
            if (field.resolvedType instanceof Enum) gen
        ("d%s=o.enums===String?%j:%j", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);
            else if (field.long) gen
        ("if(util.Long){")
            ("var n=new util.Long(%i,%i,%j)", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)
            ("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", prop)
        ("}else")
            ("d%s=o.longs===String?%j:%i", prop, field.typeDefault.toString(), field.typeDefault.toNumber());
            else if (field.bytes) {
                var arrayDefault = "[" + Array.prototype.slice.call(field.typeDefault).join(",") + "]";
                gen
        ("if(o.bytes===String)d%s=%j", prop, String.fromCharCode.apply(String, field.typeDefault))
        ("else{")
            ("d%s=%s", prop, arrayDefault)
            ("if(o.bytes!==Array)d%s=util.newBuffer(d%s)", prop, prop)
        ("}");
            } else gen
        ("d%s=%j", prop, field.typeDefault); // also messages (=null)
        } gen
    ("}");
    }
    var hasKs2 = false;
    for (i = 0; i < fields.length; ++i) {
        var field = fields[i],
            index = mtype._fieldsArray.indexOf(field),
            prop  = util.safeProp(field.name);
        if (field.map) {
            if (!hasKs2) { hasKs2 = true; gen
    ("var ks2");
            } gen
    ("if(m%s&&(ks2=Object.keys(m%s)).length){", prop, prop)
        ("d%s={}", prop)
        ("for(var j=0;j<ks2.length;++j){");
            genValuePartial_toObject(gen, field, /* sorted */ index, prop + "[ks2[j]]")
        ("}");
        } else if (field.repeated) { gen
    ("if(m%s&&m%s.length){", prop, prop)
        ("d%s=[]", prop)
        ("for(var j=0;j<m%s.length;++j){", prop);
            genValuePartial_toObject(gen, field, /* sorted */ index, prop + "[j]")
        ("}");
        } else { gen
    ("if(m%s!=null&&m.hasOwnProperty(%j)){", prop, field.name); // !== undefined && !== null
        genValuePartial_toObject(gen, field, /* sorted */ index, prop);
        if (field.partOf) gen
        ("if(o.oneofs)")
            ("d%s=%j", util.safeProp(field.partOf.name), field.name);
        }
        gen
    ("}");
    }
    return gen
    ("return d");
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
};


/***/ }),

/***/ "./node_modules/protobufjs/src/decoder.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/decoder.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = decoder;

var Enum    = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    types   = __webpack_require__(/*! ./types */ "./node_modules/protobufjs/src/types.js"),
    util    = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

function missing(field) {
    return "missing required '" + field.name + "'";
}

/**
 * Generates a decoder specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
function decoder(mtype) {
    /* eslint-disable no-unexpected-multiline */
    var gen = util.codegen(["r", "l"], mtype.name + "$decode")
    ("if(!(r instanceof Reader))")
        ("r=Reader.create(r)")
    ("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? ",k,value" : ""))
    ("while(r.pos<c){")
        ("var t=r.uint32()");
    if (mtype.group) gen
        ("if((t&7)===4)")
            ("break");
    gen
        ("switch(t>>>3){");

    var i = 0;
    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {
        var field = mtype._fieldsArray[i].resolve(),
            type  = field.resolvedType instanceof Enum ? "int32" : field.type,
            ref   = "m" + util.safeProp(field.name); gen
            ("case %i:", field.id);

        // Map fields
        if (field.map) { gen
                ("if(%s===util.emptyObject)", ref)
                    ("%s={}", ref)
                ("var c2 = r.uint32()+r.pos");

            if (types.defaults[field.keyType] !== undefined) gen
                ("k=%j", types.defaults[field.keyType]);
            else gen
                ("k=null");

            if (types.defaults[type] !== undefined) gen
                ("value=%j", types.defaults[type]);
            else gen
                ("value=null");

            gen
                ("while(r.pos<c2){")
                    ("var tag2=r.uint32()")
                    ("switch(tag2>>>3){")
                        ("case 1: k=r.%s(); break", field.keyType)
                        ("case 2:");

            if (types.basic[type] === undefined) gen
                            ("value=types[%i].decode(r,r.uint32())", i); // can't be groups
            else gen
                            ("value=r.%s()", type);

            gen
                            ("break")
                        ("default:")
                            ("r.skipType(tag2&7)")
                            ("break")
                    ("}")
                ("}");

            if (types.long[field.keyType] !== undefined) gen
                ("%s[typeof k===\"object\"?util.longToHash(k):k]=value", ref);
            else gen
                ("%s[k]=value", ref);

        // Repeated fields
        } else if (field.repeated) { gen

                ("if(!(%s&&%s.length))", ref, ref)
                    ("%s=[]", ref);

            // Packable (always check for forward and backward compatiblity)
            if (types.packed[type] !== undefined) gen
                ("if((t&7)===2){")
                    ("var c2=r.uint32()+r.pos")
                    ("while(r.pos<c2)")
                        ("%s.push(r.%s())", ref, type)
                ("}else");

            // Non-packed
            if (types.basic[type] === undefined) gen(field.resolvedType.group
                    ? "%s.push(types[%i].decode(r))"
                    : "%s.push(types[%i].decode(r,r.uint32()))", ref, i);
            else gen
                    ("%s.push(r.%s())", ref, type);

        // Non-repeated
        } else if (types.basic[type] === undefined) gen(field.resolvedType.group
                ? "%s=types[%i].decode(r)"
                : "%s=types[%i].decode(r,r.uint32())", ref, i);
        else gen
                ("%s=r.%s()", ref, type);
        gen
                ("break");
    // Unknown fields
    } gen
            ("default:")
                ("r.skipType(t&7)")
                ("break")

        ("}")
    ("}");

    // Field presence
    for (i = 0; i < mtype._fieldsArray.length; ++i) {
        var rfield = mtype._fieldsArray[i];
        if (rfield.required) gen
    ("if(!m.hasOwnProperty(%j))", rfield.name)
        ("throw util.ProtocolError(%j,{instance:m})", missing(rfield));
    }

    return gen
    ("return m");
    /* eslint-enable no-unexpected-multiline */
}


/***/ }),

/***/ "./node_modules/protobufjs/src/encoder.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/encoder.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = encoder;

var Enum     = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    types    = __webpack_require__(/*! ./types */ "./node_modules/protobufjs/src/types.js"),
    util     = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

/**
 * Generates a partial message type encoder.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} ref Variable reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genTypePartial(gen, field, fieldIndex, ref) {
    return field.resolvedType.group
        ? gen("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)
        : gen("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", fieldIndex, ref, (field.id << 3 | 2) >>> 0);
}

/**
 * Generates an encoder specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
function encoder(mtype) {
    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */
    var gen = util.codegen(["m", "w"], mtype.name + "$encode")
    ("if(!w)")
        ("w=Writer.create()");

    var i, ref;

    // "when a message is serialized its known fields should be written sequentially by field number"
    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);

    for (var i = 0; i < fields.length; ++i) {
        var field    = fields[i].resolve(),
            index    = mtype._fieldsArray.indexOf(field),
            type     = field.resolvedType instanceof Enum ? "int32" : field.type,
            wireType = types.basic[type];
            ref      = "m" + util.safeProp(field.name);

        // Map fields
        if (field.map) {
            gen
    ("if(%s!=null&&Object.hasOwnProperty.call(m,%j)){", ref, field.name) // !== undefined && !== null
        ("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", ref)
            ("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);
            if (wireType === undefined) gen
            ("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", index, ref); // can't be groups
            else gen
            (".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | wireType, type, ref);
            gen
        ("}")
    ("}");

            // Repeated fields
        } else if (field.repeated) { gen
    ("if(%s!=null&&%s.length){", ref, ref); // !== undefined && !== null

            // Packed repeated
            if (field.packed && types.packed[type] !== undefined) { gen

        ("w.uint32(%i).fork()", (field.id << 3 | 2) >>> 0)
        ("for(var i=0;i<%s.length;++i)", ref)
            ("w.%s(%s[i])", type, ref)
        ("w.ldelim()");

            // Non-packed
            } else { gen

        ("for(var i=0;i<%s.length;++i)", ref);
                if (wireType === undefined)
            genTypePartial(gen, field, index, ref + "[i]");
                else gen
            ("w.uint32(%i).%s(%s[i])", (field.id << 3 | wireType) >>> 0, type, ref);

            } gen
    ("}");

        // Non-repeated
        } else {
            if (field.optional) gen
    ("if(%s!=null&&Object.hasOwnProperty.call(m,%j))", ref, field.name); // !== undefined && !== null

            if (wireType === undefined)
        genTypePartial(gen, field, index, ref);
            else gen
        ("w.uint32(%i).%s(%s)", (field.id << 3 | wireType) >>> 0, type, ref);

        }
    }

    return gen
    ("return w");
    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */
}


/***/ }),

/***/ "./node_modules/protobufjs/src/enum.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/enum.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Enum;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(/*! ./object */ "./node_modules/protobufjs/src/object.js");
((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = "Enum";

var Namespace = __webpack_require__(/*! ./namespace */ "./node_modules/protobufjs/src/namespace.js"),
    util = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

/**
 * Constructs a new enum instance.
 * @classdesc Reflected enum.
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {Object.<string,number>} [values] Enum values as an object, by name
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] The comment for this enum
 * @param {Object.<string,string>} [comments] The value comments for this enum
 */
function Enum(name, values, options, comment, comments) {
    ReflectionObject.call(this, name, options);

    if (values && typeof values !== "object")
        throw TypeError("values must be an object");

    /**
     * Enum values by id.
     * @type {Object.<number,string>}
     */
    this.valuesById = {};

    /**
     * Enum values by name.
     * @type {Object.<string,number>}
     */
    this.values = Object.create(this.valuesById); // toJSON, marker

    /**
     * Enum comment text.
     * @type {string|null}
     */
    this.comment = comment;

    /**
     * Value comment texts, if any.
     * @type {Object.<string,string>}
     */
    this.comments = comments || {};

    /**
     * Reserved ranges, if any.
     * @type {Array.<number[]|string>}
     */
    this.reserved = undefined; // toJSON

    // Note that values inherit valuesById on their prototype which makes them a TypeScript-
    // compatible enum. This is used by pbts to write actual enum definitions that work for
    // static and reflection code alike instead of emitting generic object definitions.

    if (values)
        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)
            if (typeof values[keys[i]] === "number") // use forward entries only
                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];
}

/**
 * Enum descriptor.
 * @interface IEnum
 * @property {Object.<string,number>} values Enum values
 * @property {Object.<string,*>} [options] Enum options
 */

/**
 * Constructs an enum from an enum descriptor.
 * @param {string} name Enum name
 * @param {IEnum} json Enum descriptor
 * @returns {Enum} Created enum
 * @throws {TypeError} If arguments are invalid
 */
Enum.fromJSON = function fromJSON(name, json) {
    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);
    enm.reserved = json.reserved;
    return enm;
};

/**
 * Converts this enum to an enum descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IEnum} Enum descriptor
 */
Enum.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options"  , this.options,
        "values"   , this.values,
        "reserved" , this.reserved && this.reserved.length ? this.reserved : undefined,
        "comment"  , keepComments ? this.comment : undefined,
        "comments" , keepComments ? this.comments : undefined
    ]);
};

/**
 * Adds a value to this enum.
 * @param {string} name Value name
 * @param {number} id Value id
 * @param {string} [comment] Comment, if any
 * @returns {Enum} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If there is already a value with this name or id
 */
Enum.prototype.add = function add(name, id, comment) {
    // utilized by the parser but not by .fromJSON

    if (!util.isString(name))
        throw TypeError("name must be a string");

    if (!util.isInteger(id))
        throw TypeError("id must be an integer");

    if (this.values[name] !== undefined)
        throw Error("duplicate name '" + name + "' in " + this);

    if (this.isReservedId(id))
        throw Error("id " + id + " is reserved in " + this);

    if (this.isReservedName(name))
        throw Error("name '" + name + "' is reserved in " + this);

    if (this.valuesById[id] !== undefined) {
        if (!(this.options && this.options.allow_alias))
            throw Error("duplicate id " + id + " in " + this);
        this.values[name] = id;
    } else
        this.valuesById[this.values[name] = id] = name;

    this.comments[name] = comment || null;
    return this;
};

/**
 * Removes a value from this enum
 * @param {string} name Value name
 * @returns {Enum} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If `name` is not a name of this enum
 */
Enum.prototype.remove = function remove(name) {

    if (!util.isString(name))
        throw TypeError("name must be a string");

    var val = this.values[name];
    if (val == null)
        throw Error("name '" + name + "' does not exist in " + this);

    delete this.valuesById[val];
    delete this.values[name];
    delete this.comments[name];

    return this;
};

/**
 * Tests if the specified id is reserved.
 * @param {number} id Id to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Enum.prototype.isReservedId = function isReservedId(id) {
    return Namespace.isReservedId(this.reserved, id);
};

/**
 * Tests if the specified name is reserved.
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Enum.prototype.isReservedName = function isReservedName(name) {
    return Namespace.isReservedName(this.reserved, name);
};


/***/ }),

/***/ "./node_modules/protobufjs/src/field.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/field.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Field;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(/*! ./object */ "./node_modules/protobufjs/src/object.js");
((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = "Field";

var Enum  = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    types = __webpack_require__(/*! ./types */ "./node_modules/protobufjs/src/types.js"),
    util  = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

var Type; // cyclic

var ruleRe = /^required|optional|repeated$/;

/**
 * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.
 * @name Field
 * @classdesc Reflected message field.
 * @extends FieldBase
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {number} id Unique id within its namespace
 * @param {string} type Value type
 * @param {string|Object.<string,*>} [rule="optional"] Field rule
 * @param {string|Object.<string,*>} [extend] Extended type if different from parent
 * @param {Object.<string,*>} [options] Declared options
 */

/**
 * Constructs a field from a field descriptor.
 * @param {string} name Field name
 * @param {IField} json Field descriptor
 * @returns {Field} Created field
 * @throws {TypeError} If arguments are invalid
 */
Field.fromJSON = function fromJSON(name, json) {
    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);
};

/**
 * Not an actual constructor. Use {@link Field} instead.
 * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.
 * @exports FieldBase
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {number} id Unique id within its namespace
 * @param {string} type Value type
 * @param {string|Object.<string,*>} [rule="optional"] Field rule
 * @param {string|Object.<string,*>} [extend] Extended type if different from parent
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] Comment associated with this field
 */
function Field(name, id, type, rule, extend, options, comment) {

    if (util.isObject(rule)) {
        comment = extend;
        options = rule;
        rule = extend = undefined;
    } else if (util.isObject(extend)) {
        comment = options;
        options = extend;
        extend = undefined;
    }

    ReflectionObject.call(this, name, options);

    if (!util.isInteger(id) || id < 0)
        throw TypeError("id must be a non-negative integer");

    if (!util.isString(type))
        throw TypeError("type must be a string");

    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))
        throw TypeError("rule must be a string rule");

    if (extend !== undefined && !util.isString(extend))
        throw TypeError("extend must be a string");

    if (rule === "proto3_optional") {
        rule = "optional";
    }
    /**
     * Field rule, if any.
     * @type {string|undefined}
     */
    this.rule = rule && rule !== "optional" ? rule : undefined; // toJSON

    /**
     * Field type.
     * @type {string}
     */
    this.type = type; // toJSON

    /**
     * Unique field id.
     * @type {number}
     */
    this.id = id; // toJSON, marker

    /**
     * Extended type if different from parent.
     * @type {string|undefined}
     */
    this.extend = extend || undefined; // toJSON

    /**
     * Whether this field is required.
     * @type {boolean}
     */
    this.required = rule === "required";

    /**
     * Whether this field is optional.
     * @type {boolean}
     */
    this.optional = !this.required;

    /**
     * Whether this field is repeated.
     * @type {boolean}
     */
    this.repeated = rule === "repeated";

    /**
     * Whether this field is a map or not.
     * @type {boolean}
     */
    this.map = false;

    /**
     * Message this field belongs to.
     * @type {Type|null}
     */
    this.message = null;

    /**
     * OneOf this field belongs to, if any,
     * @type {OneOf|null}
     */
    this.partOf = null;

    /**
     * The field type's default value.
     * @type {*}
     */
    this.typeDefault = null;

    /**
     * The field's default value on prototypes.
     * @type {*}
     */
    this.defaultValue = null;

    /**
     * Whether this field's value should be treated as a long.
     * @type {boolean}
     */
    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;

    /**
     * Whether this field's value is a buffer.
     * @type {boolean}
     */
    this.bytes = type === "bytes";

    /**
     * Resolved type if not a basic type.
     * @type {Type|Enum|null}
     */
    this.resolvedType = null;

    /**
     * Sister-field within the extended type if a declaring extension field.
     * @type {Field|null}
     */
    this.extensionField = null;

    /**
     * Sister-field within the declaring namespace if an extended field.
     * @type {Field|null}
     */
    this.declaringField = null;

    /**
     * Internally remembers whether this field is packed.
     * @type {boolean|null}
     * @private
     */
    this._packed = null;

    /**
     * Comment for this field.
     * @type {string|null}
     */
    this.comment = comment;
}

/**
 * Determines whether this field is packed. Only relevant when repeated and working with proto2.
 * @name Field#packed
 * @type {boolean}
 * @readonly
 */
Object.defineProperty(Field.prototype, "packed", {
    get: function() {
        // defaults to packed=true if not explicity set to false
        if (this._packed === null)
            this._packed = this.getOption("packed") !== false;
        return this._packed;
    }
});

/**
 * @override
 */
Field.prototype.setOption = function setOption(name, value, ifNotSet) {
    if (name === "packed") // clear cached before setting
        this._packed = null;
    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);
};

/**
 * Field descriptor.
 * @interface IField
 * @property {string} [rule="optional"] Field rule
 * @property {string} type Field type
 * @property {number} id Field id
 * @property {Object.<string,*>} [options] Field options
 */

/**
 * Extension field descriptor.
 * @interface IExtensionField
 * @extends IField
 * @property {string} extend Extended type
 */

/**
 * Converts this field to a field descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IField} Field descriptor
 */
Field.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "rule"    , this.rule !== "optional" && this.rule || undefined,
        "type"    , this.type,
        "id"      , this.id,
        "extend"  , this.extend,
        "options" , this.options,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * Resolves this field's type references.
 * @returns {Field} `this`
 * @throws {Error} If any reference cannot be resolved
 */
Field.prototype.resolve = function resolve() {

    if (this.resolved)
        return this;

    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it
        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);
        if (this.resolvedType instanceof Type)
            this.typeDefault = null;
        else // instanceof Enum
            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined
    }

    // use explicitly set default value if present
    if (this.options && this.options["default"] != null) {
        this.typeDefault = this.options["default"];
        if (this.resolvedType instanceof Enum && typeof this.typeDefault === "string")
            this.typeDefault = this.resolvedType.values[this.typeDefault];
    }

    // remove unnecessary options
    if (this.options) {
        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))
            delete this.options.packed;
        if (!Object.keys(this.options).length)
            this.options = undefined;
    }

    // convert to internal data type if necesssary
    if (this.long) {
        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === "u");

        /* istanbul ignore else */
        if (Object.freeze)
            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)

    } else if (this.bytes && typeof this.typeDefault === "string") {
        var buf;
        if (util.base64.test(this.typeDefault))
            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);
        else
            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);
        this.typeDefault = buf;
    }

    // take special care of maps and repeated fields
    if (this.map)
        this.defaultValue = util.emptyObject;
    else if (this.repeated)
        this.defaultValue = util.emptyArray;
    else
        this.defaultValue = this.typeDefault;

    // ensure proper value on prototype
    if (this.parent instanceof Type)
        this.parent.ctor.prototype[this.name] = this.defaultValue;

    return ReflectionObject.prototype.resolve.call(this);
};

/**
 * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).
 * @typedef FieldDecorator
 * @type {function}
 * @param {Object} prototype Target prototype
 * @param {string} fieldName Field name
 * @returns {undefined}
 */

/**
 * Field decorator (TypeScript).
 * @name Field.d
 * @function
 * @param {number} fieldId Field id
 * @param {"double"|"float"|"int32"|"uint32"|"sint32"|"fixed32"|"sfixed32"|"int64"|"uint64"|"sint64"|"fixed64"|"sfixed64"|"string"|"bool"|"bytes"|Object} fieldType Field type
 * @param {"optional"|"required"|"repeated"} [fieldRule="optional"] Field rule
 * @param {T} [defaultValue] Default value
 * @returns {FieldDecorator} Decorator function
 * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]
 */
Field.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {

    // submessage: decorate the submessage and use its name as the type
    if (typeof fieldType === "function")
        fieldType = util.decorateType(fieldType).name;

    // enum reference: create a reflected copy of the enum and keep reuseing it
    else if (fieldType && typeof fieldType === "object")
        fieldType = util.decorateEnum(fieldType).name;

    return function fieldDecorator(prototype, fieldName) {
        util.decorateType(prototype.constructor)
            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { "default": defaultValue }));
    };
};

/**
 * Field decorator (TypeScript).
 * @name Field.d
 * @function
 * @param {number} fieldId Field id
 * @param {Constructor<T>|string} fieldType Field type
 * @param {"optional"|"required"|"repeated"} [fieldRule="optional"] Field rule
 * @returns {FieldDecorator} Decorator function
 * @template T extends Message<T>
 * @variation 2
 */
// like Field.d but without a default value

// Sets up cyclic dependencies (called in index-light)
Field._configure = function configure(Type_) {
    Type = Type_;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/index-light.js":
/*!****************************************************!*\
  !*** ./node_modules/protobufjs/src/index-light.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var protobuf = module.exports = __webpack_require__(/*! ./index-minimal */ "./node_modules/protobufjs/src/index-minimal.js");

protobuf.build = "light";

/**
 * A node-style callback as used by {@link load} and {@link Root#load}.
 * @typedef LoadCallback
 * @type {function}
 * @param {Error|null} error Error, if any, otherwise `null`
 * @param {Root} [root] Root, if there hasn't been an error
 * @returns {undefined}
 */

/**
 * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.
 * @param {string|string[]} filename One or multiple files to load
 * @param {Root} root Root namespace, defaults to create a new one if omitted.
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 * @see {@link Root#load}
 */
function load(filename, root, callback) {
    if (typeof root === "function") {
        callback = root;
        root = new protobuf.Root();
    } else if (!root)
        root = new protobuf.Root();
    return root.load(filename, callback);
}

/**
 * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.
 * @name load
 * @function
 * @param {string|string[]} filename One or multiple files to load
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 * @see {@link Root#load}
 * @variation 2
 */
// function load(filename:string, callback:LoadCallback):undefined

/**
 * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.
 * @name load
 * @function
 * @param {string|string[]} filename One or multiple files to load
 * @param {Root} [root] Root namespace, defaults to create a new one if omitted.
 * @returns {Promise<Root>} Promise
 * @see {@link Root#load}
 * @variation 3
 */
// function load(filename:string, [root:Root]):Promise<Root>

protobuf.load = load;

/**
 * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).
 * @param {string|string[]} filename One or multiple files to load
 * @param {Root} [root] Root namespace, defaults to create a new one if omitted.
 * @returns {Root} Root namespace
 * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid
 * @see {@link Root#loadSync}
 */
function loadSync(filename, root) {
    if (!root)
        root = new protobuf.Root();
    return root.loadSync(filename);
}

protobuf.loadSync = loadSync;

// Serialization
protobuf.encoder          = __webpack_require__(/*! ./encoder */ "./node_modules/protobufjs/src/encoder.js");
protobuf.decoder          = __webpack_require__(/*! ./decoder */ "./node_modules/protobufjs/src/decoder.js");
protobuf.verifier         = __webpack_require__(/*! ./verifier */ "./node_modules/protobufjs/src/verifier.js");
protobuf.converter        = __webpack_require__(/*! ./converter */ "./node_modules/protobufjs/src/converter.js");

// Reflection
protobuf.ReflectionObject = __webpack_require__(/*! ./object */ "./node_modules/protobufjs/src/object.js");
protobuf.Namespace        = __webpack_require__(/*! ./namespace */ "./node_modules/protobufjs/src/namespace.js");
protobuf.Root             = __webpack_require__(/*! ./root */ "./node_modules/protobufjs/src/root.js");
protobuf.Enum             = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js");
protobuf.Type             = __webpack_require__(/*! ./type */ "./node_modules/protobufjs/src/type.js");
protobuf.Field            = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js");
protobuf.OneOf            = __webpack_require__(/*! ./oneof */ "./node_modules/protobufjs/src/oneof.js");
protobuf.MapField         = __webpack_require__(/*! ./mapfield */ "./node_modules/protobufjs/src/mapfield.js");
protobuf.Service          = __webpack_require__(/*! ./service */ "./node_modules/protobufjs/src/service.js");
protobuf.Method           = __webpack_require__(/*! ./method */ "./node_modules/protobufjs/src/method.js");

// Runtime
protobuf.Message          = __webpack_require__(/*! ./message */ "./node_modules/protobufjs/src/message.js");
protobuf.wrappers         = __webpack_require__(/*! ./wrappers */ "./node_modules/protobufjs/src/wrappers.js");

// Utility
protobuf.types            = __webpack_require__(/*! ./types */ "./node_modules/protobufjs/src/types.js");
protobuf.util             = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

// Set up possibly cyclic reflection dependencies
protobuf.ReflectionObject._configure(protobuf.Root);
protobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);
protobuf.Root._configure(protobuf.Type);
protobuf.Field._configure(protobuf.Type);


/***/ }),

/***/ "./node_modules/protobufjs/src/index-minimal.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/index-minimal.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var protobuf = exports;

/**
 * Build type, one of `"full"`, `"light"` or `"minimal"`.
 * @name build
 * @type {string}
 * @const
 */
protobuf.build = "minimal";

// Serialization
protobuf.Writer       = __webpack_require__(/*! ./writer */ "./node_modules/protobufjs/src/writer.js");
protobuf.BufferWriter = __webpack_require__(/*! ./writer_buffer */ "./node_modules/protobufjs/src/writer_buffer.js");
protobuf.Reader       = __webpack_require__(/*! ./reader */ "./node_modules/protobufjs/src/reader.js");
protobuf.BufferReader = __webpack_require__(/*! ./reader_buffer */ "./node_modules/protobufjs/src/reader_buffer.js");

// Utility
protobuf.util         = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");
protobuf.rpc          = __webpack_require__(/*! ./rpc */ "./node_modules/protobufjs/src/rpc.js");
protobuf.roots        = __webpack_require__(/*! ./roots */ "./node_modules/protobufjs/src/roots.js");
protobuf.configure    = configure;

/* istanbul ignore next */
/**
 * Reconfigures the library according to the environment.
 * @returns {undefined}
 */
function configure() {
    protobuf.util._configure();
    protobuf.Writer._configure(protobuf.BufferWriter);
    protobuf.Reader._configure(protobuf.BufferReader);
}

// Set up buffer utility according to the environment
configure();


/***/ }),

/***/ "./node_modules/protobufjs/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var protobuf = module.exports = __webpack_require__(/*! ./index-light */ "./node_modules/protobufjs/src/index-light.js");

protobuf.build = "full";

// Parser
protobuf.tokenize         = __webpack_require__(/*! ./tokenize */ "./node_modules/protobufjs/src/tokenize.js");
protobuf.parse            = __webpack_require__(/*! ./parse */ "./node_modules/protobufjs/src/parse.js");
protobuf.common           = __webpack_require__(/*! ./common */ "./node_modules/protobufjs/src/common.js");

// Configure parser
protobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);


/***/ }),

/***/ "./node_modules/protobufjs/src/mapfield.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/mapfield.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = MapField;

// extends Field
var Field = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js");
((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = "MapField";

var types   = __webpack_require__(/*! ./types */ "./node_modules/protobufjs/src/types.js"),
    util    = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

/**
 * Constructs a new map field instance.
 * @classdesc Reflected map field.
 * @extends FieldBase
 * @constructor
 * @param {string} name Unique name within its namespace
 * @param {number} id Unique id within its namespace
 * @param {string} keyType Key type
 * @param {string} type Value type
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] Comment associated with this field
 */
function MapField(name, id, keyType, type, options, comment) {
    Field.call(this, name, id, type, undefined, undefined, options, comment);

    /* istanbul ignore if */
    if (!util.isString(keyType))
        throw TypeError("keyType must be a string");

    /**
     * Key type.
     * @type {string}
     */
    this.keyType = keyType; // toJSON, marker

    /**
     * Resolved key type if not a basic type.
     * @type {ReflectionObject|null}
     */
    this.resolvedKeyType = null;

    // Overrides Field#map
    this.map = true;
}

/**
 * Map field descriptor.
 * @interface IMapField
 * @extends {IField}
 * @property {string} keyType Key type
 */

/**
 * Extension map field descriptor.
 * @interface IExtensionMapField
 * @extends IMapField
 * @property {string} extend Extended type
 */

/**
 * Constructs a map field from a map field descriptor.
 * @param {string} name Field name
 * @param {IMapField} json Map field descriptor
 * @returns {MapField} Created map field
 * @throws {TypeError} If arguments are invalid
 */
MapField.fromJSON = function fromJSON(name, json) {
    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);
};

/**
 * Converts this map field to a map field descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IMapField} Map field descriptor
 */
MapField.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "keyType" , this.keyType,
        "type"    , this.type,
        "id"      , this.id,
        "extend"  , this.extend,
        "options" , this.options,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * @override
 */
MapField.prototype.resolve = function resolve() {
    if (this.resolved)
        return this;

    // Besides a value type, map fields have a key type that may be "any scalar type except for floating point types and bytes"
    if (types.mapKey[this.keyType] === undefined)
        throw Error("invalid key type: " + this.keyType);

    return Field.prototype.resolve.call(this);
};

/**
 * Map field decorator (TypeScript).
 * @name MapField.d
 * @function
 * @param {number} fieldId Field id
 * @param {"int32"|"uint32"|"sint32"|"fixed32"|"sfixed32"|"int64"|"uint64"|"sint64"|"fixed64"|"sfixed64"|"bool"|"string"} fieldKeyType Field key type
 * @param {"double"|"float"|"int32"|"uint32"|"sint32"|"fixed32"|"sfixed32"|"int64"|"uint64"|"sint64"|"fixed64"|"sfixed64"|"bool"|"string"|"bytes"|Object|Constructor<{}>} fieldValueType Field value type
 * @returns {FieldDecorator} Decorator function
 * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }
 */
MapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {

    // submessage value: decorate the submessage and use its name as the type
    if (typeof fieldValueType === "function")
        fieldValueType = util.decorateType(fieldValueType).name;

    // enum reference value: create a reflected copy of the enum and keep reuseing it
    else if (fieldValueType && typeof fieldValueType === "object")
        fieldValueType = util.decorateEnum(fieldValueType).name;

    return function mapFieldDecorator(prototype, fieldName) {
        util.decorateType(prototype.constructor)
            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));
    };
};


/***/ }),

/***/ "./node_modules/protobufjs/src/message.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/message.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Message;

var util = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

/**
 * Constructs a new message instance.
 * @classdesc Abstract runtime message.
 * @constructor
 * @param {Properties<T>} [properties] Properties to set
 * @template T extends object = object
 */
function Message(properties) {
    // not used internally
    if (properties)
        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
            this[keys[i]] = properties[keys[i]];
}

/**
 * Reference to the reflected type.
 * @name Message.$type
 * @type {Type}
 * @readonly
 */

/**
 * Reference to the reflected type.
 * @name Message#$type
 * @type {Type}
 * @readonly
 */

/*eslint-disable valid-jsdoc*/

/**
 * Creates a new message of this type using the specified properties.
 * @param {Object.<string,*>} [properties] Properties to set
 * @returns {Message<T>} Message instance
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.create = function create(properties) {
    return this.$type.create(properties);
};

/**
 * Encodes a message of this type.
 * @param {T|Object.<string,*>} message Message to encode
 * @param {Writer} [writer] Writer to use
 * @returns {Writer} Writer
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.encode = function encode(message, writer) {
    return this.$type.encode(message, writer);
};

/**
 * Encodes a message of this type preceeded by its length as a varint.
 * @param {T|Object.<string,*>} message Message to encode
 * @param {Writer} [writer] Writer to use
 * @returns {Writer} Writer
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.encodeDelimited = function encodeDelimited(message, writer) {
    return this.$type.encodeDelimited(message, writer);
};

/**
 * Decodes a message of this type.
 * @name Message.decode
 * @function
 * @param {Reader|Uint8Array} reader Reader or buffer to decode
 * @returns {T} Decoded message
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.decode = function decode(reader) {
    return this.$type.decode(reader);
};

/**
 * Decodes a message of this type preceeded by its length as a varint.
 * @name Message.decodeDelimited
 * @function
 * @param {Reader|Uint8Array} reader Reader or buffer to decode
 * @returns {T} Decoded message
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.decodeDelimited = function decodeDelimited(reader) {
    return this.$type.decodeDelimited(reader);
};

/**
 * Verifies a message of this type.
 * @name Message.verify
 * @function
 * @param {Object.<string,*>} message Plain object to verify
 * @returns {string|null} `null` if valid, otherwise the reason why it is not
 */
Message.verify = function verify(message) {
    return this.$type.verify(message);
};

/**
 * Creates a new message of this type from a plain object. Also converts values to their respective internal types.
 * @param {Object.<string,*>} object Plain object
 * @returns {T} Message instance
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.fromObject = function fromObject(object) {
    return this.$type.fromObject(object);
};

/**
 * Creates a plain object from a message of this type. Also converts values to other types if specified.
 * @param {T} message Message instance
 * @param {IConversionOptions} [options] Conversion options
 * @returns {Object.<string,*>} Plain object
 * @template T extends Message<T>
 * @this Constructor<T>
 */
Message.toObject = function toObject(message, options) {
    return this.$type.toObject(message, options);
};

/**
 * Converts this message to JSON.
 * @returns {Object.<string,*>} JSON object
 */
Message.prototype.toJSON = function toJSON() {
    return this.$type.toObject(this, util.toJSONOptions);
};

/*eslint-enable valid-jsdoc*/

/***/ }),

/***/ "./node_modules/protobufjs/src/method.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/method.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Method;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(/*! ./object */ "./node_modules/protobufjs/src/object.js");
((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = "Method";

var util = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

/**
 * Constructs a new service method instance.
 * @classdesc Reflected service method.
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Method name
 * @param {string|undefined} type Method type, usually `"rpc"`
 * @param {string} requestType Request message type
 * @param {string} responseType Response message type
 * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed
 * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] The comment for this method
 * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object
 */
function Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {

    /* istanbul ignore next */
    if (util.isObject(requestStream)) {
        options = requestStream;
        requestStream = responseStream = undefined;
    } else if (util.isObject(responseStream)) {
        options = responseStream;
        responseStream = undefined;
    }

    /* istanbul ignore if */
    if (!(type === undefined || util.isString(type)))
        throw TypeError("type must be a string");

    /* istanbul ignore if */
    if (!util.isString(requestType))
        throw TypeError("requestType must be a string");

    /* istanbul ignore if */
    if (!util.isString(responseType))
        throw TypeError("responseType must be a string");

    ReflectionObject.call(this, name, options);

    /**
     * Method type.
     * @type {string}
     */
    this.type = type || "rpc"; // toJSON

    /**
     * Request type.
     * @type {string}
     */
    this.requestType = requestType; // toJSON, marker

    /**
     * Whether requests are streamed or not.
     * @type {boolean|undefined}
     */
    this.requestStream = requestStream ? true : undefined; // toJSON

    /**
     * Response type.
     * @type {string}
     */
    this.responseType = responseType; // toJSON

    /**
     * Whether responses are streamed or not.
     * @type {boolean|undefined}
     */
    this.responseStream = responseStream ? true : undefined; // toJSON

    /**
     * Resolved request type.
     * @type {Type|null}
     */
    this.resolvedRequestType = null;

    /**
     * Resolved response type.
     * @type {Type|null}
     */
    this.resolvedResponseType = null;

    /**
     * Comment for this method
     * @type {string|null}
     */
    this.comment = comment;

    /**
     * Options properly parsed into an object
     */
    this.parsedOptions = parsedOptions;
}

/**
 * Method descriptor.
 * @interface IMethod
 * @property {string} [type="rpc"] Method type
 * @property {string} requestType Request type
 * @property {string} responseType Response type
 * @property {boolean} [requestStream=false] Whether requests are streamed
 * @property {boolean} [responseStream=false] Whether responses are streamed
 * @property {Object.<string,*>} [options] Method options
 * @property {string} comment Method comments
 * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object
 */

/**
 * Constructs a method from a method descriptor.
 * @param {string} name Method name
 * @param {IMethod} json Method descriptor
 * @returns {Method} Created method
 * @throws {TypeError} If arguments are invalid
 */
Method.fromJSON = function fromJSON(name, json) {
    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);
};

/**
 * Converts this method to a method descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IMethod} Method descriptor
 */
Method.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "type"           , this.type !== "rpc" && /* istanbul ignore next */ this.type || undefined,
        "requestType"    , this.requestType,
        "requestStream"  , this.requestStream,
        "responseType"   , this.responseType,
        "responseStream" , this.responseStream,
        "options"        , this.options,
        "comment"        , keepComments ? this.comment : undefined,
        "parsedOptions"  , this.parsedOptions,
    ]);
};

/**
 * @override
 */
Method.prototype.resolve = function resolve() {

    /* istanbul ignore if */
    if (this.resolved)
        return this;

    this.resolvedRequestType = this.parent.lookupType(this.requestType);
    this.resolvedResponseType = this.parent.lookupType(this.responseType);

    return ReflectionObject.prototype.resolve.call(this);
};


/***/ }),

/***/ "./node_modules/protobufjs/src/namespace.js":
/*!**************************************************!*\
  !*** ./node_modules/protobufjs/src/namespace.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Namespace;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(/*! ./object */ "./node_modules/protobufjs/src/object.js");
((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = "Namespace";

var Field    = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js"),
    OneOf    = __webpack_require__(/*! ./oneof */ "./node_modules/protobufjs/src/oneof.js"),
    util     = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

var Type,    // cyclic
    Service,
    Enum;

/**
 * Constructs a new namespace instance.
 * @name Namespace
 * @classdesc Reflected namespace.
 * @extends NamespaceBase
 * @constructor
 * @param {string} name Namespace name
 * @param {Object.<string,*>} [options] Declared options
 */

/**
 * Constructs a namespace from JSON.
 * @memberof Namespace
 * @function
 * @param {string} name Namespace name
 * @param {Object.<string,*>} json JSON object
 * @returns {Namespace} Created namespace
 * @throws {TypeError} If arguments are invalid
 */
Namespace.fromJSON = function fromJSON(name, json) {
    return new Namespace(name, json.options).addJSON(json.nested);
};

/**
 * Converts an array of reflection objects to JSON.
 * @memberof Namespace
 * @param {ReflectionObject[]} array Object array
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty
 */
function arrayToJSON(array, toJSONOptions) {
    if (!(array && array.length))
        return undefined;
    var obj = {};
    for (var i = 0; i < array.length; ++i)
        obj[array[i].name] = array[i].toJSON(toJSONOptions);
    return obj;
}

Namespace.arrayToJSON = arrayToJSON;

/**
 * Tests if the specified id is reserved.
 * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names
 * @param {number} id Id to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Namespace.isReservedId = function isReservedId(reserved, id) {
    if (reserved)
        for (var i = 0; i < reserved.length; ++i)
            if (typeof reserved[i] !== "string" && reserved[i][0] <= id && reserved[i][1] > id)
                return true;
    return false;
};

/**
 * Tests if the specified name is reserved.
 * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Namespace.isReservedName = function isReservedName(reserved, name) {
    if (reserved)
        for (var i = 0; i < reserved.length; ++i)
            if (reserved[i] === name)
                return true;
    return false;
};

/**
 * Not an actual constructor. Use {@link Namespace} instead.
 * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.
 * @exports NamespaceBase
 * @extends ReflectionObject
 * @abstract
 * @constructor
 * @param {string} name Namespace name
 * @param {Object.<string,*>} [options] Declared options
 * @see {@link Namespace}
 */
function Namespace(name, options) {
    ReflectionObject.call(this, name, options);

    /**
     * Nested objects by name.
     * @type {Object.<string,ReflectionObject>|undefined}
     */
    this.nested = undefined; // toJSON

    /**
     * Cached nested objects as an array.
     * @type {ReflectionObject[]|null}
     * @private
     */
    this._nestedArray = null;
}

function clearCache(namespace) {
    namespace._nestedArray = null;
    return namespace;
}

/**
 * Nested objects of this namespace as an array for iteration.
 * @name NamespaceBase#nestedArray
 * @type {ReflectionObject[]}
 * @readonly
 */
Object.defineProperty(Namespace.prototype, "nestedArray", {
    get: function() {
        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));
    }
});

/**
 * Namespace descriptor.
 * @interface INamespace
 * @property {Object.<string,*>} [options] Namespace options
 * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors
 */

/**
 * Any extension field descriptor.
 * @typedef AnyExtensionField
 * @type {IExtensionField|IExtensionMapField}
 */

/**
 * Any nested object descriptor.
 * @typedef AnyNestedObject
 * @type {IEnum|IType|IService|AnyExtensionField|INamespace}
 */
// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)

/**
 * Converts this namespace to a namespace descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {INamespace} Namespace descriptor
 */
Namespace.prototype.toJSON = function toJSON(toJSONOptions) {
    return util.toObject([
        "options" , this.options,
        "nested"  , arrayToJSON(this.nestedArray, toJSONOptions)
    ]);
};

/**
 * Adds nested objects to this namespace from nested object descriptors.
 * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors
 * @returns {Namespace} `this`
 */
Namespace.prototype.addJSON = function addJSON(nestedJson) {
    var ns = this;
    /* istanbul ignore else */
    if (nestedJson) {
        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {
            nested = nestedJson[names[i]];
            ns.add( // most to least likely
                ( nested.fields !== undefined
                ? Type.fromJSON
                : nested.values !== undefined
                ? Enum.fromJSON
                : nested.methods !== undefined
                ? Service.fromJSON
                : nested.id !== undefined
                ? Field.fromJSON
                : Namespace.fromJSON )(names[i], nested)
            );
        }
    }
    return this;
};

/**
 * Gets the nested object of the specified name.
 * @param {string} name Nested object name
 * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist
 */
Namespace.prototype.get = function get(name) {
    return this.nested && this.nested[name]
        || null;
};

/**
 * Gets the values of the nested {@link Enum|enum} of the specified name.
 * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.
 * @param {string} name Nested enum name
 * @returns {Object.<string,number>} Enum values
 * @throws {Error} If there is no such enum
 */
Namespace.prototype.getEnum = function getEnum(name) {
    if (this.nested && this.nested[name] instanceof Enum)
        return this.nested[name].values;
    throw Error("no such enum: " + name);
};

/**
 * Adds a nested object to this namespace.
 * @param {ReflectionObject} object Nested object to add
 * @returns {Namespace} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If there is already a nested object with this name
 */
Namespace.prototype.add = function add(object) {

    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace || object instanceof OneOf))
        throw TypeError("object must be a valid nested object");

    if (!this.nested)
        this.nested = {};
    else {
        var prev = this.get(object.name);
        if (prev) {
            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {
                // replace plain namespace but keep existing nested elements and options
                var nested = prev.nestedArray;
                for (var i = 0; i < nested.length; ++i)
                    object.add(nested[i]);
                this.remove(prev);
                if (!this.nested)
                    this.nested = {};
                object.setOptions(prev.options, true);

            } else
                throw Error("duplicate name '" + object.name + "' in " + this);
        }
    }
    this.nested[object.name] = object;
    object.onAdd(this);
    return clearCache(this);
};

/**
 * Removes a nested object from this namespace.
 * @param {ReflectionObject} object Nested object to remove
 * @returns {Namespace} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If `object` is not a member of this namespace
 */
Namespace.prototype.remove = function remove(object) {

    if (!(object instanceof ReflectionObject))
        throw TypeError("object must be a ReflectionObject");
    if (object.parent !== this)
        throw Error(object + " is not a member of " + this);

    delete this.nested[object.name];
    if (!Object.keys(this.nested).length)
        this.nested = undefined;

    object.onRemove(this);
    return clearCache(this);
};

/**
 * Defines additial namespaces within this one if not yet existing.
 * @param {string|string[]} path Path to create
 * @param {*} [json] Nested types to create from JSON
 * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty
 */
Namespace.prototype.define = function define(path, json) {

    if (util.isString(path))
        path = path.split(".");
    else if (!Array.isArray(path))
        throw TypeError("illegal path");
    if (path && path.length && path[0] === "")
        throw Error("path must be relative");

    var ptr = this;
    while (path.length > 0) {
        var part = path.shift();
        if (ptr.nested && ptr.nested[part]) {
            ptr = ptr.nested[part];
            if (!(ptr instanceof Namespace))
                throw Error("path conflicts with non-namespace objects");
        } else
            ptr.add(ptr = new Namespace(part));
    }
    if (json)
        ptr.addJSON(json);
    return ptr;
};

/**
 * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.
 * @returns {Namespace} `this`
 */
Namespace.prototype.resolveAll = function resolveAll() {
    var nested = this.nestedArray, i = 0;
    while (i < nested.length)
        if (nested[i] instanceof Namespace)
            nested[i++].resolveAll();
        else
            nested[i++].resolve();
    return this.resolve();
};

/**
 * Recursively looks up the reflection object matching the specified path in the scope of this namespace.
 * @param {string|string[]} path Path to look up
 * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.
 * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked
 * @returns {ReflectionObject|null} Looked up object or `null` if none could be found
 */
Namespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {

    /* istanbul ignore next */
    if (typeof filterTypes === "boolean") {
        parentAlreadyChecked = filterTypes;
        filterTypes = undefined;
    } else if (filterTypes && !Array.isArray(filterTypes))
        filterTypes = [ filterTypes ];

    if (util.isString(path) && path.length) {
        if (path === ".")
            return this.root;
        path = path.split(".");
    } else if (!path.length)
        return this;

    // Start at root if path is absolute
    if (path[0] === "")
        return this.root.lookup(path.slice(1), filterTypes);

    // Test if the first part matches any nested object, and if so, traverse if path contains more
    var found = this.get(path[0]);
    if (found) {
        if (path.length === 1) {
            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)
                return found;
        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))
            return found;

    // Otherwise try each nested namespace
    } else
        for (var i = 0; i < this.nestedArray.length; ++i)
            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))
                return found;

    // If there hasn't been a match, try again at the parent
    if (this.parent === null || parentAlreadyChecked)
        return null;
    return this.parent.lookup(path, filterTypes);
};

/**
 * Looks up the reflection object at the specified path, relative to this namespace.
 * @name NamespaceBase#lookup
 * @function
 * @param {string|string[]} path Path to look up
 * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked
 * @returns {ReflectionObject|null} Looked up object or `null` if none could be found
 * @variation 2
 */
// lookup(path: string, [parentAlreadyChecked: boolean])

/**
 * Looks up the {@link Type|type} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Type} Looked up type
 * @throws {Error} If `path` does not point to a type
 */
Namespace.prototype.lookupType = function lookupType(path) {
    var found = this.lookup(path, [ Type ]);
    if (!found)
        throw Error("no such type: " + path);
    return found;
};

/**
 * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Enum} Looked up enum
 * @throws {Error} If `path` does not point to an enum
 */
Namespace.prototype.lookupEnum = function lookupEnum(path) {
    var found = this.lookup(path, [ Enum ]);
    if (!found)
        throw Error("no such Enum '" + path + "' in " + this);
    return found;
};

/**
 * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Type} Looked up type or enum
 * @throws {Error} If `path` does not point to a type or enum
 */
Namespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {
    var found = this.lookup(path, [ Type, Enum ]);
    if (!found)
        throw Error("no such Type or Enum '" + path + "' in " + this);
    return found;
};

/**
 * Looks up the {@link Service|service} at the specified path, relative to this namespace.
 * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.
 * @param {string|string[]} path Path to look up
 * @returns {Service} Looked up service
 * @throws {Error} If `path` does not point to a service
 */
Namespace.prototype.lookupService = function lookupService(path) {
    var found = this.lookup(path, [ Service ]);
    if (!found)
        throw Error("no such Service '" + path + "' in " + this);
    return found;
};

// Sets up cyclic dependencies (called in index-light)
Namespace._configure = function(Type_, Service_, Enum_) {
    Type    = Type_;
    Service = Service_;
    Enum    = Enum_;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/object.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/object.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = ReflectionObject;

ReflectionObject.className = "ReflectionObject";

var util = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

var Root; // cyclic

/**
 * Constructs a new reflection object instance.
 * @classdesc Base class of all reflection objects.
 * @constructor
 * @param {string} name Object name
 * @param {Object.<string,*>} [options] Declared options
 * @abstract
 */
function ReflectionObject(name, options) {

    if (!util.isString(name))
        throw TypeError("name must be a string");

    if (options && !util.isObject(options))
        throw TypeError("options must be an object");

    /**
     * Options.
     * @type {Object.<string,*>|undefined}
     */
    this.options = options; // toJSON

    /**
     * Parsed Options.
     * @type {Array.<Object.<string,*>>|undefined}
     */
    this.parsedOptions = null;

    /**
     * Unique name within its namespace.
     * @type {string}
     */
    this.name = name;

    /**
     * Parent namespace.
     * @type {Namespace|null}
     */
    this.parent = null;

    /**
     * Whether already resolved or not.
     * @type {boolean}
     */
    this.resolved = false;

    /**
     * Comment text, if any.
     * @type {string|null}
     */
    this.comment = null;

    /**
     * Defining file name.
     * @type {string|null}
     */
    this.filename = null;
}

Object.defineProperties(ReflectionObject.prototype, {

    /**
     * Reference to the root namespace.
     * @name ReflectionObject#root
     * @type {Root}
     * @readonly
     */
    root: {
        get: function() {
            var ptr = this;
            while (ptr.parent !== null)
                ptr = ptr.parent;
            return ptr;
        }
    },

    /**
     * Full name including leading dot.
     * @name ReflectionObject#fullName
     * @type {string}
     * @readonly
     */
    fullName: {
        get: function() {
            var path = [ this.name ],
                ptr = this.parent;
            while (ptr) {
                path.unshift(ptr.name);
                ptr = ptr.parent;
            }
            return path.join(".");
        }
    }
});

/**
 * Converts this reflection object to its descriptor representation.
 * @returns {Object.<string,*>} Descriptor
 * @abstract
 */
ReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {
    throw Error(); // not implemented, shouldn't happen
};

/**
 * Called when this object is added to a parent.
 * @param {ReflectionObject} parent Parent added to
 * @returns {undefined}
 */
ReflectionObject.prototype.onAdd = function onAdd(parent) {
    if (this.parent && this.parent !== parent)
        this.parent.remove(this);
    this.parent = parent;
    this.resolved = false;
    var root = parent.root;
    if (root instanceof Root)
        root._handleAdd(this);
};

/**
 * Called when this object is removed from a parent.
 * @param {ReflectionObject} parent Parent removed from
 * @returns {undefined}
 */
ReflectionObject.prototype.onRemove = function onRemove(parent) {
    var root = parent.root;
    if (root instanceof Root)
        root._handleRemove(this);
    this.parent = null;
    this.resolved = false;
};

/**
 * Resolves this objects type references.
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.resolve = function resolve() {
    if (this.resolved)
        return this;
    if (this.root instanceof Root)
        this.resolved = true; // only if part of a root
    return this;
};

/**
 * Gets an option value.
 * @param {string} name Option name
 * @returns {*} Option value or `undefined` if not set
 */
ReflectionObject.prototype.getOption = function getOption(name) {
    if (this.options)
        return this.options[name];
    return undefined;
};

/**
 * Sets an option.
 * @param {string} name Option name
 * @param {*} value Option value
 * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {
    if (!ifNotSet || !this.options || this.options[name] === undefined)
        (this.options || (this.options = {}))[name] = value;
    return this;
};

/**
 * Sets a parsed option.
 * @param {string} name parsed Option name
 * @param {*} value Option value
 * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\empty, will add a new option with that value
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {
    if (!this.parsedOptions) {
        this.parsedOptions = [];
    }
    var parsedOptions = this.parsedOptions;
    if (propName) {
        // If setting a sub property of an option then try to merge it
        // with an existing option
        var opt = parsedOptions.find(function (opt) {
            return Object.prototype.hasOwnProperty.call(opt, name);
        });
        if (opt) {
            // If we found an existing option - just merge the property value
            var newValue = opt[name];
            util.setProperty(newValue, propName, value);
        } else {
            // otherwise, create a new option, set it's property and add it to the list
            opt = {};
            opt[name] = util.setProperty({}, propName, value);
            parsedOptions.push(opt);
        }
    } else {
        // Always create a new option when setting the value of the option itself
        var newOpt = {};
        newOpt[name] = value;
        parsedOptions.push(newOpt);
    }
    return this;
};

/**
 * Sets multiple options.
 * @param {Object.<string,*>} options Options to set
 * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set
 * @returns {ReflectionObject} `this`
 */
ReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {
    if (options)
        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)
            this.setOption(keys[i], options[keys[i]], ifNotSet);
    return this;
};

/**
 * Converts this instance to its string representation.
 * @returns {string} Class name[, space, full name]
 */
ReflectionObject.prototype.toString = function toString() {
    var className = this.constructor.className,
        fullName  = this.fullName;
    if (fullName.length)
        return className + " " + fullName;
    return className;
};

// Sets up cyclic dependencies (called in index-light)
ReflectionObject._configure = function(Root_) {
    Root = Root_;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/oneof.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/oneof.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = OneOf;

// extends ReflectionObject
var ReflectionObject = __webpack_require__(/*! ./object */ "./node_modules/protobufjs/src/object.js");
((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = "OneOf";

var Field = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js"),
    util  = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

/**
 * Constructs a new oneof instance.
 * @classdesc Reflected oneof.
 * @extends ReflectionObject
 * @constructor
 * @param {string} name Oneof name
 * @param {string[]|Object.<string,*>} [fieldNames] Field names
 * @param {Object.<string,*>} [options] Declared options
 * @param {string} [comment] Comment associated with this field
 */
function OneOf(name, fieldNames, options, comment) {
    if (!Array.isArray(fieldNames)) {
        options = fieldNames;
        fieldNames = undefined;
    }
    ReflectionObject.call(this, name, options);

    /* istanbul ignore if */
    if (!(fieldNames === undefined || Array.isArray(fieldNames)))
        throw TypeError("fieldNames must be an Array");

    /**
     * Field names that belong to this oneof.
     * @type {string[]}
     */
    this.oneof = fieldNames || []; // toJSON, marker

    /**
     * Fields that belong to this oneof as an array for iteration.
     * @type {Field[]}
     * @readonly
     */
    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent

    /**
     * Comment for this field.
     * @type {string|null}
     */
    this.comment = comment;
}

/**
 * Oneof descriptor.
 * @interface IOneOf
 * @property {Array.<string>} oneof Oneof field names
 * @property {Object.<string,*>} [options] Oneof options
 */

/**
 * Constructs a oneof from a oneof descriptor.
 * @param {string} name Oneof name
 * @param {IOneOf} json Oneof descriptor
 * @returns {OneOf} Created oneof
 * @throws {TypeError} If arguments are invalid
 */
OneOf.fromJSON = function fromJSON(name, json) {
    return new OneOf(name, json.oneof, json.options, json.comment);
};

/**
 * Converts this oneof to a oneof descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IOneOf} Oneof descriptor
 */
OneOf.prototype.toJSON = function toJSON(toJSONOptions) {
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options" , this.options,
        "oneof"   , this.oneof,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * Adds the fields of the specified oneof to the parent if not already done so.
 * @param {OneOf} oneof The oneof
 * @returns {undefined}
 * @inner
 * @ignore
 */
function addFieldsToParent(oneof) {
    if (oneof.parent)
        for (var i = 0; i < oneof.fieldsArray.length; ++i)
            if (!oneof.fieldsArray[i].parent)
                oneof.parent.add(oneof.fieldsArray[i]);
}

/**
 * Adds a field to this oneof and removes it from its current parent, if any.
 * @param {Field} field Field to add
 * @returns {OneOf} `this`
 */
OneOf.prototype.add = function add(field) {

    /* istanbul ignore if */
    if (!(field instanceof Field))
        throw TypeError("field must be a Field");

    if (field.parent && field.parent !== this.parent)
        field.parent.remove(field);
    this.oneof.push(field.name);
    this.fieldsArray.push(field);
    field.partOf = this; // field.parent remains null
    addFieldsToParent(this);
    return this;
};

/**
 * Removes a field from this oneof and puts it back to the oneof's parent.
 * @param {Field} field Field to remove
 * @returns {OneOf} `this`
 */
OneOf.prototype.remove = function remove(field) {

    /* istanbul ignore if */
    if (!(field instanceof Field))
        throw TypeError("field must be a Field");

    var index = this.fieldsArray.indexOf(field);

    /* istanbul ignore if */
    if (index < 0)
        throw Error(field + " is not a member of " + this);

    this.fieldsArray.splice(index, 1);
    index = this.oneof.indexOf(field.name);

    /* istanbul ignore else */
    if (index > -1) // theoretical
        this.oneof.splice(index, 1);

    field.partOf = null;
    return this;
};

/**
 * @override
 */
OneOf.prototype.onAdd = function onAdd(parent) {
    ReflectionObject.prototype.onAdd.call(this, parent);
    var self = this;
    // Collect present fields
    for (var i = 0; i < this.oneof.length; ++i) {
        var field = parent.get(this.oneof[i]);
        if (field && !field.partOf) {
            field.partOf = self;
            self.fieldsArray.push(field);
        }
    }
    // Add not yet present fields
    addFieldsToParent(this);
};

/**
 * @override
 */
OneOf.prototype.onRemove = function onRemove(parent) {
    for (var i = 0, field; i < this.fieldsArray.length; ++i)
        if ((field = this.fieldsArray[i]).parent)
            field.parent.remove(field);
    ReflectionObject.prototype.onRemove.call(this, parent);
};

/**
 * Decorator function as returned by {@link OneOf.d} (TypeScript).
 * @typedef OneOfDecorator
 * @type {function}
 * @param {Object} prototype Target prototype
 * @param {string} oneofName OneOf name
 * @returns {undefined}
 */

/**
 * OneOf decorator (TypeScript).
 * @function
 * @param {...string} fieldNames Field names
 * @returns {OneOfDecorator} Decorator function
 * @template T extends string
 */
OneOf.d = function decorateOneOf() {
    var fieldNames = new Array(arguments.length),
        index = 0;
    while (index < arguments.length)
        fieldNames[index] = arguments[index++];
    return function oneOfDecorator(prototype, oneofName) {
        util.decorateType(prototype.constructor)
            .add(new OneOf(oneofName, fieldNames));
        Object.defineProperty(prototype, oneofName, {
            get: util.oneOfGetter(fieldNames),
            set: util.oneOfSetter(fieldNames)
        });
    };
};


/***/ }),

/***/ "./node_modules/protobufjs/src/parse.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/parse.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = parse;

parse.filename = null;
parse.defaults = { keepCase: false };

var tokenize  = __webpack_require__(/*! ./tokenize */ "./node_modules/protobufjs/src/tokenize.js"),
    Root      = __webpack_require__(/*! ./root */ "./node_modules/protobufjs/src/root.js"),
    Type      = __webpack_require__(/*! ./type */ "./node_modules/protobufjs/src/type.js"),
    Field     = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js"),
    MapField  = __webpack_require__(/*! ./mapfield */ "./node_modules/protobufjs/src/mapfield.js"),
    OneOf     = __webpack_require__(/*! ./oneof */ "./node_modules/protobufjs/src/oneof.js"),
    Enum      = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    Service   = __webpack_require__(/*! ./service */ "./node_modules/protobufjs/src/service.js"),
    Method    = __webpack_require__(/*! ./method */ "./node_modules/protobufjs/src/method.js"),
    types     = __webpack_require__(/*! ./types */ "./node_modules/protobufjs/src/types.js"),
    util      = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

var base10Re    = /^[1-9][0-9]*$/,
    base10NegRe = /^-?[1-9][0-9]*$/,
    base16Re    = /^0[x][0-9a-fA-F]+$/,
    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,
    base8Re     = /^0[0-7]+$/,
    base8NegRe  = /^-?0[0-7]+$/,
    numberRe    = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,
    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,
    typeRefRe   = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,
    fqTypeRefRe = /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;

/**
 * Result object returned from {@link parse}.
 * @interface IParserResult
 * @property {string|undefined} package Package name, if declared
 * @property {string[]|undefined} imports Imports, if any
 * @property {string[]|undefined} weakImports Weak imports, if any
 * @property {string|undefined} syntax Syntax, if specified (either `"proto2"` or `"proto3"`)
 * @property {Root} root Populated root instance
 */

/**
 * Options modifying the behavior of {@link parse}.
 * @interface IParseOptions
 * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case
 * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.
 * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.
 */

/**
 * Options modifying the behavior of JSON serialization.
 * @interface IToJSONOptions
 * @property {boolean} [keepComments=false] Serializes comments.
 */

/**
 * Parses the given .proto source and returns an object with the parsed contents.
 * @param {string} source Source contents
 * @param {Root} root Root to populate
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {IParserResult} Parser result
 * @property {string} filename=null Currently processing file name for error reporting, if known
 * @property {IParseOptions} defaults Default {@link IParseOptions}
 */
function parse(source, root, options) {
    /* eslint-disable callback-return */
    if (!(root instanceof Root)) {
        options = root;
        root = new Root();
    }
    if (!options)
        options = parse.defaults;

    var preferTrailingComment = options.preferTrailingComment || false;
    var tn = tokenize(source, options.alternateCommentMode || false),
        next = tn.next,
        push = tn.push,
        peek = tn.peek,
        skip = tn.skip,
        cmnt = tn.cmnt;

    var head = true,
        pkg,
        imports,
        weakImports,
        syntax,
        isProto3 = false;

    var ptr = root;

    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;

    /* istanbul ignore next */
    function illegal(token, name, insideTryCatch) {
        var filename = parse.filename;
        if (!insideTryCatch)
            parse.filename = null;
        return Error("illegal " + (name || "token") + " '" + token + "' (" + (filename ? filename + ", " : "") + "line " + tn.line + ")");
    }

    function readString() {
        var values = [],
            token;
        do {
            /* istanbul ignore if */
            if ((token = next()) !== "\"" && token !== "'")
                throw illegal(token);

            values.push(next());
            skip(token);
            token = peek();
        } while (token === "\"" || token === "'");
        return values.join("");
    }

    function readValue(acceptTypeRef) {
        var token = next();
        switch (token) {
            case "'":
            case "\"":
                push(token);
                return readString();
            case "true": case "TRUE":
                return true;
            case "false": case "FALSE":
                return false;
        }
        try {
            return parseNumber(token, /* insideTryCatch */ true);
        } catch (e) {

            /* istanbul ignore else */
            if (acceptTypeRef && typeRefRe.test(token))
                return token;

            /* istanbul ignore next */
            throw illegal(token, "value");
        }
    }

    function readRanges(target, acceptStrings) {
        var token, start;
        do {
            if (acceptStrings && ((token = peek()) === "\"" || token === "'"))
                target.push(readString());
            else
                target.push([ start = parseId(next()), skip("to", true) ? parseId(next()) : start ]);
        } while (skip(",", true));
        skip(";");
    }

    function parseNumber(token, insideTryCatch) {
        var sign = 1;
        if (token.charAt(0) === "-") {
            sign = -1;
            token = token.substring(1);
        }
        switch (token) {
            case "inf": case "INF": case "Inf":
                return sign * Infinity;
            case "nan": case "NAN": case "Nan": case "NaN":
                return NaN;
            case "0":
                return 0;
        }
        if (base10Re.test(token))
            return sign * parseInt(token, 10);
        if (base16Re.test(token))
            return sign * parseInt(token, 16);
        if (base8Re.test(token))
            return sign * parseInt(token, 8);

        /* istanbul ignore else */
        if (numberRe.test(token))
            return sign * parseFloat(token);

        /* istanbul ignore next */
        throw illegal(token, "number", insideTryCatch);
    }

    function parseId(token, acceptNegative) {
        switch (token) {
            case "max": case "MAX": case "Max":
                return 536870911;
            case "0":
                return 0;
        }

        /* istanbul ignore if */
        if (!acceptNegative && token.charAt(0) === "-")
            throw illegal(token, "id");

        if (base10NegRe.test(token))
            return parseInt(token, 10);
        if (base16NegRe.test(token))
            return parseInt(token, 16);

        /* istanbul ignore else */
        if (base8NegRe.test(token))
            return parseInt(token, 8);

        /* istanbul ignore next */
        throw illegal(token, "id");
    }

    function parsePackage() {

        /* istanbul ignore if */
        if (pkg !== undefined)
            throw illegal("package");

        pkg = next();

        /* istanbul ignore if */
        if (!typeRefRe.test(pkg))
            throw illegal(pkg, "name");

        ptr = ptr.define(pkg);
        skip(";");
    }

    function parseImport() {
        var token = peek();
        var whichImports;
        switch (token) {
            case "weak":
                whichImports = weakImports || (weakImports = []);
                next();
                break;
            case "public":
                next();
                // eslint-disable-line no-fallthrough
            default:
                whichImports = imports || (imports = []);
                break;
        }
        token = readString();
        skip(";");
        whichImports.push(token);
    }

    function parseSyntax() {
        skip("=");
        syntax = readString();
        isProto3 = syntax === "proto3";

        /* istanbul ignore if */
        if (!isProto3 && syntax !== "proto2")
            throw illegal(syntax, "syntax");

        skip(";");
    }

    function parseCommon(parent, token) {
        switch (token) {

            case "option":
                parseOption(parent, token);
                skip(";");
                return true;

            case "message":
                parseType(parent, token);
                return true;

            case "enum":
                parseEnum(parent, token);
                return true;

            case "service":
                parseService(parent, token);
                return true;

            case "extend":
                parseExtension(parent, token);
                return true;
        }
        return false;
    }

    function ifBlock(obj, fnIf, fnElse) {
        var trailingLine = tn.line;
        if (obj) {
            if(typeof obj.comment !== "string") {
              obj.comment = cmnt(); // try block-type comment
            }
            obj.filename = parse.filename;
        }
        if (skip("{", true)) {
            var token;
            while ((token = next()) !== "}")
                fnIf(token);
            skip(";", true);
        } else {
            if (fnElse)
                fnElse();
            skip(";");
            if (obj && (typeof obj.comment !== "string" || preferTrailingComment))
                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment
        }
    }

    function parseType(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "type name");

        var type = new Type(token);
        ifBlock(type, function parseType_block(token) {
            if (parseCommon(type, token))
                return;

            switch (token) {

                case "map":
                    parseMapField(type, token);
                    break;

                case "required":
                case "repeated":
                    parseField(type, token);
                    break;

                case "optional":
                    /* istanbul ignore if */
                    if (isProto3) {
                        parseField(type, "proto3_optional");
                    } else {
                        parseField(type, "optional");
                    }
                    break;

                case "oneof":
                    parseOneOf(type, token);
                    break;

                case "extensions":
                    readRanges(type.extensions || (type.extensions = []));
                    break;

                case "reserved":
                    readRanges(type.reserved || (type.reserved = []), true);
                    break;

                default:
                    /* istanbul ignore if */
                    if (!isProto3 || !typeRefRe.test(token))
                        throw illegal(token);

                    push(token);
                    parseField(type, "optional");
                    break;
            }
        });
        parent.add(type);
    }

    function parseField(parent, rule, extend) {
        var type = next();
        if (type === "group") {
            parseGroup(parent, rule);
            return;
        }

        /* istanbul ignore if */
        if (!typeRefRe.test(type))
            throw illegal(type, "type");

        var name = next();

        /* istanbul ignore if */
        if (!nameRe.test(name))
            throw illegal(name, "name");

        name = applyCase(name);
        skip("=");

        var field = new Field(name, parseId(next()), type, rule, extend);
        ifBlock(field, function parseField_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(field, token);
                skip(";");
            } else
                throw illegal(token);

        }, function parseField_line() {
            parseInlineOptions(field);
        });

        if (rule === "proto3_optional") {
            // for proto3 optional fields, we create a single-member Oneof to mimic "optional" behavior
            var oneof = new OneOf("_" + name);
            field.setOption("proto3_optional", true);
            oneof.add(field);
            parent.add(oneof);
        } else {
            parent.add(field);
        }

        // JSON defaults to packed=true if not set so we have to set packed=false explicity when
        // parsing proto2 descriptors without the option, where applicable. This must be done for
        // all known packable types and anything that could be an enum (= is not a basic type).
        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))
            field.setOption("packed", false, /* ifNotSet */ true);
    }

    function parseGroup(parent, rule) {
        var name = next();

        /* istanbul ignore if */
        if (!nameRe.test(name))
            throw illegal(name, "name");

        var fieldName = util.lcFirst(name);
        if (name === fieldName)
            name = util.ucFirst(name);
        skip("=");
        var id = parseId(next());
        var type = new Type(name);
        type.group = true;
        var field = new Field(fieldName, id, name, rule);
        field.filename = parse.filename;
        ifBlock(type, function parseGroup_block(token) {
            switch (token) {

                case "option":
                    parseOption(type, token);
                    skip(";");
                    break;

                case "required":
                case "repeated":
                    parseField(type, token);
                    break;

                case "optional":
                    /* istanbul ignore if */
                    if (isProto3) {
                        parseField(type, "proto3_optional");
                    } else {
                        parseField(type, "optional");
                    }
                    break;

                /* istanbul ignore next */
                default:
                    throw illegal(token); // there are no groups with proto3 semantics
            }
        });
        parent.add(type)
              .add(field);
    }

    function parseMapField(parent) {
        skip("<");
        var keyType = next();

        /* istanbul ignore if */
        if (types.mapKey[keyType] === undefined)
            throw illegal(keyType, "type");

        skip(",");
        var valueType = next();

        /* istanbul ignore if */
        if (!typeRefRe.test(valueType))
            throw illegal(valueType, "type");

        skip(">");
        var name = next();

        /* istanbul ignore if */
        if (!nameRe.test(name))
            throw illegal(name, "name");

        skip("=");
        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);
        ifBlock(field, function parseMapField_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(field, token);
                skip(";");
            } else
                throw illegal(token);

        }, function parseMapField_line() {
            parseInlineOptions(field);
        });
        parent.add(field);
    }

    function parseOneOf(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "name");

        var oneof = new OneOf(applyCase(token));
        ifBlock(oneof, function parseOneOf_block(token) {
            if (token === "option") {
                parseOption(oneof, token);
                skip(";");
            } else {
                push(token);
                parseField(oneof, "optional");
            }
        });
        parent.add(oneof);
    }

    function parseEnum(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "name");

        var enm = new Enum(token);
        ifBlock(enm, function parseEnum_block(token) {
          switch(token) {
            case "option":
              parseOption(enm, token);
              skip(";");
              break;

            case "reserved":
              readRanges(enm.reserved || (enm.reserved = []), true);
              break;

            default:
              parseEnumValue(enm, token);
          }
        });
        parent.add(enm);
    }

    function parseEnumValue(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token))
            throw illegal(token, "name");

        skip("=");
        var value = parseId(next(), true),
            dummy = {};
        ifBlock(dummy, function parseEnumValue_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(dummy, token); // skip
                skip(";");
            } else
                throw illegal(token);

        }, function parseEnumValue_line() {
            parseInlineOptions(dummy); // skip
        });
        parent.add(token, value, dummy.comment);
    }

    function parseOption(parent, token) {
        var isCustom = skip("(", true);

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token, "name");

        var name = token;
        var option = name;
        var propName;

        if (isCustom) {
            skip(")");
            name = "(" + name + ")";
            option = name;
            token = peek();
            if (fqTypeRefRe.test(token)) {
                propName = token.substr(1); //remove '.' before property name
                name += token;
                next();
            }
        }
        skip("=");
        var optionValue = parseOptionValue(parent, name);
        setParsedOption(parent, option, optionValue, propName);
    }

    function parseOptionValue(parent, name) {
        if (skip("{", true)) { // { a: "foo" b { c: "bar" } }
            var result = {};
            while (!skip("}", true)) {
                /* istanbul ignore if */
                if (!nameRe.test(token = next()))
                    throw illegal(token, "name");

                var value;
                var propName = token;
                if (peek() === "{")
                    value = parseOptionValue(parent, name + "." + token);
                else {
                    skip(":");
                    if (peek() === "{")
                        value = parseOptionValue(parent, name + "." + token);
                    else {
                        value = readValue(true);
                        setOption(parent, name + "." + token, value);
                    }
                }
                var prevValue = result[propName];
                if (prevValue)
                    value = [].concat(prevValue).concat(value);
                result[propName] = value;
                skip(",", true);
            }
            return result;
        }

        var simpleValue = readValue(true);
        setOption(parent, name, simpleValue);
        return simpleValue;
        // Does not enforce a delimiter to be universal
    }

    function setOption(parent, name, value) {
        if (parent.setOption)
            parent.setOption(name, value);
    }

    function setParsedOption(parent, name, value, propName) {
        if (parent.setParsedOption)
            parent.setParsedOption(name, value, propName);
    }

    function parseInlineOptions(parent) {
        if (skip("[", true)) {
            do {
                parseOption(parent, "option");
            } while (skip(",", true));
            skip("]");
        }
        return parent;
    }

    function parseService(parent, token) {

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "service name");

        var service = new Service(token);
        ifBlock(service, function parseService_block(token) {
            if (parseCommon(service, token))
                return;

            /* istanbul ignore else */
            if (token === "rpc")
                parseMethod(service, token);
            else
                throw illegal(token);
        });
        parent.add(service);
    }

    function parseMethod(parent, token) {
        // Get the comment of the preceding line now (if one exists) in case the
        // method is defined across multiple lines.
        var commentText = cmnt();

        var type = token;

        /* istanbul ignore if */
        if (!nameRe.test(token = next()))
            throw illegal(token, "name");

        var name = token,
            requestType, requestStream,
            responseType, responseStream;

        skip("(");
        if (skip("stream", true))
            requestStream = true;

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token);

        requestType = token;
        skip(")"); skip("returns"); skip("(");
        if (skip("stream", true))
            responseStream = true;

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token);

        responseType = token;
        skip(")");

        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);
        method.comment = commentText;
        ifBlock(method, function parseMethod_block(token) {

            /* istanbul ignore else */
            if (token === "option") {
                parseOption(method, token);
                skip(";");
            } else
                throw illegal(token);

        });
        parent.add(method);
    }

    function parseExtension(parent, token) {

        /* istanbul ignore if */
        if (!typeRefRe.test(token = next()))
            throw illegal(token, "reference");

        var reference = token;
        ifBlock(null, function parseExtension_block(token) {
            switch (token) {

                case "required":
                case "repeated":
                    parseField(parent, token, reference);
                    break;

                case "optional":
                    /* istanbul ignore if */
                    if (isProto3) {
                        parseField(parent, "proto3_optional", reference);
                    } else {
                        parseField(parent, "optional", reference);
                    }
                    break;

                default:
                    /* istanbul ignore if */
                    if (!isProto3 || !typeRefRe.test(token))
                        throw illegal(token);
                    push(token);
                    parseField(parent, "optional", reference);
                    break;
            }
        });
    }

    var token;
    while ((token = next()) !== null) {
        switch (token) {

            case "package":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parsePackage();
                break;

            case "import":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parseImport();
                break;

            case "syntax":

                /* istanbul ignore if */
                if (!head)
                    throw illegal(token);

                parseSyntax();
                break;

            case "option":

                parseOption(ptr, token);
                skip(";");
                break;

            default:

                /* istanbul ignore else */
                if (parseCommon(ptr, token)) {
                    head = false;
                    continue;
                }

                /* istanbul ignore next */
                throw illegal(token);
        }
    }

    parse.filename = null;
    return {
        "package"     : pkg,
        "imports"     : imports,
         weakImports  : weakImports,
         syntax       : syntax,
         root         : root
    };
}

/**
 * Parses the given .proto source and returns an object with the parsed contents.
 * @name parse
 * @function
 * @param {string} source Source contents
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {IParserResult} Parser result
 * @property {string} filename=null Currently processing file name for error reporting, if known
 * @property {IParseOptions} defaults Default {@link IParseOptions}
 * @variation 2
 */


/***/ }),

/***/ "./node_modules/protobufjs/src/reader.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/reader.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Reader;

var util      = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

var BufferReader; // cyclic

var LongBits  = util.LongBits,
    utf8      = util.utf8;

/* istanbul ignore next */
function indexOutOfRange(reader, writeLength) {
    return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
}

/**
 * Constructs a new reader instance using the specified buffer.
 * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 * @param {Uint8Array} buffer Buffer to read from
 */
function Reader(buffer) {

    /**
     * Read buffer.
     * @type {Uint8Array}
     */
    this.buf = buffer;

    /**
     * Read buffer position.
     * @type {number}
     */
    this.pos = 0;

    /**
     * Read buffer length.
     * @type {number}
     */
    this.len = buffer.length;
}

var create_array = typeof Uint8Array !== "undefined"
    ? function create_typed_array(buffer) {
        if (buffer instanceof Uint8Array || Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    }
    /* istanbul ignore next */
    : function create_array(buffer) {
        if (Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    };

var create = function create() {
    return util.Buffer
        ? function create_buffer_setup(buffer) {
            return (Reader.create = function create_buffer(buffer) {
                return util.Buffer.isBuffer(buffer)
                    ? new BufferReader(buffer)
                    /* istanbul ignore next */
                    : create_array(buffer);
            })(buffer);
        }
        /* istanbul ignore next */
        : create_array;
};

/**
 * Creates a new reader using the specified buffer.
 * @function
 * @param {Uint8Array|Buffer} buffer Buffer to read from
 * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}
 * @throws {Error} If `buffer` is not a valid buffer
 */
Reader.create = create();

Reader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;

/**
 * Reads a varint as an unsigned 32 bit value.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.uint32 = (function read_uint32_setup() {
    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)
    return function read_uint32() {
        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;

        /* istanbul ignore if */
        if ((this.pos += 5) > this.len) {
            this.pos = this.len;
            throw indexOutOfRange(this, 10);
        }
        return value;
    };
})();

/**
 * Reads a varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.int32 = function read_int32() {
    return this.uint32() | 0;
};

/**
 * Reads a zig-zag encoded varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.sint32 = function read_sint32() {
    var value = this.uint32();
    return value >>> 1 ^ -(value & 1) | 0;
};

/* eslint-disable no-invalid-this */

function readLongVarint() {
    // tends to deopt with local vars for octet etc.
    var bits = new LongBits(0, 0);
    var i = 0;
    if (this.len - this.pos > 4) { // fast route (lo)
        for (; i < 4; ++i) {
            // 1st..4th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 5th
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;
        if (this.buf[this.pos++] < 128)
            return bits;
        i = 0;
    } else {
        for (; i < 3; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 1st..3th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 4th
        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
        return bits;
    }
    if (this.len - this.pos > 4) { // fast route (hi)
        for (; i < 5; ++i) {
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    } else {
        for (; i < 5; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    }
    /* istanbul ignore next */
    throw Error("invalid varint encoding");
}

/* eslint-enable no-invalid-this */

/**
 * Reads a varint as a signed 64 bit value.
 * @name Reader#int64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as an unsigned 64 bit value.
 * @name Reader#uint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a zig-zag encoded varint as a signed 64 bit value.
 * @name Reader#sint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as a boolean.
 * @returns {boolean} Value read
 */
Reader.prototype.bool = function read_bool() {
    return this.uint32() !== 0;
};

function readFixed32_end(buf, end) { // note that this uses `end`, not `pos`
    return (buf[end - 4]
          | buf[end - 3] << 8
          | buf[end - 2] << 16
          | buf[end - 1] << 24) >>> 0;
}

/**
 * Reads fixed 32 bits as an unsigned 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.fixed32 = function read_fixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4);
};

/**
 * Reads fixed 32 bits as a signed 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.sfixed32 = function read_sfixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4) | 0;
};

/* eslint-disable no-invalid-this */

function readFixed64(/* this: Reader */) {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 8);

    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
}

/* eslint-enable no-invalid-this */

/**
 * Reads fixed 64 bits.
 * @name Reader#fixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads zig-zag encoded fixed 64 bits.
 * @name Reader#sfixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a float (32 bit) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.float = function read_float() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    var value = util.float.readFloatLE(this.buf, this.pos);
    this.pos += 4;
    return value;
};

/**
 * Reads a double (64 bit float) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.double = function read_double() {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 4);

    var value = util.float.readDoubleLE(this.buf, this.pos);
    this.pos += 8;
    return value;
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @returns {Uint8Array} Value read
 */
Reader.prototype.bytes = function read_bytes() {
    var length = this.uint32(),
        start  = this.pos,
        end    = this.pos + length;

    /* istanbul ignore if */
    if (end > this.len)
        throw indexOutOfRange(this, length);

    this.pos += length;
    if (Array.isArray(this.buf)) // plain array
        return this.buf.slice(start, end);
    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1
        ? new this.buf.constructor(0)
        : this._slice.call(this.buf, start, end);
};

/**
 * Reads a string preceeded by its byte length as a varint.
 * @returns {string} Value read
 */
Reader.prototype.string = function read_string() {
    var bytes = this.bytes();
    return utf8.read(bytes, 0, bytes.length);
};

/**
 * Skips the specified number of bytes if specified, otherwise skips a varint.
 * @param {number} [length] Length if known, otherwise a varint is assumed
 * @returns {Reader} `this`
 */
Reader.prototype.skip = function skip(length) {
    if (typeof length === "number") {
        /* istanbul ignore if */
        if (this.pos + length > this.len)
            throw indexOutOfRange(this, length);
        this.pos += length;
    } else {
        do {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
        } while (this.buf[this.pos++] & 128);
    }
    return this;
};

/**
 * Skips the next element of the specified wire type.
 * @param {number} wireType Wire type received
 * @returns {Reader} `this`
 */
Reader.prototype.skipType = function(wireType) {
    switch (wireType) {
        case 0:
            this.skip();
            break;
        case 1:
            this.skip(8);
            break;
        case 2:
            this.skip(this.uint32());
            break;
        case 3:
            while ((wireType = this.uint32() & 7) !== 4) {
                this.skipType(wireType);
            }
            break;
        case 5:
            this.skip(4);
            break;

        /* istanbul ignore next */
        default:
            throw Error("invalid wire type " + wireType + " at offset " + this.pos);
    }
    return this;
};

Reader._configure = function(BufferReader_) {
    BufferReader = BufferReader_;
    Reader.create = create();
    BufferReader._configure();

    var fn = util.Long ? "toLong" : /* istanbul ignore next */ "toNumber";
    util.merge(Reader.prototype, {

        int64: function read_int64() {
            return readLongVarint.call(this)[fn](false);
        },

        uint64: function read_uint64() {
            return readLongVarint.call(this)[fn](true);
        },

        sint64: function read_sint64() {
            return readLongVarint.call(this).zzDecode()[fn](false);
        },

        fixed64: function read_fixed64() {
            return readFixed64.call(this)[fn](true);
        },

        sfixed64: function read_sfixed64() {
            return readFixed64.call(this)[fn](false);
        }

    });
};


/***/ }),

/***/ "./node_modules/protobufjs/src/reader_buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/reader_buffer.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = BufferReader;

// extends Reader
var Reader = __webpack_require__(/*! ./reader */ "./node_modules/protobufjs/src/reader.js");
(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;

var util = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

/**
 * Constructs a new buffer reader instance.
 * @classdesc Wire format reader using node buffers.
 * @extends Reader
 * @constructor
 * @param {Buffer} buffer Buffer to read from
 */
function BufferReader(buffer) {
    Reader.call(this, buffer);

    /**
     * Read buffer.
     * @name BufferReader#buf
     * @type {Buffer}
     */
}

BufferReader._configure = function () {
    /* istanbul ignore else */
    if (util.Buffer)
        BufferReader.prototype._slice = util.Buffer.prototype.slice;
};


/**
 * @override
 */
BufferReader.prototype.string = function read_string_buffer() {
    var len = this.uint32(); // modifies pos
    return this.buf.utf8Slice
        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))
        : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + len, this.len));
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @name BufferReader#bytes
 * @function
 * @returns {Buffer} Value read
 */

BufferReader._configure();


/***/ }),

/***/ "./node_modules/protobufjs/src/root.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/root.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Root;

// extends Namespace
var Namespace = __webpack_require__(/*! ./namespace */ "./node_modules/protobufjs/src/namespace.js");
((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = "Root";

var Field   = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js"),
    Enum    = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    OneOf   = __webpack_require__(/*! ./oneof */ "./node_modules/protobufjs/src/oneof.js"),
    util    = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

var Type,   // cyclic
    parse,  // might be excluded
    common; // "

/**
 * Constructs a new root namespace instance.
 * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.
 * @extends NamespaceBase
 * @constructor
 * @param {Object.<string,*>} [options] Top level options
 */
function Root(options) {
    Namespace.call(this, "", options);

    /**
     * Deferred extension fields.
     * @type {Field[]}
     */
    this.deferred = [];

    /**
     * Resolved file names of loaded files.
     * @type {string[]}
     */
    this.files = [];
}

/**
 * Loads a namespace descriptor into a root namespace.
 * @param {INamespace} json Nameespace descriptor
 * @param {Root} [root] Root namespace, defaults to create a new one if omitted
 * @returns {Root} Root namespace
 */
Root.fromJSON = function fromJSON(json, root) {
    if (!root)
        root = new Root();
    if (json.options)
        root.setOptions(json.options);
    return root.addJSON(json.nested);
};

/**
 * Resolves the path of an imported file, relative to the importing origin.
 * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.
 * @function
 * @param {string} origin The file name of the importing file
 * @param {string} target The file name being imported
 * @returns {string|null} Resolved path to `target` or `null` to skip the file
 */
Root.prototype.resolvePath = util.path.resolve;

/**
 * Fetch content from file path or url
 * This method exists so you can override it with your own logic.
 * @function
 * @param {string} path File path or url
 * @param {FetchCallback} callback Callback function
 * @returns {undefined}
 */
Root.prototype.fetch = util.fetch;

// A symbol-like function to safely signal synchronous loading
/* istanbul ignore next */
function SYNC() {} // eslint-disable-line no-empty-function

/**
 * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {IParseOptions} options Parse options
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 */
Root.prototype.load = function load(filename, options, callback) {
    if (typeof options === "function") {
        callback = options;
        options = undefined;
    }
    var self = this;
    if (!callback)
        return util.asPromise(load, self, filename, options);

    var sync = callback === SYNC; // undocumented

    // Finishes loading by calling the callback (exactly once)
    function finish(err, root) {
        /* istanbul ignore if */
        if (!callback)
            return;
        var cb = callback;
        callback = null;
        if (sync)
            throw err;
        cb(err, root);
    }

    // Bundled definition existence checking
    function getBundledFileName(filename) {
        var idx = filename.lastIndexOf("google/protobuf/");
        if (idx > -1) {
            var altname = filename.substring(idx);
            if (altname in common) return altname;
        }
        return null;
    }

    // Processes a single file
    function process(filename, source) {
        try {
            if (util.isString(source) && source.charAt(0) === "{")
                source = JSON.parse(source);
            if (!util.isString(source))
                self.setOptions(source.options).addJSON(source.nested);
            else {
                parse.filename = filename;
                var parsed = parse(source, self, options),
                    resolved,
                    i = 0;
                if (parsed.imports)
                    for (; i < parsed.imports.length; ++i)
                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))
                            fetch(resolved);
                if (parsed.weakImports)
                    for (i = 0; i < parsed.weakImports.length; ++i)
                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))
                            fetch(resolved, true);
            }
        } catch (err) {
            finish(err);
        }
        if (!sync && !queued)
            finish(null, self); // only once anyway
    }

    // Fetches a single file
    function fetch(filename, weak) {

        // Skip if already loaded / attempted
        if (self.files.indexOf(filename) > -1)
            return;
        self.files.push(filename);

        // Shortcut bundled definitions
        if (filename in common) {
            if (sync)
                process(filename, common[filename]);
            else {
                ++queued;
                setTimeout(function() {
                    --queued;
                    process(filename, common[filename]);
                });
            }
            return;
        }

        // Otherwise fetch from disk or network
        if (sync) {
            var source;
            try {
                source = util.fs.readFileSync(filename).toString("utf8");
            } catch (err) {
                if (!weak)
                    finish(err);
                return;
            }
            process(filename, source);
        } else {
            ++queued;
            self.fetch(filename, function(err, source) {
                --queued;
                /* istanbul ignore if */
                if (!callback)
                    return; // terminated meanwhile
                if (err) {
                    /* istanbul ignore else */
                    if (!weak)
                        finish(err);
                    else if (!queued) // can't be covered reliably
                        finish(null, self);
                    return;
                }
                process(filename, source);
            });
        }
    }
    var queued = 0;

    // Assembling the root namespace doesn't require working type
    // references anymore, so we can load everything in parallel
    if (util.isString(filename))
        filename = [ filename ];
    for (var i = 0, resolved; i < filename.length; ++i)
        if (resolved = self.resolvePath("", filename[i]))
            fetch(resolved);

    if (sync)
        return self;
    if (!queued)
        finish(null, self);
    return undefined;
};
// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined

/**
 * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.
 * @function Root#load
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {LoadCallback} callback Callback function
 * @returns {undefined}
 * @variation 2
 */
// function load(filename:string, callback:LoadCallback):undefined

/**
 * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.
 * @function Root#load
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {Promise<Root>} Promise
 * @variation 3
 */
// function load(filename:string, [options:IParseOptions]):Promise<Root>

/**
 * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).
 * @function Root#loadSync
 * @param {string|string[]} filename Names of one or multiple files to load
 * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.
 * @returns {Root} Root namespace
 * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid
 */
Root.prototype.loadSync = function loadSync(filename, options) {
    if (!util.isNode)
        throw Error("not supported");
    return this.load(filename, options, SYNC);
};

/**
 * @override
 */
Root.prototype.resolveAll = function resolveAll() {
    if (this.deferred.length)
        throw Error("unresolvable extensions: " + this.deferred.map(function(field) {
            return "'extend " + field.extend + "' in " + field.parent.fullName;
        }).join(", "));
    return Namespace.prototype.resolveAll.call(this);
};

// only uppercased (and thus conflict-free) children are exposed, see below
var exposeRe = /^[A-Z]/;

/**
 * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.
 * @param {Root} root Root instance
 * @param {Field} field Declaring extension field witin the declaring type
 * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise
 * @inner
 * @ignore
 */
function tryHandleExtension(root, field) {
    var extendedType = field.parent.lookup(field.extend);
    if (extendedType) {
        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);
        sisterField.declaringField = field;
        field.extensionField = sisterField;
        extendedType.add(sisterField);
        return true;
    }
    return false;
}

/**
 * Called when any object is added to this root or its sub-namespaces.
 * @param {ReflectionObject} object Object added
 * @returns {undefined}
 * @private
 */
Root.prototype._handleAdd = function _handleAdd(object) {
    if (object instanceof Field) {

        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)
            if (!tryHandleExtension(this, object))
                this.deferred.push(object);

    } else if (object instanceof Enum) {

        if (exposeRe.test(object.name))
            object.parent[object.name] = object.values; // expose enum values as property of its parent

    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {

        if (object instanceof Type) // Try to handle any deferred extensions
            for (var i = 0; i < this.deferred.length;)
                if (tryHandleExtension(this, this.deferred[i]))
                    this.deferred.splice(i, 1);
                else
                    ++i;
        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace
            this._handleAdd(object._nestedArray[j]);
        if (exposeRe.test(object.name))
            object.parent[object.name] = object; // expose namespace as property of its parent
    }

    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as
    // properties of namespaces just like static code does. This allows using a .d.ts generated for
    // a static module with reflection-based solutions where the condition is met.
};

/**
 * Called when any object is removed from this root or its sub-namespaces.
 * @param {ReflectionObject} object Object removed
 * @returns {undefined}
 * @private
 */
Root.prototype._handleRemove = function _handleRemove(object) {
    if (object instanceof Field) {

        if (/* an extension field */ object.extend !== undefined) {
            if (/* already handled */ object.extensionField) { // remove its sister field
                object.extensionField.parent.remove(object.extensionField);
                object.extensionField = null;
            } else { // cancel the extension
                var index = this.deferred.indexOf(object);
                /* istanbul ignore else */
                if (index > -1)
                    this.deferred.splice(index, 1);
            }
        }

    } else if (object instanceof Enum) {

        if (exposeRe.test(object.name))
            delete object.parent[object.name]; // unexpose enum values

    } else if (object instanceof Namespace) {

        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace
            this._handleRemove(object._nestedArray[i]);

        if (exposeRe.test(object.name))
            delete object.parent[object.name]; // unexpose namespaces

    }
};

// Sets up cyclic dependencies (called in index-light)
Root._configure = function(Type_, parse_, common_) {
    Type   = Type_;
    parse  = parse_;
    common = common_;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/roots.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/roots.js ***!
  \**********************************************/
/***/ (function(module) {

"use strict";

module.exports = {};

/**
 * Named roots.
 * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).
 * Can also be used manually to make roots available accross modules.
 * @name roots
 * @type {Object.<string,Root>}
 * @example
 * // pbjs -r myroot -o compiled.js ...
 *
 * // in another module:
 * require("./compiled.js");
 *
 * // in any subsequent module:
 * var root = protobuf.roots["myroot"];
 */


/***/ }),

/***/ "./node_modules/protobufjs/src/rpc.js":
/*!********************************************!*\
  !*** ./node_modules/protobufjs/src/rpc.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


/**
 * Streaming RPC helpers.
 * @namespace
 */
var rpc = exports;

/**
 * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.
 * @typedef RPCImpl
 * @type {function}
 * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called
 * @param {Uint8Array} requestData Request data
 * @param {RPCImplCallback} callback Callback function
 * @returns {undefined}
 * @example
 * function rpcImpl(method, requestData, callback) {
 *     if (protobuf.util.lcFirst(method.name) !== "myMethod") // compatible with static code
 *         throw Error("no such method");
 *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {
 *         callback(err, responseData);
 *     });
 * }
 */

/**
 * Node-style callback as used by {@link RPCImpl}.
 * @typedef RPCImplCallback
 * @type {function}
 * @param {Error|null} error Error, if any, otherwise `null`
 * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error
 * @returns {undefined}
 */

rpc.Service = __webpack_require__(/*! ./rpc/service */ "./node_modules/protobufjs/src/rpc/service.js");


/***/ }),

/***/ "./node_modules/protobufjs/src/rpc/service.js":
/*!****************************************************!*\
  !*** ./node_modules/protobufjs/src/rpc/service.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Service;

var util = __webpack_require__(/*! ../util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

// Extends EventEmitter
(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;

/**
 * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.
 *
 * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.
 * @typedef rpc.ServiceMethodCallback
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {TRes} [response] Response message
 * @returns {undefined}
 */

/**
 * A service method part of a {@link rpc.Service} as created by {@link Service.create}.
 * @typedef rpc.ServiceMethod
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message
 * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`
 */

/**
 * Constructs a new RPC service instance.
 * @classdesc An RPC service as returned by {@link Service#create}.
 * @exports rpc.Service
 * @extends util.EventEmitter
 * @constructor
 * @param {RPCImpl} rpcImpl RPC implementation
 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
 */
function Service(rpcImpl, requestDelimited, responseDelimited) {

    if (typeof rpcImpl !== "function")
        throw TypeError("rpcImpl must be a function");

    util.EventEmitter.call(this);

    /**
     * RPC implementation. Becomes `null` once the service is ended.
     * @type {RPCImpl|null}
     */
    this.rpcImpl = rpcImpl;

    /**
     * Whether requests are length-delimited.
     * @type {boolean}
     */
    this.requestDelimited = Boolean(requestDelimited);

    /**
     * Whether responses are length-delimited.
     * @type {boolean}
     */
    this.responseDelimited = Boolean(responseDelimited);
}

/**
 * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.
 * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method
 * @param {Constructor<TReq>} requestCtor Request constructor
 * @param {Constructor<TRes>} responseCtor Response constructor
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback
 * @returns {undefined}
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 */
Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {

    if (!request)
        throw TypeError("request must be specified");

    var self = this;
    if (!callback)
        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);

    if (!self.rpcImpl) {
        setTimeout(function() { callback(Error("already ended")); }, 0);
        return undefined;
    }

    try {
        return self.rpcImpl(
            method,
            requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),
            function rpcCallback(err, response) {

                if (err) {
                    self.emit("error", err, method);
                    return callback(err);
                }

                if (response === null) {
                    self.end(/* endedByRPC */ true);
                    return undefined;
                }

                if (!(response instanceof responseCtor)) {
                    try {
                        response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
                    } catch (err) {
                        self.emit("error", err, method);
                        return callback(err);
                    }
                }

                self.emit("data", response, method);
                return callback(null, response);
            }
        );
    } catch (err) {
        self.emit("error", err, method);
        setTimeout(function() { callback(err); }, 0);
        return undefined;
    }
};

/**
 * Ends this service and emits the `end` event.
 * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.
 * @returns {rpc.Service} `this`
 */
Service.prototype.end = function end(endedByRPC) {
    if (this.rpcImpl) {
        if (!endedByRPC) // signal end to rpcImpl
            this.rpcImpl(null, null, null);
        this.rpcImpl = null;
        this.emit("end").off();
    }
    return this;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/service.js":
/*!************************************************!*\
  !*** ./node_modules/protobufjs/src/service.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Service;

// extends Namespace
var Namespace = __webpack_require__(/*! ./namespace */ "./node_modules/protobufjs/src/namespace.js");
((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = "Service";

var Method = __webpack_require__(/*! ./method */ "./node_modules/protobufjs/src/method.js"),
    util   = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js"),
    rpc    = __webpack_require__(/*! ./rpc */ "./node_modules/protobufjs/src/rpc.js");

/**
 * Constructs a new service instance.
 * @classdesc Reflected service.
 * @extends NamespaceBase
 * @constructor
 * @param {string} name Service name
 * @param {Object.<string,*>} [options] Service options
 * @throws {TypeError} If arguments are invalid
 */
function Service(name, options) {
    Namespace.call(this, name, options);

    /**
     * Service methods.
     * @type {Object.<string,Method>}
     */
    this.methods = {}; // toJSON, marker

    /**
     * Cached methods as an array.
     * @type {Method[]|null}
     * @private
     */
    this._methodsArray = null;
}

/**
 * Service descriptor.
 * @interface IService
 * @extends INamespace
 * @property {Object.<string,IMethod>} methods Method descriptors
 */

/**
 * Constructs a service from a service descriptor.
 * @param {string} name Service name
 * @param {IService} json Service descriptor
 * @returns {Service} Created service
 * @throws {TypeError} If arguments are invalid
 */
Service.fromJSON = function fromJSON(name, json) {
    var service = new Service(name, json.options);
    /* istanbul ignore else */
    if (json.methods)
        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)
            service.add(Method.fromJSON(names[i], json.methods[names[i]]));
    if (json.nested)
        service.addJSON(json.nested);
    service.comment = json.comment;
    return service;
};

/**
 * Converts this service to a service descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IService} Service descriptor
 */
Service.prototype.toJSON = function toJSON(toJSONOptions) {
    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options" , inherited && inherited.options || undefined,
        "methods" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},
        "nested"  , inherited && inherited.nested || undefined,
        "comment" , keepComments ? this.comment : undefined
    ]);
};

/**
 * Methods of this service as an array for iteration.
 * @name Service#methodsArray
 * @type {Method[]}
 * @readonly
 */
Object.defineProperty(Service.prototype, "methodsArray", {
    get: function() {
        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));
    }
});

function clearCache(service) {
    service._methodsArray = null;
    return service;
}

/**
 * @override
 */
Service.prototype.get = function get(name) {
    return this.methods[name]
        || Namespace.prototype.get.call(this, name);
};

/**
 * @override
 */
Service.prototype.resolveAll = function resolveAll() {
    var methods = this.methodsArray;
    for (var i = 0; i < methods.length; ++i)
        methods[i].resolve();
    return Namespace.prototype.resolve.call(this);
};

/**
 * @override
 */
Service.prototype.add = function add(object) {

    /* istanbul ignore if */
    if (this.get(object.name))
        throw Error("duplicate name '" + object.name + "' in " + this);

    if (object instanceof Method) {
        this.methods[object.name] = object;
        object.parent = this;
        return clearCache(this);
    }
    return Namespace.prototype.add.call(this, object);
};

/**
 * @override
 */
Service.prototype.remove = function remove(object) {
    if (object instanceof Method) {

        /* istanbul ignore if */
        if (this.methods[object.name] !== object)
            throw Error(object + " is not a member of " + this);

        delete this.methods[object.name];
        object.parent = null;
        return clearCache(this);
    }
    return Namespace.prototype.remove.call(this, object);
};

/**
 * Creates a runtime service using the specified rpc implementation.
 * @param {RPCImpl} rpcImpl RPC implementation
 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
 * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.
 */
Service.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {
    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);
    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {
        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\w_]/g, "");
        rpcService[methodName] = util.codegen(["r","c"], util.isReserved(methodName) ? methodName + "_" : methodName)("return this.rpcCall(m,q,s,r,c)")({
            m: method,
            q: method.resolvedRequestType.ctor,
            s: method.resolvedResponseType.ctor
        });
    }
    return rpcService;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/tokenize.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/tokenize.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";

module.exports = tokenize;

var delimRe        = /[\s{}=;:[\],'"()<>]/g,
    stringDoubleRe = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
    stringSingleRe = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g;

var setCommentRe = /^ *[*/]+ */,
    setCommentAltRe = /^\s*\*?\/*/,
    setCommentSplitRe = /\n/g,
    whitespaceRe = /\s/,
    unescapeRe = /\\(.?)/g;

var unescapeMap = {
    "0": "\0",
    "r": "\r",
    "n": "\n",
    "t": "\t"
};

/**
 * Unescapes a string.
 * @param {string} str String to unescape
 * @returns {string} Unescaped string
 * @property {Object.<string,string>} map Special characters map
 * @memberof tokenize
 */
function unescape(str) {
    return str.replace(unescapeRe, function($0, $1) {
        switch ($1) {
            case "\\":
            case "":
                return $1;
            default:
                return unescapeMap[$1] || "";
        }
    });
}

tokenize.unescape = unescape;

/**
 * Gets the next token and advances.
 * @typedef TokenizerHandleNext
 * @type {function}
 * @returns {string|null} Next token or `null` on eof
 */

/**
 * Peeks for the next token.
 * @typedef TokenizerHandlePeek
 * @type {function}
 * @returns {string|null} Next token or `null` on eof
 */

/**
 * Pushes a token back to the stack.
 * @typedef TokenizerHandlePush
 * @type {function}
 * @param {string} token Token
 * @returns {undefined}
 */

/**
 * Skips the next token.
 * @typedef TokenizerHandleSkip
 * @type {function}
 * @param {string} expected Expected token
 * @param {boolean} [optional=false] If optional
 * @returns {boolean} Whether the token matched
 * @throws {Error} If the token didn't match and is not optional
 */

/**
 * Gets the comment on the previous line or, alternatively, the line comment on the specified line.
 * @typedef TokenizerHandleCmnt
 * @type {function}
 * @param {number} [line] Line number
 * @returns {string|null} Comment text or `null` if none
 */

/**
 * Handle object returned from {@link tokenize}.
 * @interface ITokenizerHandle
 * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)
 * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)
 * @property {TokenizerHandlePush} push Pushes a token back to the stack
 * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws
 * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any
 * @property {number} line Current line number
 */

/**
 * Tokenizes the given .proto source and returns an object with useful utility functions.
 * @param {string} source Source contents
 * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.
 * @returns {ITokenizerHandle} Tokenizer handle
 */
function tokenize(source, alternateCommentMode) {
    /* eslint-disable callback-return */
    source = source.toString();

    var offset = 0,
        length = source.length,
        line = 1,
        commentType = null,
        commentText = null,
        commentLine = 0,
        commentLineEmpty = false,
        commentIsLeading = false;

    var stack = [];

    var stringDelim = null;

    /* istanbul ignore next */
    /**
     * Creates an error for illegal syntax.
     * @param {string} subject Subject
     * @returns {Error} Error created
     * @inner
     */
    function illegal(subject) {
        return Error("illegal " + subject + " (line " + line + ")");
    }

    /**
     * Reads a string till its end.
     * @returns {string} String read
     * @inner
     */
    function readString() {
        var re = stringDelim === "'" ? stringSingleRe : stringDoubleRe;
        re.lastIndex = offset - 1;
        var match = re.exec(source);
        if (!match)
            throw illegal("string");
        offset = re.lastIndex;
        push(stringDelim);
        stringDelim = null;
        return unescape(match[1]);
    }

    /**
     * Gets the character at `pos` within the source.
     * @param {number} pos Position
     * @returns {string} Character
     * @inner
     */
    function charAt(pos) {
        return source.charAt(pos);
    }

    /**
     * Sets the current comment text.
     * @param {number} start Start offset
     * @param {number} end End offset
     * @param {boolean} isLeading set if a leading comment
     * @returns {undefined}
     * @inner
     */
    function setComment(start, end, isLeading) {
        commentType = source.charAt(start++);
        commentLine = line;
        commentLineEmpty = false;
        commentIsLeading = isLeading;
        var lookback;
        if (alternateCommentMode) {
            lookback = 2;  // alternate comment parsing: "//" or "/*"
        } else {
            lookback = 3;  // "///" or "/**"
        }
        var commentOffset = start - lookback,
            c;
        do {
            if (--commentOffset < 0 ||
                    (c = source.charAt(commentOffset)) === "\n") {
                commentLineEmpty = true;
                break;
            }
        } while (c === " " || c === "\t");
        var lines = source
            .substring(start, end)
            .split(setCommentSplitRe);
        for (var i = 0; i < lines.length; ++i)
            lines[i] = lines[i]
                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, "")
                .trim();
        commentText = lines
            .join("\n")
            .trim();
    }

    function isDoubleSlashCommentLine(startOffset) {
        var endOffset = findEndOfLine(startOffset);

        // see if remaining line matches comment pattern
        var lineText = source.substring(startOffset, endOffset);
        // look for 1 or 2 slashes since startOffset would already point past
        // the first slash that started the comment.
        var isComment = /^\s*\/{1,2}/.test(lineText);
        return isComment;
    }

    function findEndOfLine(cursor) {
        // find end of cursor's line
        var endOffset = cursor;
        while (endOffset < length && charAt(endOffset) !== "\n") {
            endOffset++;
        }
        return endOffset;
    }

    /**
     * Obtains the next token.
     * @returns {string|null} Next token or `null` on eof
     * @inner
     */
    function next() {
        if (stack.length > 0)
            return stack.shift();
        if (stringDelim)
            return readString();
        var repeat,
            prev,
            curr,
            start,
            isDoc,
            isLeadingComment = offset === 0;
        do {
            if (offset === length)
                return null;
            repeat = false;
            while (whitespaceRe.test(curr = charAt(offset))) {
                if (curr === "\n") {
                    isLeadingComment = true;
                    ++line;
                }
                if (++offset === length)
                    return null;
            }

            if (charAt(offset) === "/") {
                if (++offset === length) {
                    throw illegal("comment");
                }
                if (charAt(offset) === "/") { // Line
                    if (!alternateCommentMode) {
                        // check for triple-slash comment
                        isDoc = charAt(start = offset + 1) === "/";

                        while (charAt(++offset) !== "\n") {
                            if (offset === length) {
                                return null;
                            }
                        }
                        ++offset;
                        if (isDoc) {
                            setComment(start, offset - 1, isLeadingComment);
                        }
                        ++line;
                        repeat = true;
                    } else {
                        // check for double-slash comments, consolidating consecutive lines
                        start = offset;
                        isDoc = false;
                        if (isDoubleSlashCommentLine(offset)) {
                            isDoc = true;
                            do {
                                offset = findEndOfLine(offset);
                                if (offset === length) {
                                    break;
                                }
                                offset++;
                            } while (isDoubleSlashCommentLine(offset));
                        } else {
                            offset = Math.min(length, findEndOfLine(offset) + 1);
                        }
                        if (isDoc) {
                            setComment(start, offset, isLeadingComment);
                        }
                        line++;
                        repeat = true;
                    }
                } else if ((curr = charAt(offset)) === "*") { /* Block */
                    // check for /** (regular comment mode) or /* (alternate comment mode)
                    start = offset + 1;
                    isDoc = alternateCommentMode || charAt(start) === "*";
                    do {
                        if (curr === "\n") {
                            ++line;
                        }
                        if (++offset === length) {
                            throw illegal("comment");
                        }
                        prev = curr;
                        curr = charAt(offset);
                    } while (prev !== "*" || curr !== "/");
                    ++offset;
                    if (isDoc) {
                        setComment(start, offset - 2, isLeadingComment);
                    }
                    repeat = true;
                } else {
                    return "/";
                }
            }
        } while (repeat);

        // offset !== length if we got here

        var end = offset;
        delimRe.lastIndex = 0;
        var delim = delimRe.test(charAt(end++));
        if (!delim)
            while (end < length && !delimRe.test(charAt(end)))
                ++end;
        var token = source.substring(offset, offset = end);
        if (token === "\"" || token === "'")
            stringDelim = token;
        return token;
    }

    /**
     * Pushes a token back to the stack.
     * @param {string} token Token
     * @returns {undefined}
     * @inner
     */
    function push(token) {
        stack.push(token);
    }

    /**
     * Peeks for the next token.
     * @returns {string|null} Token or `null` on eof
     * @inner
     */
    function peek() {
        if (!stack.length) {
            var token = next();
            if (token === null)
                return null;
            push(token);
        }
        return stack[0];
    }

    /**
     * Skips a token.
     * @param {string} expected Expected token
     * @param {boolean} [optional=false] Whether the token is optional
     * @returns {boolean} `true` when skipped, `false` if not
     * @throws {Error} When a required token is not present
     * @inner
     */
    function skip(expected, optional) {
        var actual = peek(),
            equals = actual === expected;
        if (equals) {
            next();
            return true;
        }
        if (!optional)
            throw illegal("token '" + actual + "', '" + expected + "' expected");
        return false;
    }

    /**
     * Gets a comment.
     * @param {number} [trailingLine] Line number if looking for a trailing comment
     * @returns {string|null} Comment text
     * @inner
     */
    function cmnt(trailingLine) {
        var ret = null;
        if (trailingLine === undefined) {
            if (commentLine === line - 1 && (alternateCommentMode || commentType === "*" || commentLineEmpty)) {
                ret = commentIsLeading ? commentText : null;
            }
        } else {
            /* istanbul ignore else */
            if (commentLine < trailingLine) {
                peek();
            }
            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === "/")) {
                ret = commentIsLeading ? null : commentText;
            }
        }
        return ret;
    }

    return Object.defineProperty({
        next: next,
        peek: peek,
        push: push,
        skip: skip,
        cmnt: cmnt
    }, "line", {
        get: function() { return line; }
    });
    /* eslint-enable callback-return */
}


/***/ }),

/***/ "./node_modules/protobufjs/src/type.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/type.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Type;

// extends Namespace
var Namespace = __webpack_require__(/*! ./namespace */ "./node_modules/protobufjs/src/namespace.js");
((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = "Type";

var Enum      = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    OneOf     = __webpack_require__(/*! ./oneof */ "./node_modules/protobufjs/src/oneof.js"),
    Field     = __webpack_require__(/*! ./field */ "./node_modules/protobufjs/src/field.js"),
    MapField  = __webpack_require__(/*! ./mapfield */ "./node_modules/protobufjs/src/mapfield.js"),
    Service   = __webpack_require__(/*! ./service */ "./node_modules/protobufjs/src/service.js"),
    Message   = __webpack_require__(/*! ./message */ "./node_modules/protobufjs/src/message.js"),
    Reader    = __webpack_require__(/*! ./reader */ "./node_modules/protobufjs/src/reader.js"),
    Writer    = __webpack_require__(/*! ./writer */ "./node_modules/protobufjs/src/writer.js"),
    util      = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js"),
    encoder   = __webpack_require__(/*! ./encoder */ "./node_modules/protobufjs/src/encoder.js"),
    decoder   = __webpack_require__(/*! ./decoder */ "./node_modules/protobufjs/src/decoder.js"),
    verifier  = __webpack_require__(/*! ./verifier */ "./node_modules/protobufjs/src/verifier.js"),
    converter = __webpack_require__(/*! ./converter */ "./node_modules/protobufjs/src/converter.js"),
    wrappers  = __webpack_require__(/*! ./wrappers */ "./node_modules/protobufjs/src/wrappers.js");

/**
 * Constructs a new reflected message type instance.
 * @classdesc Reflected message type.
 * @extends NamespaceBase
 * @constructor
 * @param {string} name Message name
 * @param {Object.<string,*>} [options] Declared options
 */
function Type(name, options) {
    Namespace.call(this, name, options);

    /**
     * Message fields.
     * @type {Object.<string,Field>}
     */
    this.fields = {};  // toJSON, marker

    /**
     * Oneofs declared within this namespace, if any.
     * @type {Object.<string,OneOf>}
     */
    this.oneofs = undefined; // toJSON

    /**
     * Extension ranges, if any.
     * @type {number[][]}
     */
    this.extensions = undefined; // toJSON

    /**
     * Reserved ranges, if any.
     * @type {Array.<number[]|string>}
     */
    this.reserved = undefined; // toJSON

    /*?
     * Whether this type is a legacy group.
     * @type {boolean|undefined}
     */
    this.group = undefined; // toJSON

    /**
     * Cached fields by id.
     * @type {Object.<number,Field>|null}
     * @private
     */
    this._fieldsById = null;

    /**
     * Cached fields as an array.
     * @type {Field[]|null}
     * @private
     */
    this._fieldsArray = null;

    /**
     * Cached oneofs as an array.
     * @type {OneOf[]|null}
     * @private
     */
    this._oneofsArray = null;

    /**
     * Cached constructor.
     * @type {Constructor<{}>}
     * @private
     */
    this._ctor = null;
}

Object.defineProperties(Type.prototype, {

    /**
     * Message fields by id.
     * @name Type#fieldsById
     * @type {Object.<number,Field>}
     * @readonly
     */
    fieldsById: {
        get: function() {

            /* istanbul ignore if */
            if (this._fieldsById)
                return this._fieldsById;

            this._fieldsById = {};
            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {
                var field = this.fields[names[i]],
                    id = field.id;

                /* istanbul ignore if */
                if (this._fieldsById[id])
                    throw Error("duplicate id " + id + " in " + this);

                this._fieldsById[id] = field;
            }
            return this._fieldsById;
        }
    },

    /**
     * Fields of this message as an array for iteration.
     * @name Type#fieldsArray
     * @type {Field[]}
     * @readonly
     */
    fieldsArray: {
        get: function() {
            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));
        }
    },

    /**
     * Oneofs of this message as an array for iteration.
     * @name Type#oneofsArray
     * @type {OneOf[]}
     * @readonly
     */
    oneofsArray: {
        get: function() {
            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));
        }
    },

    /**
     * The registered constructor, if any registered, otherwise a generic constructor.
     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.
     * @name Type#ctor
     * @type {Constructor<{}>}
     */
    ctor: {
        get: function() {
            return this._ctor || (this.ctor = Type.generateConstructor(this)());
        },
        set: function(ctor) {

            // Ensure proper prototype
            var prototype = ctor.prototype;
            if (!(prototype instanceof Message)) {
                (ctor.prototype = new Message()).constructor = ctor;
                util.merge(ctor.prototype, prototype);
            }

            // Classes and messages reference their reflected type
            ctor.$type = ctor.prototype.$type = this;

            // Mix in static methods
            util.merge(ctor, Message, true);

            this._ctor = ctor;

            // Messages have non-enumerable default values on their prototype
            var i = 0;
            for (; i < /* initializes */ this.fieldsArray.length; ++i)
                this._fieldsArray[i].resolve(); // ensures a proper value

            // Messages have non-enumerable getters and setters for each virtual oneof field
            var ctorProperties = {};
            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)
                ctorProperties[this._oneofsArray[i].resolve().name] = {
                    get: util.oneOfGetter(this._oneofsArray[i].oneof),
                    set: util.oneOfSetter(this._oneofsArray[i].oneof)
                };
            if (i)
                Object.defineProperties(ctor.prototype, ctorProperties);
        }
    }
});

/**
 * Generates a constructor function for the specified type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
Type.generateConstructor = function generateConstructor(mtype) {
    /* eslint-disable no-unexpected-multiline */
    var gen = util.codegen(["p"], mtype.name);
    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype
    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)
        if ((field = mtype._fieldsArray[i]).map) gen
            ("this%s={}", util.safeProp(field.name));
        else if (field.repeated) gen
            ("this%s=[]", util.safeProp(field.name));
    return gen
    ("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)") // omit undefined or null
        ("this[ks[i]]=p[ks[i]]");
    /* eslint-enable no-unexpected-multiline */
};

function clearCache(type) {
    type._fieldsById = type._fieldsArray = type._oneofsArray = null;
    delete type.encode;
    delete type.decode;
    delete type.verify;
    return type;
}

/**
 * Message type descriptor.
 * @interface IType
 * @extends INamespace
 * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors
 * @property {Object.<string,IField>} fields Field descriptors
 * @property {number[][]} [extensions] Extension ranges
 * @property {number[][]} [reserved] Reserved ranges
 * @property {boolean} [group=false] Whether a legacy group or not
 */

/**
 * Creates a message type from a message type descriptor.
 * @param {string} name Message name
 * @param {IType} json Message type descriptor
 * @returns {Type} Created message type
 */
Type.fromJSON = function fromJSON(name, json) {
    var type = new Type(name, json.options);
    type.extensions = json.extensions;
    type.reserved = json.reserved;
    var names = Object.keys(json.fields),
        i = 0;
    for (; i < names.length; ++i)
        type.add(
            ( typeof json.fields[names[i]].keyType !== "undefined"
            ? MapField.fromJSON
            : Field.fromJSON )(names[i], json.fields[names[i]])
        );
    if (json.oneofs)
        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)
            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));
    if (json.nested)
        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {
            var nested = json.nested[names[i]];
            type.add( // most to least likely
                ( nested.id !== undefined
                ? Field.fromJSON
                : nested.fields !== undefined
                ? Type.fromJSON
                : nested.values !== undefined
                ? Enum.fromJSON
                : nested.methods !== undefined
                ? Service.fromJSON
                : Namespace.fromJSON )(names[i], nested)
            );
        }
    if (json.extensions && json.extensions.length)
        type.extensions = json.extensions;
    if (json.reserved && json.reserved.length)
        type.reserved = json.reserved;
    if (json.group)
        type.group = true;
    if (json.comment)
        type.comment = json.comment;
    return type;
};

/**
 * Converts this message type to a message type descriptor.
 * @param {IToJSONOptions} [toJSONOptions] JSON conversion options
 * @returns {IType} Message type descriptor
 */
Type.prototype.toJSON = function toJSON(toJSONOptions) {
    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);
    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;
    return util.toObject([
        "options"    , inherited && inherited.options || undefined,
        "oneofs"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),
        "fields"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},
        "extensions" , this.extensions && this.extensions.length ? this.extensions : undefined,
        "reserved"   , this.reserved && this.reserved.length ? this.reserved : undefined,
        "group"      , this.group || undefined,
        "nested"     , inherited && inherited.nested || undefined,
        "comment"    , keepComments ? this.comment : undefined
    ]);
};

/**
 * @override
 */
Type.prototype.resolveAll = function resolveAll() {
    var fields = this.fieldsArray, i = 0;
    while (i < fields.length)
        fields[i++].resolve();
    var oneofs = this.oneofsArray; i = 0;
    while (i < oneofs.length)
        oneofs[i++].resolve();
    return Namespace.prototype.resolveAll.call(this);
};

/**
 * @override
 */
Type.prototype.get = function get(name) {
    return this.fields[name]
        || this.oneofs && this.oneofs[name]
        || this.nested && this.nested[name]
        || null;
};

/**
 * Adds a nested object to this type.
 * @param {ReflectionObject} object Nested object to add
 * @returns {Type} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id
 */
Type.prototype.add = function add(object) {

    if (this.get(object.name))
        throw Error("duplicate name '" + object.name + "' in " + this);

    if (object instanceof Field && object.extend === undefined) {
        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.
        // The root object takes care of adding distinct sister-fields to the respective extended
        // type instead.

        // avoids calling the getter if not absolutely necessary because it's called quite frequently
        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])
            throw Error("duplicate id " + object.id + " in " + this);
        if (this.isReservedId(object.id))
            throw Error("id " + object.id + " is reserved in " + this);
        if (this.isReservedName(object.name))
            throw Error("name '" + object.name + "' is reserved in " + this);

        if (object.parent)
            object.parent.remove(object);
        this.fields[object.name] = object;
        object.message = this;
        object.onAdd(this);
        return clearCache(this);
    }
    if (object instanceof OneOf) {
        if (!this.oneofs)
            this.oneofs = {};
        this.oneofs[object.name] = object;
        object.onAdd(this);
        return clearCache(this);
    }
    return Namespace.prototype.add.call(this, object);
};

/**
 * Removes a nested object from this type.
 * @param {ReflectionObject} object Nested object to remove
 * @returns {Type} `this`
 * @throws {TypeError} If arguments are invalid
 * @throws {Error} If `object` is not a member of this type
 */
Type.prototype.remove = function remove(object) {
    if (object instanceof Field && object.extend === undefined) {
        // See Type#add for the reason why extension fields are excluded here.

        /* istanbul ignore if */
        if (!this.fields || this.fields[object.name] !== object)
            throw Error(object + " is not a member of " + this);

        delete this.fields[object.name];
        object.parent = null;
        object.onRemove(this);
        return clearCache(this);
    }
    if (object instanceof OneOf) {

        /* istanbul ignore if */
        if (!this.oneofs || this.oneofs[object.name] !== object)
            throw Error(object + " is not a member of " + this);

        delete this.oneofs[object.name];
        object.parent = null;
        object.onRemove(this);
        return clearCache(this);
    }
    return Namespace.prototype.remove.call(this, object);
};

/**
 * Tests if the specified id is reserved.
 * @param {number} id Id to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Type.prototype.isReservedId = function isReservedId(id) {
    return Namespace.isReservedId(this.reserved, id);
};

/**
 * Tests if the specified name is reserved.
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
Type.prototype.isReservedName = function isReservedName(name) {
    return Namespace.isReservedName(this.reserved, name);
};

/**
 * Creates a new message of this type using the specified properties.
 * @param {Object.<string,*>} [properties] Properties to set
 * @returns {Message<{}>} Message instance
 */
Type.prototype.create = function create(properties) {
    return new this.ctor(properties);
};

/**
 * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.
 * @returns {Type} `this`
 */
Type.prototype.setup = function setup() {
    // Sets up everything at once so that the prototype chain does not have to be re-evaluated
    // multiple times (V8, soft-deopt prototype-check).

    var fullName = this.fullName,
        types    = [];
    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)
        types.push(this._fieldsArray[i].resolve().resolvedType);

    // Replace setup methods with type-specific generated functions
    this.encode = encoder(this)({
        Writer : Writer,
        types  : types,
        util   : util
    });
    this.decode = decoder(this)({
        Reader : Reader,
        types  : types,
        util   : util
    });
    this.verify = verifier(this)({
        types : types,
        util  : util
    });
    this.fromObject = converter.fromObject(this)({
        types : types,
        util  : util
    });
    this.toObject = converter.toObject(this)({
        types : types,
        util  : util
    });

    // Inject custom wrappers for common types
    var wrapper = wrappers[fullName];
    if (wrapper) {
        var originalThis = Object.create(this);
        // if (wrapper.fromObject) {
            originalThis.fromObject = this.fromObject;
            this.fromObject = wrapper.fromObject.bind(originalThis);
        // }
        // if (wrapper.toObject) {
            originalThis.toObject = this.toObject;
            this.toObject = wrapper.toObject.bind(originalThis);
        // }
    }

    return this;
};

/**
 * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.
 * @param {Message<{}>|Object.<string,*>} message Message instance or plain object
 * @param {Writer} [writer] Writer to encode to
 * @returns {Writer} writer
 */
Type.prototype.encode = function encode_setup(message, writer) {
    return this.setup().encode(message, writer); // overrides this method
};

/**
 * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.
 * @param {Message<{}>|Object.<string,*>} message Message instance or plain object
 * @param {Writer} [writer] Writer to encode to
 * @returns {Writer} writer
 */
Type.prototype.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();
};

/**
 * Decodes a message of this type.
 * @param {Reader|Uint8Array} reader Reader or buffer to decode from
 * @param {number} [length] Length of the message, if known beforehand
 * @returns {Message<{}>} Decoded message
 * @throws {Error} If the payload is not a reader or valid buffer
 * @throws {util.ProtocolError<{}>} If required fields are missing
 */
Type.prototype.decode = function decode_setup(reader, length) {
    return this.setup().decode(reader, length); // overrides this method
};

/**
 * Decodes a message of this type preceeded by its byte length as a varint.
 * @param {Reader|Uint8Array} reader Reader or buffer to decode from
 * @returns {Message<{}>} Decoded message
 * @throws {Error} If the payload is not a reader or valid buffer
 * @throws {util.ProtocolError} If required fields are missing
 */
Type.prototype.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof Reader))
        reader = Reader.create(reader);
    return this.decode(reader, reader.uint32());
};

/**
 * Verifies that field values are valid and that required fields are present.
 * @param {Object.<string,*>} message Plain object to verify
 * @returns {null|string} `null` if valid, otherwise the reason why it is not
 */
Type.prototype.verify = function verify_setup(message) {
    return this.setup().verify(message); // overrides this method
};

/**
 * Creates a new message of this type from a plain object. Also converts values to their respective internal types.
 * @param {Object.<string,*>} object Plain object to convert
 * @returns {Message<{}>} Message instance
 */
Type.prototype.fromObject = function fromObject(object) {
    return this.setup().fromObject(object);
};

/**
 * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.
 * @interface IConversionOptions
 * @property {Function} [longs] Long conversion type.
 * Valid values are `String` and `Number` (the global types).
 * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.
 * @property {Function} [enums] Enum value conversion type.
 * Only valid value is `String` (the global type).
 * Defaults to copy the present value, which is the numeric id.
 * @property {Function} [bytes] Bytes value conversion type.
 * Valid values are `Array` and (a base64 encoded) `String` (the global types).
 * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.
 * @property {boolean} [defaults=false] Also sets default values on the resulting object
 * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`
 * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`
 * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any
 * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings
 */

/**
 * Creates a plain object from a message of this type. Also converts values to other types if specified.
 * @param {Message<{}>} message Message instance
 * @param {IConversionOptions} [options] Conversion options
 * @returns {Object.<string,*>} Plain object
 */
Type.prototype.toObject = function toObject(message, options) {
    return this.setup().toObject(message, options);
};

/**
 * Decorator function as returned by {@link Type.d} (TypeScript).
 * @typedef TypeDecorator
 * @type {function}
 * @param {Constructor<T>} target Target constructor
 * @returns {undefined}
 * @template T extends Message<T>
 */

/**
 * Type decorator (TypeScript).
 * @param {string} [typeName] Type name, defaults to the constructor's name
 * @returns {TypeDecorator<T>} Decorator function
 * @template T extends Message<T>
 */
Type.d = function decorateType(typeName) {
    return function typeDecorator(target) {
        util.decorateType(target, typeName);
    };
};


/***/ }),

/***/ "./node_modules/protobufjs/src/types.js":
/*!**********************************************!*\
  !*** ./node_modules/protobufjs/src/types.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


/**
 * Common type constants.
 * @namespace
 */
var types = exports;

var util = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

var s = [
    "double",   // 0
    "float",    // 1
    "int32",    // 2
    "uint32",   // 3
    "sint32",   // 4
    "fixed32",  // 5
    "sfixed32", // 6
    "int64",    // 7
    "uint64",   // 8
    "sint64",   // 9
    "fixed64",  // 10
    "sfixed64", // 11
    "bool",     // 12
    "string",   // 13
    "bytes"     // 14
];

function bake(values, offset) {
    var i = 0, o = {};
    offset |= 0;
    while (i < values.length) o[s[i + offset]] = values[i++];
    return o;
}

/**
 * Basic type wire types.
 * @type {Object.<string,number>}
 * @const
 * @property {number} double=1 Fixed64 wire type
 * @property {number} float=5 Fixed32 wire type
 * @property {number} int32=0 Varint wire type
 * @property {number} uint32=0 Varint wire type
 * @property {number} sint32=0 Varint wire type
 * @property {number} fixed32=5 Fixed32 wire type
 * @property {number} sfixed32=5 Fixed32 wire type
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 * @property {number} bool=0 Varint wire type
 * @property {number} string=2 Ldelim wire type
 * @property {number} bytes=2 Ldelim wire type
 */
types.basic = bake([
    /* double   */ 1,
    /* float    */ 5,
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 5,
    /* sfixed32 */ 5,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1,
    /* bool     */ 0,
    /* string   */ 2,
    /* bytes    */ 2
]);

/**
 * Basic type defaults.
 * @type {Object.<string,*>}
 * @const
 * @property {number} double=0 Double default
 * @property {number} float=0 Float default
 * @property {number} int32=0 Int32 default
 * @property {number} uint32=0 Uint32 default
 * @property {number} sint32=0 Sint32 default
 * @property {number} fixed32=0 Fixed32 default
 * @property {number} sfixed32=0 Sfixed32 default
 * @property {number} int64=0 Int64 default
 * @property {number} uint64=0 Uint64 default
 * @property {number} sint64=0 Sint32 default
 * @property {number} fixed64=0 Fixed64 default
 * @property {number} sfixed64=0 Sfixed64 default
 * @property {boolean} bool=false Bool default
 * @property {string} string="" String default
 * @property {Array.<number>} bytes=Array(0) Bytes default
 * @property {null} message=null Message default
 */
types.defaults = bake([
    /* double   */ 0,
    /* float    */ 0,
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 0,
    /* sfixed32 */ 0,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 0,
    /* sfixed64 */ 0,
    /* bool     */ false,
    /* string   */ "",
    /* bytes    */ util.emptyArray,
    /* message  */ null
]);

/**
 * Basic long type wire types.
 * @type {Object.<string,number>}
 * @const
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 */
types.long = bake([
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1
], 7);

/**
 * Allowed types for map keys with their associated wire type.
 * @type {Object.<string,number>}
 * @const
 * @property {number} int32=0 Varint wire type
 * @property {number} uint32=0 Varint wire type
 * @property {number} sint32=0 Varint wire type
 * @property {number} fixed32=5 Fixed32 wire type
 * @property {number} sfixed32=5 Fixed32 wire type
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 * @property {number} bool=0 Varint wire type
 * @property {number} string=2 Ldelim wire type
 */
types.mapKey = bake([
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 5,
    /* sfixed32 */ 5,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1,
    /* bool     */ 0,
    /* string   */ 2
], 2);

/**
 * Allowed types for packed repeated fields with their associated wire type.
 * @type {Object.<string,number>}
 * @const
 * @property {number} double=1 Fixed64 wire type
 * @property {number} float=5 Fixed32 wire type
 * @property {number} int32=0 Varint wire type
 * @property {number} uint32=0 Varint wire type
 * @property {number} sint32=0 Varint wire type
 * @property {number} fixed32=5 Fixed32 wire type
 * @property {number} sfixed32=5 Fixed32 wire type
 * @property {number} int64=0 Varint wire type
 * @property {number} uint64=0 Varint wire type
 * @property {number} sint64=0 Varint wire type
 * @property {number} fixed64=1 Fixed64 wire type
 * @property {number} sfixed64=1 Fixed64 wire type
 * @property {number} bool=0 Varint wire type
 */
types.packed = bake([
    /* double   */ 1,
    /* float    */ 5,
    /* int32    */ 0,
    /* uint32   */ 0,
    /* sint32   */ 0,
    /* fixed32  */ 5,
    /* sfixed32 */ 5,
    /* int64    */ 0,
    /* uint64   */ 0,
    /* sint64   */ 0,
    /* fixed64  */ 1,
    /* sfixed64 */ 1,
    /* bool     */ 0
]);


/***/ }),

/***/ "./node_modules/protobufjs/src/util.js":
/*!*********************************************!*\
  !*** ./node_modules/protobufjs/src/util.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


/**
 * Various utility functions.
 * @namespace
 */
var util = module.exports = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

var roots = __webpack_require__(/*! ./roots */ "./node_modules/protobufjs/src/roots.js");

var Type, // cyclic
    Enum;

util.codegen = __webpack_require__(/*! @protobufjs/codegen */ "./node_modules/@protobufjs/codegen/index.js");
util.fetch   = __webpack_require__(/*! @protobufjs/fetch */ "./node_modules/@protobufjs/fetch/index.js");
util.path    = __webpack_require__(/*! @protobufjs/path */ "./node_modules/@protobufjs/path/index.js");

/**
 * Node's fs module if available.
 * @type {Object.<string,*>}
 */
util.fs = util.inquire("fs");

/**
 * Converts an object's values to an array.
 * @param {Object.<string,*>} object Object to convert
 * @returns {Array.<*>} Converted array
 */
util.toArray = function toArray(object) {
    if (object) {
        var keys  = Object.keys(object),
            array = new Array(keys.length),
            index = 0;
        while (index < keys.length)
            array[index] = object[keys[index++]];
        return array;
    }
    return [];
};

/**
 * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.
 * @param {Array.<*>} array Array to convert
 * @returns {Object.<string,*>} Converted object
 */
util.toObject = function toObject(array) {
    var object = {},
        index  = 0;
    while (index < array.length) {
        var key = array[index++],
            val = array[index++];
        if (val !== undefined)
            object[key] = val;
    }
    return object;
};

var safePropBackslashRe = /\\/g,
    safePropQuoteRe     = /"/g;

/**
 * Tests whether the specified name is a reserved word in JS.
 * @param {string} name Name to test
 * @returns {boolean} `true` if reserved, otherwise `false`
 */
util.isReserved = function isReserved(name) {
    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);
};

/**
 * Returns a safe property accessor for the specified property name.
 * @param {string} prop Property name
 * @returns {string} Safe accessor
 */
util.safeProp = function safeProp(prop) {
    if (!/^[$\w_]+$/.test(prop) || util.isReserved(prop))
        return "[\"" + prop.replace(safePropBackslashRe, "\\\\").replace(safePropQuoteRe, "\\\"") + "\"]";
    return "." + prop;
};

/**
 * Converts the first character of a string to upper case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.ucFirst = function ucFirst(str) {
    return str.charAt(0).toUpperCase() + str.substring(1);
};

var camelCaseRe = /_([a-z])/g;

/**
 * Converts a string to camel case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.camelCase = function camelCase(str) {
    return str.substring(0, 1)
         + str.substring(1)
               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });
};

/**
 * Compares reflected fields by id.
 * @param {Field} a First field
 * @param {Field} b Second field
 * @returns {number} Comparison value
 */
util.compareFieldsById = function compareFieldsById(a, b) {
    return a.id - b.id;
};

/**
 * Decorator helper for types (TypeScript).
 * @param {Constructor<T>} ctor Constructor function
 * @param {string} [typeName] Type name, defaults to the constructor's name
 * @returns {Type} Reflected type
 * @template T extends Message<T>
 * @property {Root} root Decorators root
 */
util.decorateType = function decorateType(ctor, typeName) {

    /* istanbul ignore if */
    if (ctor.$type) {
        if (typeName && ctor.$type.name !== typeName) {
            util.decorateRoot.remove(ctor.$type);
            ctor.$type.name = typeName;
            util.decorateRoot.add(ctor.$type);
        }
        return ctor.$type;
    }

    /* istanbul ignore next */
    if (!Type)
        Type = __webpack_require__(/*! ./type */ "./node_modules/protobufjs/src/type.js");

    var type = new Type(typeName || ctor.name);
    util.decorateRoot.add(type);
    type.ctor = ctor; // sets up .encode, .decode etc.
    Object.defineProperty(ctor, "$type", { value: type, enumerable: false });
    Object.defineProperty(ctor.prototype, "$type", { value: type, enumerable: false });
    return type;
};

var decorateEnumIndex = 0;

/**
 * Decorator helper for enums (TypeScript).
 * @param {Object} object Enum object
 * @returns {Enum} Reflected enum
 */
util.decorateEnum = function decorateEnum(object) {

    /* istanbul ignore if */
    if (object.$type)
        return object.$type;

    /* istanbul ignore next */
    if (!Enum)
        Enum = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js");

    var enm = new Enum("Enum" + decorateEnumIndex++, object);
    util.decorateRoot.add(enm);
    Object.defineProperty(object, "$type", { value: enm, enumerable: false });
    return enm;
};


/**
 * Sets the value of a property by property path. If a value already exists, it is turned to an array
 * @param {Object.<string,*>} dst Destination object
 * @param {string} path dot '.' delimited path of the property to set
 * @param {Object} value the value to set
 * @returns {Object.<string,*>} Destination object
 */
util.setProperty = function setProperty(dst, path, value) {
    function setProp(dst, path, value) {
        var part = path.shift();
        if (part === "__proto__") {
          return dst;
        }
        if (path.length > 0) {
            dst[part] = setProp(dst[part] || {}, path, value);
        } else {
            var prevValue = dst[part];
            if (prevValue)
                value = [].concat(prevValue).concat(value);
            dst[part] = value;
        }
        return dst;
    }

    if (typeof dst !== "object")
        throw TypeError("dst must be an object");
    if (!path)
        throw TypeError("path must be specified");

    path = path.split(".");
    return setProp(dst, path, value);
};

/**
 * Decorator root (TypeScript).
 * @name util.decorateRoot
 * @type {Root}
 * @readonly
 */
Object.defineProperty(util, "decorateRoot", {
    get: function() {
        return roots["decorated"] || (roots["decorated"] = new (__webpack_require__(/*! ./root */ "./node_modules/protobufjs/src/root.js"))());
    }
});


/***/ }),

/***/ "./node_modules/protobufjs/src/util/longbits.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/util/longbits.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = LongBits;

var util = __webpack_require__(/*! ../util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

/**
 * Constructs new long bits.
 * @classdesc Helper class for working with the low and high bits of a 64 bit value.
 * @memberof util
 * @constructor
 * @param {number} lo Low 32 bits, unsigned
 * @param {number} hi High 32 bits, unsigned
 */
function LongBits(lo, hi) {

    // note that the casts below are theoretically unnecessary as of today, but older statically
    // generated converter code might still call the ctor with signed 32bits. kept for compat.

    /**
     * Low bits.
     * @type {number}
     */
    this.lo = lo >>> 0;

    /**
     * High bits.
     * @type {number}
     */
    this.hi = hi >>> 0;
}

/**
 * Zero bits.
 * @memberof util.LongBits
 * @type {util.LongBits}
 */
var zero = LongBits.zero = new LongBits(0, 0);

zero.toNumber = function() { return 0; };
zero.zzEncode = zero.zzDecode = function() { return this; };
zero.length = function() { return 1; };

/**
 * Zero hash.
 * @memberof util.LongBits
 * @type {string}
 */
var zeroHash = LongBits.zeroHash = "\0\0\0\0\0\0\0\0";

/**
 * Constructs new long bits from the specified number.
 * @param {number} value Value
 * @returns {util.LongBits} Instance
 */
LongBits.fromNumber = function fromNumber(value) {
    if (value === 0)
        return zero;
    var sign = value < 0;
    if (sign)
        value = -value;
    var lo = value >>> 0,
        hi = (value - lo) / 4294967296 >>> 0;
    if (sign) {
        hi = ~hi >>> 0;
        lo = ~lo >>> 0;
        if (++lo > 4294967295) {
            lo = 0;
            if (++hi > 4294967295)
                hi = 0;
        }
    }
    return new LongBits(lo, hi);
};

/**
 * Constructs new long bits from a number, long or string.
 * @param {Long|number|string} value Value
 * @returns {util.LongBits} Instance
 */
LongBits.from = function from(value) {
    if (typeof value === "number")
        return LongBits.fromNumber(value);
    if (util.isString(value)) {
        /* istanbul ignore else */
        if (util.Long)
            value = util.Long.fromString(value);
        else
            return LongBits.fromNumber(parseInt(value, 10));
    }
    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;
};

/**
 * Converts this long bits to a possibly unsafe JavaScript number.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {number} Possibly unsafe number
 */
LongBits.prototype.toNumber = function toNumber(unsigned) {
    if (!unsigned && this.hi >>> 31) {
        var lo = ~this.lo + 1 >>> 0,
            hi = ~this.hi     >>> 0;
        if (!lo)
            hi = hi + 1 >>> 0;
        return -(lo + hi * 4294967296);
    }
    return this.lo + this.hi * 4294967296;
};

/**
 * Converts this long bits to a long.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long} Long
 */
LongBits.prototype.toLong = function toLong(unsigned) {
    return util.Long
        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))
        /* istanbul ignore next */
        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };
};

var charCodeAt = String.prototype.charCodeAt;

/**
 * Constructs new long bits from the specified 8 characters long hash.
 * @param {string} hash Hash
 * @returns {util.LongBits} Bits
 */
LongBits.fromHash = function fromHash(hash) {
    if (hash === zeroHash)
        return zero;
    return new LongBits(
        ( charCodeAt.call(hash, 0)
        | charCodeAt.call(hash, 1) << 8
        | charCodeAt.call(hash, 2) << 16
        | charCodeAt.call(hash, 3) << 24) >>> 0
    ,
        ( charCodeAt.call(hash, 4)
        | charCodeAt.call(hash, 5) << 8
        | charCodeAt.call(hash, 6) << 16
        | charCodeAt.call(hash, 7) << 24) >>> 0
    );
};

/**
 * Converts this long bits to a 8 characters long hash.
 * @returns {string} Hash
 */
LongBits.prototype.toHash = function toHash() {
    return String.fromCharCode(
        this.lo        & 255,
        this.lo >>> 8  & 255,
        this.lo >>> 16 & 255,
        this.lo >>> 24      ,
        this.hi        & 255,
        this.hi >>> 8  & 255,
        this.hi >>> 16 & 255,
        this.hi >>> 24
    );
};

/**
 * Zig-zag encodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits.prototype.zzEncode = function zzEncode() {
    var mask =   this.hi >> 31;
    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;
    return this;
};

/**
 * Zig-zag decodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits.prototype.zzDecode = function zzDecode() {
    var mask = -(this.lo & 1);
    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;
    return this;
};

/**
 * Calculates the length of this longbits when encoded as a varint.
 * @returns {number} Length
 */
LongBits.prototype.length = function length() {
    var part0 =  this.lo,
        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,
        part2 =  this.hi >>> 24;
    return part2 === 0
         ? part1 === 0
           ? part0 < 16384
             ? part0 < 128 ? 1 : 2
             : part0 < 2097152 ? 3 : 4
           : part1 < 16384
             ? part1 < 128 ? 5 : 6
             : part1 < 2097152 ? 7 : 8
         : part2 < 128 ? 9 : 10;
};


/***/ }),

/***/ "./node_modules/protobufjs/src/util/minimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/protobufjs/src/util/minimal.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var util = exports;

// used to return a Promise where callback is omitted
util.asPromise = __webpack_require__(/*! @protobufjs/aspromise */ "./node_modules/@protobufjs/aspromise/index.js");

// converts to / from base64 encoded strings
util.base64 = __webpack_require__(/*! @protobufjs/base64 */ "./node_modules/@protobufjs/base64/index.js");

// base class of rpc.Service
util.EventEmitter = __webpack_require__(/*! @protobufjs/eventemitter */ "./node_modules/@protobufjs/eventemitter/index.js");

// float handling accross browsers
util.float = __webpack_require__(/*! @protobufjs/float */ "./node_modules/@protobufjs/float/index.js");

// requires modules optionally and hides the call from bundlers
util.inquire = __webpack_require__(/*! @protobufjs/inquire */ "./node_modules/@protobufjs/inquire/index.js");

// converts to / from utf8 encoded strings
util.utf8 = __webpack_require__(/*! @protobufjs/utf8 */ "./node_modules/@protobufjs/utf8/index.js");

// provides a node-like buffer pool in the browser
util.pool = __webpack_require__(/*! @protobufjs/pool */ "./node_modules/@protobufjs/pool/index.js");

// utility to work with the low and high bits of a 64 bit value
util.LongBits = __webpack_require__(/*! ./longbits */ "./node_modules/protobufjs/src/util/longbits.js");

/**
 * Whether running within node or not.
 * @memberof util
 * @type {boolean}
 */
util.isNode = Boolean(typeof __webpack_require__.g !== "undefined"
                   && __webpack_require__.g
                   && __webpack_require__.g.process
                   && __webpack_require__.g.process.versions
                   && __webpack_require__.g.process.versions.node);

/**
 * Global object reference.
 * @memberof util
 * @type {Object}
 */
util.global = util.isNode && __webpack_require__.g
           || typeof window !== "undefined" && window
           || typeof self   !== "undefined" && self
           || this; // eslint-disable-line no-invalid-this

/**
 * An immuable empty array.
 * @memberof util
 * @type {Array.<*>}
 * @const
 */
util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes

/**
 * An immutable empty object.
 * @type {Object}
 * @const
 */
util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes

/**
 * Tests if the specified value is an integer.
 * @function
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is an integer
 */
util.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {
    return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
};

/**
 * Tests if the specified value is a string.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a string
 */
util.isString = function isString(value) {
    return typeof value === "string" || value instanceof String;
};

/**
 * Tests if the specified value is a non-null object.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a non-null object
 */
util.isObject = function isObject(value) {
    return value && typeof value === "object";
};

/**
 * Checks if a property on a message is considered to be present.
 * This is an alias of {@link util.isSet}.
 * @function
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isset =

/**
 * Checks if a property on a message is considered to be present.
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isSet = function isSet(obj, prop) {
    var value = obj[prop];
    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins
        return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
    return false;
};

/**
 * Any compatible Buffer instance.
 * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.
 * @interface Buffer
 * @extends Uint8Array
 */

/**
 * Node's Buffer class if available.
 * @type {Constructor<Buffer>}
 */
util.Buffer = (function() {
    try {
        var Buffer = util.inquire("buffer").Buffer;
        // refuse to use non-node buffers if not explicitly assigned (perf reasons):
        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;
    } catch (e) {
        /* istanbul ignore next */
        return null;
    }
})();

// Internal alias of or polyfull for Buffer.from.
util._Buffer_from = null;

// Internal alias of or polyfill for Buffer.allocUnsafe.
util._Buffer_allocUnsafe = null;

/**
 * Creates a new buffer of whatever type supported by the environment.
 * @param {number|number[]} [sizeOrArray=0] Buffer size or number array
 * @returns {Uint8Array|Buffer} Buffer
 */
util.newBuffer = function newBuffer(sizeOrArray) {
    /* istanbul ignore next */
    return typeof sizeOrArray === "number"
        ? util.Buffer
            ? util._Buffer_allocUnsafe(sizeOrArray)
            : new util.Array(sizeOrArray)
        : util.Buffer
            ? util._Buffer_from(sizeOrArray)
            : typeof Uint8Array === "undefined"
                ? sizeOrArray
                : new Uint8Array(sizeOrArray);
};

/**
 * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.
 * @type {Constructor<Uint8Array>}
 */
util.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore next */ : Array;

/**
 * Any compatible Long instance.
 * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.
 * @interface Long
 * @property {number} low Low bits
 * @property {number} high High bits
 * @property {boolean} unsigned Whether unsigned or not
 */

/**
 * Long.js's Long class if available.
 * @type {Constructor<Long>}
 */
util.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long
         || /* istanbul ignore next */ util.global.Long
         || util.inquire("long");

/**
 * Regular expression used to verify 2 bit (`bool`) map keys.
 * @type {RegExp}
 * @const
 */
util.key2Re = /^true|false|0|1$/;

/**
 * Regular expression used to verify 32 bit (`int32` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;

/**
 * Regular expression used to verify 64 bit (`int64` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;

/**
 * Converts a number or long to an 8 characters long hash string.
 * @param {Long|number} value Value to convert
 * @returns {string} Hash
 */
util.longToHash = function longToHash(value) {
    return value
        ? util.LongBits.from(value).toHash()
        : util.LongBits.zeroHash;
};

/**
 * Converts an 8 characters long hash string to a long or number.
 * @param {string} hash Hash
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long|number} Original value
 */
util.longFromHash = function longFromHash(hash, unsigned) {
    var bits = util.LongBits.fromHash(hash);
    if (util.Long)
        return util.Long.fromBits(bits.lo, bits.hi, unsigned);
    return bits.toNumber(Boolean(unsigned));
};

/**
 * Merges the properties of the source object into the destination object.
 * @memberof util
 * @param {Object.<string,*>} dst Destination object
 * @param {Object.<string,*>} src Source object
 * @param {boolean} [ifNotSet=false] Merges only if the key is not already set
 * @returns {Object.<string,*>} Destination object
 */
function merge(dst, src, ifNotSet) { // used by converters
    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)
        if (dst[keys[i]] === undefined || !ifNotSet)
            dst[keys[i]] = src[keys[i]];
    return dst;
}

util.merge = merge;

/**
 * Converts the first character of a string to lower case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.lcFirst = function lcFirst(str) {
    return str.charAt(0).toLowerCase() + str.substring(1);
};

/**
 * Creates a custom error constructor.
 * @memberof util
 * @param {string} name Error name
 * @returns {Constructor<Error>} Custom error constructor
 */
function newError(name) {

    function CustomError(message, properties) {

        if (!(this instanceof CustomError))
            return new CustomError(message, properties);

        // Error.call(this, message);
        // ^ just returns a new error instance because the ctor can be called as a function

        Object.defineProperty(this, "message", { get: function() { return message; } });

        /* istanbul ignore next */
        if (Error.captureStackTrace) // node
            Error.captureStackTrace(this, CustomError);
        else
            Object.defineProperty(this, "stack", { value: new Error().stack || "" });

        if (properties)
            merge(this, properties);
    }

    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;

    Object.defineProperty(CustomError.prototype, "name", { get: function() { return name; } });

    CustomError.prototype.toString = function toString() {
        return this.name + ": " + this.message;
    };

    return CustomError;
}

util.newError = newError;

/**
 * Constructs a new protocol error.
 * @classdesc Error subclass indicating a protocol specifc error.
 * @memberof util
 * @extends Error
 * @template T extends Message<T>
 * @constructor
 * @param {string} message Error message
 * @param {Object.<string,*>} [properties] Additional properties
 * @example
 * try {
 *     MyMessage.decode(someBuffer); // throws if required fields are missing
 * } catch (e) {
 *     if (e instanceof ProtocolError && e.instance)
 *         console.log("decoded so far: " + JSON.stringify(e.instance));
 * }
 */
util.ProtocolError = newError("ProtocolError");

/**
 * So far decoded message instance.
 * @name util.ProtocolError#instance
 * @type {Message<T>}
 */

/**
 * A OneOf getter as returned by {@link util.oneOfGetter}.
 * @typedef OneOfGetter
 * @type {function}
 * @returns {string|undefined} Set field name, if any
 */

/**
 * Builds a getter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfGetter} Unbound getter
 */
util.oneOfGetter = function getOneOf(fieldNames) {
    var fieldMap = {};
    for (var i = 0; i < fieldNames.length; ++i)
        fieldMap[fieldNames[i]] = 1;

    /**
     * @returns {string|undefined} Set field name, if any
     * @this Object
     * @ignore
     */
    return function() { // eslint-disable-line consistent-return
        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)
            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)
                return keys[i];
    };
};

/**
 * A OneOf setter as returned by {@link util.oneOfSetter}.
 * @typedef OneOfSetter
 * @type {function}
 * @param {string|undefined} value Field name
 * @returns {undefined}
 */

/**
 * Builds a setter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfSetter} Unbound setter
 */
util.oneOfSetter = function setOneOf(fieldNames) {

    /**
     * @param {string} name Field name
     * @returns {undefined}
     * @this Object
     * @ignore
     */
    return function(name) {
        for (var i = 0; i < fieldNames.length; ++i)
            if (fieldNames[i] !== name)
                delete this[fieldNames[i]];
    };
};

/**
 * Default conversion options used for {@link Message#toJSON} implementations.
 *
 * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:
 *
 * - Longs become strings
 * - Enums become string keys
 * - Bytes become base64 encoded strings
 * - (Sub-)Messages become plain objects
 * - Maps become plain objects with all string keys
 * - Repeated fields become arrays
 * - NaN and Infinity for float and double fields become strings
 *
 * @type {IConversionOptions}
 * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json
 */
util.toJSONOptions = {
    longs: String,
    enums: String,
    bytes: String,
    json: true
};

// Sets up buffer utility according to the environment (called in index-minimal)
util._configure = function() {
    var Buffer = util.Buffer;
    /* istanbul ignore if */
    if (!Buffer) {
        util._Buffer_from = util._Buffer_allocUnsafe = null;
        return;
    }
    // because node 4.x buffers are incompatible & immutable
    // see: https://github.com/dcodeIO/protobuf.js/pull/665
    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||
        /* istanbul ignore next */
        function Buffer_from(value, encoding) {
            return new Buffer(value, encoding);
        };
    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||
        /* istanbul ignore next */
        function Buffer_allocUnsafe(size) {
            return new Buffer(size);
        };
};


/***/ }),

/***/ "./node_modules/protobufjs/src/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/verifier.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = verifier;

var Enum      = __webpack_require__(/*! ./enum */ "./node_modules/protobufjs/src/enum.js"),
    util      = __webpack_require__(/*! ./util */ "./node_modules/protobufjs/src/util.js");

function invalid(field, expected) {
    return field.name + ": " + expected + (field.repeated && expected !== "array" ? "[]" : field.map && expected !== "object" ? "{k:"+field.keyType+"}" : "") + " expected";
}

/**
 * Generates a partial value verifier.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {number} fieldIndex Field index
 * @param {string} ref Variable reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genVerifyValue(gen, field, fieldIndex, ref) {
    /* eslint-disable no-unexpected-multiline */
    if (field.resolvedType) {
        if (field.resolvedType instanceof Enum) { gen
            ("switch(%s){", ref)
                ("default:")
                    ("return%j", invalid(field, "enum value"));
            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen
                ("case %i:", field.resolvedType.values[keys[j]]);
            gen
                    ("break")
            ("}");
        } else {
            gen
            ("{")
                ("var e=types[%i].verify(%s);", fieldIndex, ref)
                ("if(e)")
                    ("return%j+e", field.name + ".")
            ("}");
        }
    } else {
        switch (field.type) {
            case "int32":
            case "uint32":
            case "sint32":
            case "fixed32":
            case "sfixed32": gen
                ("if(!util.isInteger(%s))", ref)
                    ("return%j", invalid(field, "integer"));
                break;
            case "int64":
            case "uint64":
            case "sint64":
            case "fixed64":
            case "sfixed64": gen
                ("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", ref, ref, ref, ref)
                    ("return%j", invalid(field, "integer|Long"));
                break;
            case "float":
            case "double": gen
                ("if(typeof %s!==\"number\")", ref)
                    ("return%j", invalid(field, "number"));
                break;
            case "bool": gen
                ("if(typeof %s!==\"boolean\")", ref)
                    ("return%j", invalid(field, "boolean"));
                break;
            case "string": gen
                ("if(!util.isString(%s))", ref)
                    ("return%j", invalid(field, "string"));
                break;
            case "bytes": gen
                ("if(!(%s&&typeof %s.length===\"number\"||util.isString(%s)))", ref, ref, ref)
                    ("return%j", invalid(field, "buffer"));
                break;
        }
    }
    return gen;
    /* eslint-enable no-unexpected-multiline */
}

/**
 * Generates a partial key verifier.
 * @param {Codegen} gen Codegen instance
 * @param {Field} field Reflected field
 * @param {string} ref Variable reference
 * @returns {Codegen} Codegen instance
 * @ignore
 */
function genVerifyKey(gen, field, ref) {
    /* eslint-disable no-unexpected-multiline */
    switch (field.keyType) {
        case "int32":
        case "uint32":
        case "sint32":
        case "fixed32":
        case "sfixed32": gen
            ("if(!util.key32Re.test(%s))", ref)
                ("return%j", invalid(field, "integer key"));
            break;
        case "int64":
        case "uint64":
        case "sint64":
        case "fixed64":
        case "sfixed64": gen
            ("if(!util.key64Re.test(%s))", ref) // see comment above: x is ok, d is not
                ("return%j", invalid(field, "integer|Long key"));
            break;
        case "bool": gen
            ("if(!util.key2Re.test(%s))", ref)
                ("return%j", invalid(field, "boolean key"));
            break;
    }
    return gen;
    /* eslint-enable no-unexpected-multiline */
}

/**
 * Generates a verifier specific to the specified message type.
 * @param {Type} mtype Message type
 * @returns {Codegen} Codegen instance
 */
function verifier(mtype) {
    /* eslint-disable no-unexpected-multiline */

    var gen = util.codegen(["m"], mtype.name + "$verify")
    ("if(typeof m!==\"object\"||m===null)")
        ("return%j", "object expected");
    var oneofs = mtype.oneofsArray,
        seenFirstField = {};
    if (oneofs.length) gen
    ("var p={}");

    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {
        var field = mtype._fieldsArray[i].resolve(),
            ref   = "m" + util.safeProp(field.name);

        if (field.optional) gen
        ("if(%s!=null&&m.hasOwnProperty(%j)){", ref, field.name); // !== undefined && !== null

        // map fields
        if (field.map) { gen
            ("if(!util.isObject(%s))", ref)
                ("return%j", invalid(field, "object"))
            ("var k=Object.keys(%s)", ref)
            ("for(var i=0;i<k.length;++i){");
                genVerifyKey(gen, field, "k[i]");
                genVerifyValue(gen, field, i, ref + "[k[i]]")
            ("}");

        // repeated fields
        } else if (field.repeated) { gen
            ("if(!Array.isArray(%s))", ref)
                ("return%j", invalid(field, "array"))
            ("for(var i=0;i<%s.length;++i){", ref);
                genVerifyValue(gen, field, i, ref + "[i]")
            ("}");

        // required or present fields
        } else {
            if (field.partOf) {
                var oneofProp = util.safeProp(field.partOf.name);
                if (seenFirstField[field.partOf.name] === 1) gen
            ("if(p%s===1)", oneofProp)
                ("return%j", field.partOf.name + ": multiple values");
                seenFirstField[field.partOf.name] = 1;
                gen
            ("p%s=1", oneofProp);
            }
            genVerifyValue(gen, field, i, ref);
        }
        if (field.optional) gen
        ("}");
    }
    return gen
    ("return null");
    /* eslint-enable no-unexpected-multiline */
}

/***/ }),

/***/ "./node_modules/protobufjs/src/wrappers.js":
/*!*************************************************!*\
  !*** ./node_modules/protobufjs/src/wrappers.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


/**
 * Wrappers for common types.
 * @type {Object.<string,IWrapper>}
 * @const
 */
var wrappers = exports;

var Message = __webpack_require__(/*! ./message */ "./node_modules/protobufjs/src/message.js");

/**
 * From object converter part of an {@link IWrapper}.
 * @typedef WrapperFromObjectConverter
 * @type {function}
 * @param {Object.<string,*>} object Plain object
 * @returns {Message<{}>} Message instance
 * @this Type
 */

/**
 * To object converter part of an {@link IWrapper}.
 * @typedef WrapperToObjectConverter
 * @type {function}
 * @param {Message<{}>} message Message instance
 * @param {IConversionOptions} [options] Conversion options
 * @returns {Object.<string,*>} Plain object
 * @this Type
 */

/**
 * Common type wrapper part of {@link wrappers}.
 * @interface IWrapper
 * @property {WrapperFromObjectConverter} [fromObject] From object converter
 * @property {WrapperToObjectConverter} [toObject] To object converter
 */

// Custom wrapper for Any
wrappers[".google.protobuf.Any"] = {

    fromObject: function(object) {

        // unwrap value type if mapped
        if (object && object["@type"]) {
             // Only use fully qualified type name after the last '/'
            var name = object["@type"].substring(object["@type"].lastIndexOf("/") + 1);
            var type = this.lookup(name);
            /* istanbul ignore else */
            if (type) {
                // type_url does not accept leading "."
                var type_url = object["@type"].charAt(0) === "." ?
                    object["@type"].substr(1) : object["@type"];
                // type_url prefix is optional, but path seperator is required
                if (type_url.indexOf("/") === -1) {
                    type_url = "/" + type_url;
                }
                return this.create({
                    type_url: type_url,
                    value: type.encode(type.fromObject(object)).finish()
                });
            }
        }

        return this.fromObject(object);
    },

    toObject: function(message, options) {

        // Default prefix
        var googleApi = "type.googleapis.com/";
        var prefix = "";
        var name = "";

        // decode value if requested and unmapped
        if (options && options.json && message.type_url && message.value) {
            // Only use fully qualified type name after the last '/'
            name = message.type_url.substring(message.type_url.lastIndexOf("/") + 1);
            // Separate the prefix used
            prefix = message.type_url.substring(0, message.type_url.lastIndexOf("/") + 1);
            var type = this.lookup(name);
            /* istanbul ignore else */
            if (type)
                message = type.decode(message.value);
        }

        // wrap value if unmapped
        if (!(message instanceof this.ctor) && message instanceof Message) {
            var object = message.$type.toObject(message, options);
            var messageName = message.$type.fullName[0] === "." ?
                message.$type.fullName.substr(1) : message.$type.fullName;
            // Default to type.googleapis.com prefix if no prefix is used
            if (prefix === "") {
                prefix = googleApi;
            }
            name = prefix + messageName;
            object["@type"] = name;
            return object;
        }

        return this.toObject(message, options);
    }
};


/***/ }),

/***/ "./node_modules/protobufjs/src/writer.js":
/*!***********************************************!*\
  !*** ./node_modules/protobufjs/src/writer.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = Writer;

var util      = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

var BufferWriter; // cyclic

var LongBits  = util.LongBits,
    base64    = util.base64,
    utf8      = util.utf8;

/**
 * Constructs a new writer operation instance.
 * @classdesc Scheduled writer operation.
 * @constructor
 * @param {function(*, Uint8Array, number)} fn Function to call
 * @param {number} len Value byte length
 * @param {*} val Value to write
 * @ignore
 */
function Op(fn, len, val) {

    /**
     * Function to call.
     * @type {function(Uint8Array, number, *)}
     */
    this.fn = fn;

    /**
     * Value byte length.
     * @type {number}
     */
    this.len = len;

    /**
     * Next operation.
     * @type {Writer.Op|undefined}
     */
    this.next = undefined;

    /**
     * Value to write.
     * @type {*}
     */
    this.val = val; // type varies
}

/* istanbul ignore next */
function noop() {} // eslint-disable-line no-empty-function

/**
 * Constructs a new writer state instance.
 * @classdesc Copied writer state.
 * @memberof Writer
 * @constructor
 * @param {Writer} writer Writer to copy state from
 * @ignore
 */
function State(writer) {

    /**
     * Current head.
     * @type {Writer.Op}
     */
    this.head = writer.head;

    /**
     * Current tail.
     * @type {Writer.Op}
     */
    this.tail = writer.tail;

    /**
     * Current buffer length.
     * @type {number}
     */
    this.len = writer.len;

    /**
     * Next state.
     * @type {State|null}
     */
    this.next = writer.states;
}

/**
 * Constructs a new writer instance.
 * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 */
function Writer() {

    /**
     * Current length.
     * @type {number}
     */
    this.len = 0;

    /**
     * Operations head.
     * @type {Object}
     */
    this.head = new Op(noop, 0, 0);

    /**
     * Operations tail
     * @type {Object}
     */
    this.tail = this.head;

    /**
     * Linked forked states.
     * @type {Object|null}
     */
    this.states = null;

    // When a value is written, the writer calculates its byte length and puts it into a linked
    // list of operations to perform when finish() is called. This both allows us to allocate
    // buffers of the exact required size and reduces the amount of work we have to do compared
    // to first calculating over objects and then encoding over objects. In our case, the encoding
    // part is just a linked list walk calling operations with already prepared values.
}

var create = function create() {
    return util.Buffer
        ? function create_buffer_setup() {
            return (Writer.create = function create_buffer() {
                return new BufferWriter();
            })();
        }
        /* istanbul ignore next */
        : function create_array() {
            return new Writer();
        };
};

/**
 * Creates a new writer.
 * @function
 * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}
 */
Writer.create = create();

/**
 * Allocates a buffer of the specified size.
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */
Writer.alloc = function alloc(size) {
    return new util.Array(size);
};

// Use Uint8Array buffer pool in the browser, just like node does with buffers
/* istanbul ignore else */
if (util.Array !== Array)
    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);

/**
 * Pushes a new operation to the queue.
 * @param {function(Uint8Array, number, *)} fn Function to call
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @returns {Writer} `this`
 * @private
 */
Writer.prototype._push = function push(fn, len, val) {
    this.tail = this.tail.next = new Op(fn, len, val);
    this.len += len;
    return this;
};

function writeByte(val, buf, pos) {
    buf[pos] = val & 255;
}

function writeVarint32(val, buf, pos) {
    while (val > 127) {
        buf[pos++] = val & 127 | 128;
        val >>>= 7;
    }
    buf[pos] = val;
}

/**
 * Constructs a new varint writer operation instance.
 * @classdesc Scheduled varint writer operation.
 * @extends Op
 * @constructor
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @ignore
 */
function VarintOp(len, val) {
    this.len = len;
    this.next = undefined;
    this.val = val;
}

VarintOp.prototype = Object.create(Op.prototype);
VarintOp.prototype.fn = writeVarint32;

/**
 * Writes an unsigned 32 bit value as a varint.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.uint32 = function write_uint32(value) {
    // here, the call to this.push has been inlined and a varint specific Op subclass is used.
    // uint32 is by far the most frequently used operation and benefits significantly from this.
    this.len += (this.tail = this.tail.next = new VarintOp(
        (value = value >>> 0)
                < 128       ? 1
        : value < 16384     ? 2
        : value < 2097152   ? 3
        : value < 268435456 ? 4
        :                     5,
    value)).len;
    return this;
};

/**
 * Writes a signed 32 bit value as a varint.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.int32 = function write_int32(value) {
    return value < 0
        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec
        : this.uint32(value);
};

/**
 * Writes a 32 bit value as a varint, zig-zag encoded.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sint32 = function write_sint32(value) {
    return this.uint32((value << 1 ^ value >> 31) >>> 0);
};

function writeVarint64(val, buf, pos) {
    while (val.hi) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
        val.hi >>>= 7;
    }
    while (val.lo > 127) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = val.lo >>> 7;
    }
    buf[pos++] = val.lo;
}

/**
 * Writes an unsigned 64 bit value as a varint.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.uint64 = function write_uint64(value) {
    var bits = LongBits.from(value);
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a signed 64 bit value as a varint.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.int64 = Writer.prototype.uint64;

/**
 * Writes a signed 64 bit value as a varint, zig-zag encoded.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sint64 = function write_sint64(value) {
    var bits = LongBits.from(value).zzEncode();
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a boolish value as a varint.
 * @param {boolean} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.bool = function write_bool(value) {
    return this._push(writeByte, 1, value ? 1 : 0);
};

function writeFixed32(val, buf, pos) {
    buf[pos    ] =  val         & 255;
    buf[pos + 1] =  val >>> 8   & 255;
    buf[pos + 2] =  val >>> 16  & 255;
    buf[pos + 3] =  val >>> 24;
}

/**
 * Writes an unsigned 32 bit value as fixed 32 bits.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.fixed32 = function write_fixed32(value) {
    return this._push(writeFixed32, 4, value >>> 0);
};

/**
 * Writes a signed 32 bit value as fixed 32 bits.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sfixed32 = Writer.prototype.fixed32;

/**
 * Writes an unsigned 64 bit value as fixed 64 bits.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.fixed64 = function write_fixed64(value) {
    var bits = LongBits.from(value);
    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
};

/**
 * Writes a signed 64 bit value as fixed 64 bits.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sfixed64 = Writer.prototype.fixed64;

/**
 * Writes a float (32 bit).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.float = function write_float(value) {
    return this._push(util.float.writeFloatLE, 4, value);
};

/**
 * Writes a double (64 bit float).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.double = function write_double(value) {
    return this._push(util.float.writeDoubleLE, 8, value);
};

var writeBytes = util.Array.prototype.set
    ? function writeBytes_set(val, buf, pos) {
        buf.set(val, pos); // also works for plain array values
    }
    /* istanbul ignore next */
    : function writeBytes_for(val, buf, pos) {
        for (var i = 0; i < val.length; ++i)
            buf[pos + i] = val[i];
    };

/**
 * Writes a sequence of bytes.
 * @param {Uint8Array|string} value Buffer or base64 encoded string to write
 * @returns {Writer} `this`
 */
Writer.prototype.bytes = function write_bytes(value) {
    var len = value.length >>> 0;
    if (!len)
        return this._push(writeByte, 1, 0);
    if (util.isString(value)) {
        var buf = Writer.alloc(len = base64.length(value));
        base64.decode(value, buf, 0);
        value = buf;
    }
    return this.uint32(len)._push(writeBytes, len, value);
};

/**
 * Writes a string.
 * @param {string} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.string = function write_string(value) {
    var len = utf8.length(value);
    return len
        ? this.uint32(len)._push(utf8.write, len, value)
        : this._push(writeByte, 1, 0);
};

/**
 * Forks this writer's state by pushing it to a stack.
 * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
 * @returns {Writer} `this`
 */
Writer.prototype.fork = function fork() {
    this.states = new State(this);
    this.head = this.tail = new Op(noop, 0, 0);
    this.len = 0;
    return this;
};

/**
 * Resets this instance to the last state.
 * @returns {Writer} `this`
 */
Writer.prototype.reset = function reset() {
    if (this.states) {
        this.head   = this.states.head;
        this.tail   = this.states.tail;
        this.len    = this.states.len;
        this.states = this.states.next;
    } else {
        this.head = this.tail = new Op(noop, 0, 0);
        this.len  = 0;
    }
    return this;
};

/**
 * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
 * @returns {Writer} `this`
 */
Writer.prototype.ldelim = function ldelim() {
    var head = this.head,
        tail = this.tail,
        len  = this.len;
    this.reset().uint32(len);
    if (len) {
        this.tail.next = head.next; // skip noop
        this.tail = tail;
        this.len += len;
    }
    return this;
};

/**
 * Finishes the write operation.
 * @returns {Uint8Array} Finished buffer
 */
Writer.prototype.finish = function finish() {
    var head = this.head.next, // skip noop
        buf  = this.constructor.alloc(this.len),
        pos  = 0;
    while (head) {
        head.fn(head.val, buf, pos);
        pos += head.len;
        head = head.next;
    }
    // this.head = this.tail = null;
    return buf;
};

Writer._configure = function(BufferWriter_) {
    BufferWriter = BufferWriter_;
    Writer.create = create();
    BufferWriter._configure();
};


/***/ }),

/***/ "./node_modules/protobufjs/src/writer_buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/protobufjs/src/writer_buffer.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = BufferWriter;

// extends Writer
var Writer = __webpack_require__(/*! ./writer */ "./node_modules/protobufjs/src/writer.js");
(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;

var util = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");

/**
 * Constructs a new buffer writer instance.
 * @classdesc Wire format writer using node buffers.
 * @extends Writer
 * @constructor
 */
function BufferWriter() {
    Writer.call(this);
}

BufferWriter._configure = function () {
    /**
     * Allocates a buffer of the specified size.
     * @function
     * @param {number} size Buffer size
     * @returns {Buffer} Buffer
     */
    BufferWriter.alloc = util._Buffer_allocUnsafe;

    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === "set"
        ? function writeBytesBuffer_set(val, buf, pos) {
          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)
          // also works for plain array values
        }
        /* istanbul ignore next */
        : function writeBytesBuffer_copy(val, buf, pos) {
          if (val.copy) // Buffer values
            val.copy(buf, pos, 0, val.length);
          else for (var i = 0; i < val.length;) // plain array values
            buf[pos++] = val[i++];
        };
};


/**
 * @override
 */
BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
    if (util.isString(value))
        value = util._Buffer_from(value, "base64");
    var len = value.length >>> 0;
    this.uint32(len);
    if (len)
        this._push(BufferWriter.writeBytesBuffer, len, value);
    return this;
};

function writeStringBuffer(val, buf, pos) {
    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)
        util.utf8.write(val, buf, pos);
    else if (buf.utf8Write)
        buf.utf8Write(val, pos);
    else
        buf.write(val, pos);
}

/**
 * @override
 */
BufferWriter.prototype.string = function write_string_buffer(value) {
    var len = util.Buffer.byteLength(value);
    this.uint32(len);
    if (len)
        this._push(writeStringBuffer, len, value);
    return this;
};


/**
 * Finishes the write operation.
 * @name BufferWriter#finish
 * @function
 * @returns {Buffer} Finished buffer
 */

BufferWriter._configure();


/***/ }),

/***/ "./node_modules/querystringify/index.js":
/*!**********************************************!*\
  !*** ./node_modules/querystringify/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var has = Object.prototype.hasOwnProperty
  , undef;

/**
 * Decode a URI encoded string.
 *
 * @param {String} input The URI encoded string.
 * @returns {String|Null} The decoded string.
 * @api private
 */
function decode(input) {
  try {
    return decodeURIComponent(input.replace(/\+/g, ' '));
  } catch (e) {
    return null;
  }
}

/**
 * Attempts to encode a given input.
 *
 * @param {String} input The string that needs to be encoded.
 * @returns {String|Null} The encoded string.
 * @api private
 */
function encode(input) {
  try {
    return encodeURIComponent(input);
  } catch (e) {
    return null;
  }
}

/**
 * Simple query string parser.
 *
 * @param {String} query The query string that needs to be parsed.
 * @returns {Object}
 * @api public
 */
function querystring(query) {
  var parser = /([^=?#&]+)=?([^&]*)/g
    , result = {}
    , part;

  while (part = parser.exec(query)) {
    var key = decode(part[1])
      , value = decode(part[2]);

    //
    // Prevent overriding of existing properties. This ensures that build-in
    // methods like `toString` or __proto__ are not overriden by malicious
    // querystrings.
    //
    // In the case if failed decoding, we want to omit the key/value pairs
    // from the result.
    //
    if (key === null || value === null || key in result) continue;
    result[key] = value;
  }

  return result;
}

/**
 * Transform a query string to an object.
 *
 * @param {Object} obj Object that should be transformed.
 * @param {String} prefix Optional prefix.
 * @returns {String}
 * @api public
 */
function querystringify(obj, prefix) {
  prefix = prefix || '';

  var pairs = []
    , value
    , key;

  //
  // Optionally prefix with a '?' if needed
  //
  if ('string' !== typeof prefix) prefix = '?';

  for (key in obj) {
    if (has.call(obj, key)) {
      value = obj[key];

      //
      // Edge cases where we actually want to encode the value to an empty
      // string instead of the stringified value.
      //
      if (!value && (value === null || value === undef || isNaN(value))) {
        value = '';
      }

      key = encode(key);
      value = encode(value);

      //
      // If we failed to encode the strings, we should bail out as we don't
      // want to add invalid strings to the query.
      //
      if (key === null || value === null) continue;
      pairs.push(key +'='+ value);
    }
  }

  return pairs.length ? prefix + pairs.join('&') : '';
}

//
// Expose the module.
//
exports.stringify = querystringify;
exports.parse = querystring;


/***/ }),

/***/ "./node_modules/requires-port/index.js":
/*!*********************************************!*\
  !*** ./node_modules/requires-port/index.js ***!
  \*********************************************/
/***/ (function(module) {

"use strict";


/**
 * Check if we're required to add a port number.
 *
 * @see https://url.spec.whatwg.org/#default-port
 * @param {Number|String} port Port number we need to check
 * @param {String} protocol Protocol we need to check against.
 * @returns {Boolean} Is it a default port for the given protocol
 * @api private
 */
module.exports = function required(port, protocol) {
  protocol = protocol.split(':')[0];
  port = +port;

  if (!port) return false;

  switch (protocol) {
    case 'http':
    case 'ws':
    return port !== 80;

    case 'https':
    case 'wss':
    return port !== 443;

    case 'ftp':
    return port !== 21;

    case 'gopher':
    return port !== 70;

    case 'file':
    return false;
  }

  return port !== 0;
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/entry.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/entry.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var transportList = __webpack_require__(/*! ./transport-list */ "./node_modules/sockjs-client/lib/transport-list.js");

module.exports = __webpack_require__(/*! ./main */ "./node_modules/sockjs-client/lib/main.js")(transportList);

// TODO can't get rid of this until all servers do
if ('_sockjs_onload' in __webpack_require__.g) {
  setTimeout(__webpack_require__.g._sockjs_onload, 1);
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/close.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/close.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , Event = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/event/event.js")
  ;

function CloseEvent() {
  Event.call(this);
  this.initEvent('close', false, false);
  this.wasClean = false;
  this.code = 0;
  this.reason = '';
}

inherits(CloseEvent, Event);

module.exports = CloseEvent;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/emitter.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/emitter.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventTarget = __webpack_require__(/*! ./eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js")
  ;

function EventEmitter() {
  EventTarget.call(this);
}

inherits(EventEmitter, EventTarget);

EventEmitter.prototype.removeAllListeners = function(type) {
  if (type) {
    delete this._listeners[type];
  } else {
    this._listeners = {};
  }
};

EventEmitter.prototype.once = function(type, listener) {
  var self = this
    , fired = false;

  function g() {
    self.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  this.on(type, g);
};

EventEmitter.prototype.emit = function() {
  var type = arguments[0];
  var listeners = this._listeners[type];
  if (!listeners) {
    return;
  }
  // equivalent of Array.prototype.slice.call(arguments, 1);
  var l = arguments.length;
  var args = new Array(l - 1);
  for (var ai = 1; ai < l; ai++) {
    args[ai - 1] = arguments[ai];
  }
  for (var i = 0; i < listeners.length; i++) {
    listeners[i].apply(this, args);
  }
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;
EventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;

module.exports.EventEmitter = EventEmitter;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/event.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";


function Event(eventType) {
  this.type = eventType;
}

Event.prototype.initEvent = function(eventType, canBubble, cancelable) {
  this.type = eventType;
  this.bubbles = canBubble;
  this.cancelable = cancelable;
  this.timeStamp = +new Date();
  return this;
};

Event.prototype.stopPropagation = function() {};
Event.prototype.preventDefault = function() {};

Event.CAPTURING_PHASE = 1;
Event.AT_TARGET = 2;
Event.BUBBLING_PHASE = 3;

module.exports = Event;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/eventtarget.js":
/*!*************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/eventtarget.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";


/* Simplified implementation of DOM2 EventTarget.
 *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget
 */

function EventTarget() {
  this._listeners = {};
}

EventTarget.prototype.addEventListener = function(eventType, listener) {
  if (!(eventType in this._listeners)) {
    this._listeners[eventType] = [];
  }
  var arr = this._listeners[eventType];
  // #4
  if (arr.indexOf(listener) === -1) {
    // Make a copy so as not to interfere with a current dispatchEvent.
    arr = arr.concat([listener]);
  }
  this._listeners[eventType] = arr;
};

EventTarget.prototype.removeEventListener = function(eventType, listener) {
  var arr = this._listeners[eventType];
  if (!arr) {
    return;
  }
  var idx = arr.indexOf(listener);
  if (idx !== -1) {
    if (arr.length > 1) {
      // Make a copy so as not to interfere with a current dispatchEvent.
      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));
    } else {
      delete this._listeners[eventType];
    }
    return;
  }
};

EventTarget.prototype.dispatchEvent = function() {
  var event = arguments[0];
  var t = event.type;
  // equivalent of Array.prototype.slice.call(arguments, 0);
  var args = arguments.length === 1 ? [event] : Array.apply(null, arguments);
  // TODO: This doesn't match the real behavior; per spec, onfoo get
  // their place in line from the /first/ time they're set from
  // non-null. Although WebKit bumps it to the end every time it's
  // set.
  if (this['on' + t]) {
    this['on' + t].apply(this, args);
  }
  if (t in this._listeners) {
    // Grab a reference to the listeners list. removeEventListener may alter the list.
    var listeners = this._listeners[t];
    for (var i = 0; i < listeners.length; i++) {
      listeners[i].apply(this, args);
    }
  }
};

module.exports = EventTarget;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/trans-message.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/trans-message.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , Event = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/event/event.js")
  ;

function TransportMessageEvent(data) {
  Event.call(this);
  this.initEvent('message', false, false);
  this.data = data;
}

inherits(TransportMessageEvent, Event);

module.exports = TransportMessageEvent;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/facade.js":
/*!**************************************************!*\
  !*** ./node_modules/sockjs-client/lib/facade.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var iframeUtils = __webpack_require__(/*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  ;

function FacadeJS(transport) {
  this._transport = transport;
  transport.on('message', this._transportMessage.bind(this));
  transport.on('close', this._transportClose.bind(this));
}

FacadeJS.prototype._transportClose = function(code, reason) {
  iframeUtils.postMessage('c', JSON.stringify([code, reason]));
};
FacadeJS.prototype._transportMessage = function(frame) {
  iframeUtils.postMessage('t', frame);
};
FacadeJS.prototype._send = function(data) {
  this._transport.send(data);
};
FacadeJS.prototype._close = function() {
  this._transport.close();
  this._transport.removeAllListeners();
};

module.exports = FacadeJS;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/iframe-bootstrap.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/iframe-bootstrap.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , eventUtils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , FacadeJS = __webpack_require__(/*! ./facade */ "./node_modules/sockjs-client/lib/facade.js")
  , InfoIframeReceiver = __webpack_require__(/*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js")
  , iframeUtils = __webpack_require__(/*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , loc = __webpack_require__(/*! ./location */ "./node_modules/sockjs-client/lib/location.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:iframe-bootstrap');
}

module.exports = function(SockJS, availableTransports) {
  var transportMap = {};
  availableTransports.forEach(function(at) {
    if (at.facadeTransport) {
      transportMap[at.facadeTransport.transportName] = at.facadeTransport;
    }
  });

  // hard-coded for the info iframe
  // TODO see if we can make this more dynamic
  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;
  var parentOrigin;

  /* eslint-disable camelcase */
  SockJS.bootstrap_iframe = function() {
    /* eslint-enable camelcase */
    var facade;
    iframeUtils.currentWindowId = loc.hash.slice(1);
    var onMessage = function(e) {
      if (e.source !== parent) {
        return;
      }
      if (typeof parentOrigin === 'undefined') {
        parentOrigin = e.origin;
      }
      if (e.origin !== parentOrigin) {
        return;
      }

      var iframeMessage;
      try {
        iframeMessage = JSON.parse(e.data);
      } catch (ignored) {
        debug('bad json', e.data);
        return;
      }

      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {
        return;
      }
      switch (iframeMessage.type) {
      case 's':
        var p;
        try {
          p = JSON.parse(iframeMessage.data);
        } catch (ignored) {
          debug('bad json', iframeMessage.data);
          break;
        }
        var version = p[0];
        var transport = p[1];
        var transUrl = p[2];
        var baseUrl = p[3];
        debug(version, transport, transUrl, baseUrl);
        // change this to semver logic
        if (version !== SockJS.version) {
          throw new Error('Incompatible SockJS! Main site uses:' +
                    ' "' + version + '", the iframe:' +
                    ' "' + SockJS.version + '".');
        }

        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||
            !urlUtils.isOriginEqual(baseUrl, loc.href)) {
          throw new Error('Can\'t connect to different domain from within an ' +
                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');
        }
        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));
        break;
      case 'm':
        facade._send(iframeMessage.data);
        break;
      case 'c':
        if (facade) {
          facade._close();
        }
        facade = null;
        break;
      }
    };

    eventUtils.attachEvent('message', onMessage);

    // Start
    iframeUtils.postMessage('s');
  };
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-ajax.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-ajax.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , objectUtils = __webpack_require__(/*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-ajax');
}

function InfoAjax(url, AjaxObject) {
  EventEmitter.call(this);

  var self = this;
  var t0 = +new Date();
  this.xo = new AjaxObject('GET', url);

  this.xo.once('finish', function(status, text) {
    var info, rtt;
    if (status === 200) {
      rtt = (+new Date()) - t0;
      if (text) {
        try {
          info = JSON.parse(text);
        } catch (e) {
          debug('bad json', text);
        }
      }

      if (!objectUtils.isObject(info)) {
        info = {};
      }
    }
    self.emit('finish', info, rtt);
    self.removeAllListeners();
  });
}

inherits(InfoAjax, EventEmitter);

InfoAjax.prototype.close = function() {
  this.removeAllListeners();
  this.xo.close();
};

module.exports = InfoAjax;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe-receiver.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe-receiver.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , XHRLocalObject = __webpack_require__(/*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , InfoAjax = __webpack_require__(/*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js")
  ;

function InfoReceiverIframe(transUrl) {
  var self = this;
  EventEmitter.call(this);

  this.ir = new InfoAjax(transUrl, XHRLocalObject);
  this.ir.once('finish', function(info, rtt) {
    self.ir = null;
    self.emit('message', JSON.stringify([info, rtt]));
  });
}

inherits(InfoReceiverIframe, EventEmitter);

InfoReceiverIframe.transportName = 'iframe-info-receiver';

InfoReceiverIframe.prototype.close = function() {
  if (this.ir) {
    this.ir.close();
    this.ir = null;
  }
  this.removeAllListeners();
};

module.exports = InfoReceiverIframe;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , utils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , IframeTransport = __webpack_require__(/*! ./transport/iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js")
  , InfoReceiverIframe = __webpack_require__(/*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-iframe');
}

function InfoIframe(baseUrl, url) {
  var self = this;
  EventEmitter.call(this);

  var go = function() {
    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);

    ifr.once('message', function(msg) {
      if (msg) {
        var d;
        try {
          d = JSON.parse(msg);
        } catch (e) {
          debug('bad json', msg);
          self.emit('finish');
          self.close();
          return;
        }

        var info = d[0], rtt = d[1];
        self.emit('finish', info, rtt);
      }
      self.close();
    });

    ifr.once('close', function() {
      self.emit('finish');
      self.close();
    });
  };

  // TODO this seems the same as the 'needBody' from transports
  if (!__webpack_require__.g.document.body) {
    utils.attachEvent('load', go);
  } else {
    go();
  }
}

inherits(InfoIframe, EventEmitter);

InfoIframe.enabled = function() {
  return IframeTransport.enabled();
};

InfoIframe.prototype.close = function() {
  if (this.ifr) {
    this.ifr.close();
  }
  this.removeAllListeners();
  this.ifr = null;
};

module.exports = InfoIframe;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-receiver.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-receiver.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , XDR = __webpack_require__(/*! ./transport/sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js")
  , XHRCors = __webpack_require__(/*! ./transport/sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , XHRLocal = __webpack_require__(/*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , XHRFake = __webpack_require__(/*! ./transport/sender/xhr-fake */ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js")
  , InfoIframe = __webpack_require__(/*! ./info-iframe */ "./node_modules/sockjs-client/lib/info-iframe.js")
  , InfoAjax = __webpack_require__(/*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-receiver');
}

function InfoReceiver(baseUrl, urlInfo) {
  debug(baseUrl);
  var self = this;
  EventEmitter.call(this);

  setTimeout(function() {
    self.doXhr(baseUrl, urlInfo);
  }, 0);
}

inherits(InfoReceiver, EventEmitter);

// TODO this is currently ignoring the list of available transports and the whitelist

InfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {
  // determine method of CORS support (if needed)
  if (urlInfo.sameOrigin) {
    return new InfoAjax(url, XHRLocal);
  }
  if (XHRCors.enabled) {
    return new InfoAjax(url, XHRCors);
  }
  if (XDR.enabled && urlInfo.sameScheme) {
    return new InfoAjax(url, XDR);
  }
  if (InfoIframe.enabled()) {
    return new InfoIframe(baseUrl, url);
  }
  return new InfoAjax(url, XHRFake);
};

InfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {
  var self = this
    , url = urlUtils.addPath(baseUrl, '/info')
    ;
  debug('doXhr', url);

  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);

  this.timeoutRef = setTimeout(function() {
    debug('timeout');
    self._cleanup(false);
    self.emit('finish');
  }, InfoReceiver.timeout);

  this.xo.once('finish', function(info, rtt) {
    debug('finish', info, rtt);
    self._cleanup(true);
    self.emit('finish', info, rtt);
  });
};

InfoReceiver.prototype._cleanup = function(wasClean) {
  debug('_cleanup');
  clearTimeout(this.timeoutRef);
  this.timeoutRef = null;
  if (!wasClean && this.xo) {
    this.xo.close();
  }
  this.xo = null;
};

InfoReceiver.prototype.close = function() {
  debug('close');
  this.removeAllListeners();
  this._cleanup(false);
};

InfoReceiver.timeout = 8000;

module.exports = InfoReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/location.js":
/*!****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/location.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__.g.location || {
  origin: 'http://localhost:80'
, protocol: 'http:'
, host: 'localhost'
, port: 80
, href: 'http://localhost/'
, hash: ''
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/main.js":
/*!************************************************!*\
  !*** ./node_modules/sockjs-client/lib/main.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! ./shims */ "./node_modules/sockjs-client/lib/shims.js");

var URL = __webpack_require__(/*! url-parse */ "./node_modules/url-parse/index.js")
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , random = __webpack_require__(/*! ./utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  , escape = __webpack_require__(/*! ./utils/escape */ "./node_modules/sockjs-client/lib/utils/escape.js")
  , urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , eventUtils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , transport = __webpack_require__(/*! ./utils/transport */ "./node_modules/sockjs-client/lib/utils/transport.js")
  , objectUtils = __webpack_require__(/*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js")
  , browser = __webpack_require__(/*! ./utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  , log = __webpack_require__(/*! ./utils/log */ "./node_modules/sockjs-client/lib/utils/log.js")
  , Event = __webpack_require__(/*! ./event/event */ "./node_modules/sockjs-client/lib/event/event.js")
  , EventTarget = __webpack_require__(/*! ./event/eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js")
  , loc = __webpack_require__(/*! ./location */ "./node_modules/sockjs-client/lib/location.js")
  , CloseEvent = __webpack_require__(/*! ./event/close */ "./node_modules/sockjs-client/lib/event/close.js")
  , TransportMessageEvent = __webpack_require__(/*! ./event/trans-message */ "./node_modules/sockjs-client/lib/event/trans-message.js")
  , InfoReceiver = __webpack_require__(/*! ./info-receiver */ "./node_modules/sockjs-client/lib/info-receiver.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:main');
}

var transports;

// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface
function SockJS(url, protocols, options) {
  if (!(this instanceof SockJS)) {
    return new SockJS(url, protocols, options);
  }
  if (arguments.length < 1) {
    throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");
  }
  EventTarget.call(this);

  this.readyState = SockJS.CONNECTING;
  this.extensions = '';
  this.protocol = '';

  // non-standard extension
  options = options || {};
  if (options.protocols_whitelist) {
    log.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead.");
  }
  this._transportsWhitelist = options.transports;
  this._transportOptions = options.transportOptions || {};
  this._timeout = options.timeout || 0;

  var sessionId = options.sessionId || 8;
  if (typeof sessionId === 'function') {
    this._generateSessionId = sessionId;
  } else if (typeof sessionId === 'number') {
    this._generateSessionId = function() {
      return random.string(sessionId);
    };
  } else {
    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');
  }

  this._server = options.server || random.numberString(1000);

  // Step 1 of WS spec - parse and validate the url. Issue #8
  var parsedUrl = new URL(url);
  if (!parsedUrl.host || !parsedUrl.protocol) {
    throw new SyntaxError("The URL '" + url + "' is invalid");
  } else if (parsedUrl.hash) {
    throw new SyntaxError('The URL must not contain a fragment');
  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {
    throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '" + parsedUrl.protocol + "' is not allowed.");
  }

  var secure = parsedUrl.protocol === 'https:';
  // Step 2 - don't allow secure origin with an insecure protocol
  if (loc.protocol === 'https:' && !secure) {
    // exception is 127.0.0.0/8 and ::1 urls
    if (!urlUtils.isLoopbackAddr(parsedUrl.hostname)) {
      throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');
    }
  }

  // Step 3 - check port access - no need here
  // Step 4 - parse protocols argument
  if (!protocols) {
    protocols = [];
  } else if (!Array.isArray(protocols)) {
    protocols = [protocols];
  }

  // Step 5 - check protocols argument
  var sortedProtocols = protocols.sort();
  sortedProtocols.forEach(function(proto, i) {
    if (!proto) {
      throw new SyntaxError("The protocols entry '" + proto + "' is invalid.");
    }
    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {
      throw new SyntaxError("The protocols entry '" + proto + "' is duplicated.");
    }
  });

  // Step 6 - convert origin
  var o = urlUtils.getOrigin(loc.href);
  this._origin = o ? o.toLowerCase() : null;

  // remove the trailing slash
  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\/+$/, ''));

  // store the sanitized url
  this.url = parsedUrl.href;
  debug('using url', this.url);

  // Step 7 - start connection in background
  // obtain server info
  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26
  this._urlInfo = {
    nullOrigin: !browser.hasDomain()
  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)
  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)
  };

  this._ir = new InfoReceiver(this.url, this._urlInfo);
  this._ir.once('finish', this._receiveInfo.bind(this));
}

inherits(SockJS, EventTarget);

function userSetCode(code) {
  return code === 1000 || (code >= 3000 && code <= 4999);
}

SockJS.prototype.close = function(code, reason) {
  // Step 1
  if (code && !userSetCode(code)) {
    throw new Error('InvalidAccessError: Invalid code');
  }
  // Step 2.4 states the max is 123 bytes, but we are just checking length
  if (reason && reason.length > 123) {
    throw new SyntaxError('reason argument has an invalid length');
  }

  // Step 3.1
  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {
    return;
  }

  // TODO look at docs to determine how to set this
  var wasClean = true;
  this._close(code || 1000, reason || 'Normal closure', wasClean);
};

SockJS.prototype.send = function(data) {
  // #13 - convert anything non-string to string
  // TODO this currently turns objects into [object Object]
  if (typeof data !== 'string') {
    data = '' + data;
  }
  if (this.readyState === SockJS.CONNECTING) {
    throw new Error('InvalidStateError: The connection has not been established yet');
  }
  if (this.readyState !== SockJS.OPEN) {
    return;
  }
  this._transport.send(escape.quote(data));
};

SockJS.version = __webpack_require__(/*! ./version */ "./node_modules/sockjs-client/lib/version.js");

SockJS.CONNECTING = 0;
SockJS.OPEN = 1;
SockJS.CLOSING = 2;
SockJS.CLOSED = 3;

SockJS.prototype._receiveInfo = function(info, rtt) {
  debug('_receiveInfo', rtt);
  this._ir = null;
  if (!info) {
    this._close(1002, 'Cannot connect to server');
    return;
  }

  // establish a round-trip timeout (RTO) based on the
  // round-trip time (RTT)
  this._rto = this.countRTO(rtt);
  // allow server to override url used for the actual transport
  this._transUrl = info.base_url ? info.base_url : this.url;
  info = objectUtils.extend(info, this._urlInfo);
  debug('info', info);
  // determine list of desired and supported transports
  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);
  this._transports = enabledTransports.main;
  debug(this._transports.length + ' enabled transports');

  this._connect();
};

SockJS.prototype._connect = function() {
  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {
    debug('attempt', Transport.transportName);
    if (Transport.needBody) {
      if (!__webpack_require__.g.document.body ||
          (typeof __webpack_require__.g.document.readyState !== 'undefined' &&
            __webpack_require__.g.document.readyState !== 'complete' &&
            __webpack_require__.g.document.readyState !== 'interactive')) {
        debug('waiting for body');
        this._transports.unshift(Transport);
        eventUtils.attachEvent('load', this._connect.bind(this));
        return;
      }
    }

    // calculate timeout based on RTO and round trips. Default to 5s
    var timeoutMs = Math.max(this._timeout, (this._rto * Transport.roundTrips) || 5000);
    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);
    debug('using timeout', timeoutMs);

    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());
    var options = this._transportOptions[Transport.transportName];
    debug('transport url', transportUrl);
    var transportObj = new Transport(transportUrl, this._transUrl, options);
    transportObj.on('message', this._transportMessage.bind(this));
    transportObj.once('close', this._transportClose.bind(this));
    transportObj.transportName = Transport.transportName;
    this._transport = transportObj;

    return;
  }
  this._close(2000, 'All transports failed', false);
};

SockJS.prototype._transportTimeout = function() {
  debug('_transportTimeout');
  if (this.readyState === SockJS.CONNECTING) {
    if (this._transport) {
      this._transport.close();
    }

    this._transportClose(2007, 'Transport timed out');
  }
};

SockJS.prototype._transportMessage = function(msg) {
  debug('_transportMessage', msg);
  var self = this
    , type = msg.slice(0, 1)
    , content = msg.slice(1)
    , payload
    ;

  // first check for messages that don't need a payload
  switch (type) {
    case 'o':
      this._open();
      return;
    case 'h':
      this.dispatchEvent(new Event('heartbeat'));
      debug('heartbeat', this.transport);
      return;
  }

  if (content) {
    try {
      payload = JSON.parse(content);
    } catch (e) {
      debug('bad json', content);
    }
  }

  if (typeof payload === 'undefined') {
    debug('empty payload', content);
    return;
  }

  switch (type) {
    case 'a':
      if (Array.isArray(payload)) {
        payload.forEach(function(p) {
          debug('message', self.transport, p);
          self.dispatchEvent(new TransportMessageEvent(p));
        });
      }
      break;
    case 'm':
      debug('message', this.transport, payload);
      this.dispatchEvent(new TransportMessageEvent(payload));
      break;
    case 'c':
      if (Array.isArray(payload) && payload.length === 2) {
        this._close(payload[0], payload[1], true);
      }
      break;
  }
};

SockJS.prototype._transportClose = function(code, reason) {
  debug('_transportClose', this.transport, code, reason);
  if (this._transport) {
    this._transport.removeAllListeners();
    this._transport = null;
    this.transport = null;
  }

  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {
    this._connect();
    return;
  }

  this._close(code, reason);
};

SockJS.prototype._open = function() {
  debug('_open', this._transport && this._transport.transportName, this.readyState);
  if (this.readyState === SockJS.CONNECTING) {
    if (this._transportTimeoutId) {
      clearTimeout(this._transportTimeoutId);
      this._transportTimeoutId = null;
    }
    this.readyState = SockJS.OPEN;
    this.transport = this._transport.transportName;
    this.dispatchEvent(new Event('open'));
    debug('connected', this.transport);
  } else {
    // The server might have been restarted, and lost track of our
    // connection.
    this._close(1006, 'Server lost session');
  }
};

SockJS.prototype._close = function(code, reason, wasClean) {
  debug('_close', this.transport, code, reason, wasClean, this.readyState);
  var forceFail = false;

  if (this._ir) {
    forceFail = true;
    this._ir.close();
    this._ir = null;
  }
  if (this._transport) {
    this._transport.close();
    this._transport = null;
    this.transport = null;
  }

  if (this.readyState === SockJS.CLOSED) {
    throw new Error('InvalidStateError: SockJS has already been closed');
  }

  this.readyState = SockJS.CLOSING;
  setTimeout(function() {
    this.readyState = SockJS.CLOSED;

    if (forceFail) {
      this.dispatchEvent(new Event('error'));
    }

    var e = new CloseEvent('close');
    e.wasClean = wasClean || false;
    e.code = code || 1000;
    e.reason = reason;

    this.dispatchEvent(e);
    this.onmessage = this.onclose = this.onerror = null;
    debug('disconnected');
  }.bind(this), 0);
};

// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
// and RFC 2988.
SockJS.prototype.countRTO = function(rtt) {
  // In a local environment, when using IE8/9 and the `jsonp-polling`
  // transport the time needed to establish a connection (the time that pass
  // from the opening of the transport to the call of `_dispatchOpen`) is
  // around 200msec (the lower bound used in the article above) and this
  // causes spurious timeouts. For this reason we calculate a value slightly
  // larger than that used in the article.
  if (rtt > 100) {
    return 4 * rtt; // rto > 400msec
  }
  return 300 + rtt; // 300msec < rto <= 400msec
};

module.exports = function(availableTransports) {
  transports = transport(availableTransports);
  __webpack_require__(/*! ./iframe-bootstrap */ "./node_modules/sockjs-client/lib/iframe-bootstrap.js")(SockJS, availableTransports);
  return SockJS;
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/shims.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/shims.js ***!
  \*************************************************/
/***/ (function() {

"use strict";
/* eslint-disable */
/* jscs: disable */


// pulled specific shims from https://github.com/es-shims/es5-shim

var ArrayPrototype = Array.prototype;
var ObjectPrototype = Object.prototype;
var FunctionPrototype = Function.prototype;
var StringPrototype = String.prototype;
var array_slice = ArrayPrototype.slice;

var _toString = ObjectPrototype.toString;
var isFunction = function (val) {
    return ObjectPrototype.toString.call(val) === '[object Function]';
};
var isArray = function isArray(obj) {
    return _toString.call(obj) === '[object Array]';
};
var isString = function isString(obj) {
    return _toString.call(obj) === '[object String]';
};

var supportsDescriptors = Object.defineProperty && (function () {
    try {
        Object.defineProperty({}, 'x', {});
        return true;
    } catch (e) { /* this is ES3 */
        return false;
    }
}());

// Define configurable, writable and non-enumerable props
// if they don't exist.
var defineProperty;
if (supportsDescriptors) {
    defineProperty = function (object, name, method, forceAssign) {
        if (!forceAssign && (name in object)) { return; }
        Object.defineProperty(object, name, {
            configurable: true,
            enumerable: false,
            writable: true,
            value: method
        });
    };
} else {
    defineProperty = function (object, name, method, forceAssign) {
        if (!forceAssign && (name in object)) { return; }
        object[name] = method;
    };
}
var defineProperties = function (object, map, forceAssign) {
    for (var name in map) {
        if (ObjectPrototype.hasOwnProperty.call(map, name)) {
          defineProperty(object, name, map[name], forceAssign);
        }
    }
};

var toObject = function (o) {
    if (o == null) { // this matches both null and undefined
        throw new TypeError("can't convert " + o + ' to object');
    }
    return Object(o);
};

//
// Util
// ======
//

// ES5 9.4
// http://es5.github.com/#x9.4
// http://jsperf.com/to-integer

function toInteger(num) {
    var n = +num;
    if (n !== n) { // isNaN
        n = 0;
    } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {
        n = (n > 0 || -1) * Math.floor(Math.abs(n));
    }
    return n;
}

function ToUint32(x) {
    return x >>> 0;
}

//
// Function
// ========
//

// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5

function Empty() {}

defineProperties(FunctionPrototype, {
    bind: function bind(that) { // .length is 1
        // 1. Let Target be the this value.
        var target = this;
        // 2. If IsCallable(Target) is false, throw a TypeError exception.
        if (!isFunction(target)) {
            throw new TypeError('Function.prototype.bind called on incompatible ' + target);
        }
        // 3. Let A be a new (possibly empty) internal list of all of the
        //   argument values provided after thisArg (arg1, arg2 etc), in order.
        // XXX slicedArgs will stand in for "A" if used
        var args = array_slice.call(arguments, 1); // for normal call
        // 4. Let F be a new native ECMAScript object.
        // 11. Set the [[Prototype]] internal property of F to the standard
        //   built-in Function prototype object as specified in 15.3.3.1.
        // 12. Set the [[Call]] internal property of F as described in
        //   15.3.4.5.1.
        // 13. Set the [[Construct]] internal property of F as described in
        //   15.3.4.5.2.
        // 14. Set the [[HasInstance]] internal property of F as described in
        //   15.3.4.5.3.
        var binder = function () {

            if (this instanceof bound) {
                // 15.3.4.5.2 [[Construct]]
                // When the [[Construct]] internal method of a function object,
                // F that was created using the bind function is called with a
                // list of arguments ExtraArgs, the following steps are taken:
                // 1. Let target be the value of F's [[TargetFunction]]
                //   internal property.
                // 2. If target has no [[Construct]] internal method, a
                //   TypeError exception is thrown.
                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Construct]] internal
                //   method of target providing args as the arguments.

                var result = target.apply(
                    this,
                    args.concat(array_slice.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;

            } else {
                // 15.3.4.5.1 [[Call]]
                // When the [[Call]] internal method of a function object, F,
                // which was created using the bind function is called with a
                // this value and a list of arguments ExtraArgs, the following
                // steps are taken:
                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 2. Let boundThis be the value of F's [[BoundThis]] internal
                //   property.
                // 3. Let target be the value of F's [[TargetFunction]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Call]] internal method
                //   of target providing boundThis as the this value and
                //   providing args as the arguments.

                // equiv: target.call(this, ...boundArgs, ...args)
                return target.apply(
                    that,
                    args.concat(array_slice.call(arguments))
                );

            }

        };

        // 15. If the [[Class]] internal property of Target is "Function", then
        //     a. Let L be the length property of Target minus the length of A.
        //     b. Set the length own property of F to either 0 or L, whichever is
        //       larger.
        // 16. Else set the length own property of F to 0.

        var boundLength = Math.max(0, target.length - args.length);

        // 17. Set the attributes of the length own property of F to the values
        //   specified in 15.3.5.1.
        var boundArgs = [];
        for (var i = 0; i < boundLength; i++) {
            boundArgs.push('$' + i);
        }

        // XXX Build a dynamic function with desired amount of arguments is the only
        // way to set the length property of a function.
        // In environments where Content Security Policies enabled (Chrome extensions,
        // for ex.) all use of eval or Function costructor throws an exception.
        // However in all of these environments Function.prototype.bind exists
        // and so this code will never be executed.
        var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);

        if (target.prototype) {
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            // Clean up dangling references.
            Empty.prototype = null;
        }

        // TODO
        // 18. Set the [[Extensible]] internal property of F to true.

        // TODO
        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
        // 20. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
        //   false.
        // 21. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
        //   and false.

        // TODO
        // NOTE Function objects created using Function.prototype.bind do not
        // have a prototype property or the [[Code]], [[FormalParameters]], and
        // [[Scope]] internal properties.
        // XXX can't delete prototype in pure-js.

        // 22. Return F.
        return bound;
    }
});

//
// Array
// =====
//

// ES5 15.4.3.2
// http://es5.github.com/#x15.4.3.2
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
defineProperties(Array, { isArray: isArray });


var boxedString = Object('a');
var splitString = boxedString[0] !== 'a' || !(0 in boxedString);

var properlyBoxesContext = function properlyBoxed(method) {
    // Check node 0.6.21 bug where third parameter is not boxed
    var properlyBoxesNonStrict = true;
    var properlyBoxesStrict = true;
    if (method) {
        method.call('foo', function (_, __, context) {
            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }
        });

        method.call([1], function () {
            'use strict';
            properlyBoxesStrict = typeof this === 'string';
        }, 'x');
    }
    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;
};

defineProperties(ArrayPrototype, {
    forEach: function forEach(fun /*, thisp*/) {
        var object = toObject(this),
            self = splitString && isString(this) ? this.split('') : object,
            thisp = arguments[1],
            i = -1,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(); // TODO message
        }

        while (++i < length) {
            if (i in self) {
                // Invoke the callback function with call, passing arguments:
                // context, property value, property key, thisArg object
                // context
                fun.call(thisp, self[i], i, object);
            }
        }
    }
}, !properlyBoxesContext(ArrayPrototype.forEach));

// ES5 15.4.4.14
// http://es5.github.com/#x15.4.4.14
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf
var hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;
defineProperties(ArrayPrototype, {
    indexOf: function indexOf(sought /*, fromIndex */ ) {
        var self = splitString && isString(this) ? this.split('') : toObject(this),
            length = self.length >>> 0;

        if (!length) {
            return -1;
        }

        var i = 0;
        if (arguments.length > 1) {
            i = toInteger(arguments[1]);
        }

        // handle negative indices
        i = i >= 0 ? i : Math.max(0, length + i);
        for (; i < length; i++) {
            if (i in self && self[i] === sought) {
                return i;
            }
        }
        return -1;
    }
}, hasFirefox2IndexOfBug);

//
// String
// ======
//

// ES5 15.5.4.14
// http://es5.github.com/#x15.5.4.14

// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]
// Many browsers do not split properly with regular expressions or they
// do not perform the split correctly under obscure conditions.
// See http://blog.stevenlevithan.com/archives/cross-browser-split
// I've tested in many browsers and this seems to cover the deviant ones:
//    'ab'.split(/(?:ab)*/) should be ["", ""], not [""]
//    '.'.split(/(.?)(.?)/) should be ["", ".", "", ""], not ["", ""]
//    'tesst'.split(/(s)*/) should be ["t", undefined, "e", "s", "t"], not
//       [undefined, "t", undefined, "e", ...]
//    ''.split(/.?/) should be [], not [""]
//    '.'.split(/()()/) should be ["."], not ["", "", "."]

var string_split = StringPrototype.split;
if (
    'ab'.split(/(?:ab)*/).length !== 2 ||
    '.'.split(/(.?)(.?)/).length !== 4 ||
    'tesst'.split(/(s)*/)[1] === 't' ||
    'test'.split(/(?:)/, -1).length !== 4 ||
    ''.split(/.?/).length ||
    '.'.split(/()()/).length > 1
) {
    (function () {
        var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group

        StringPrototype.split = function (separator, limit) {
            var string = this;
            if (separator === void 0 && limit === 0) {
                return [];
            }

            // If `separator` is not a regex, use native split
            if (_toString.call(separator) !== '[object RegExp]') {
                return string_split.call(this, separator, limit);
            }

            var output = [],
                flags = (separator.ignoreCase ? 'i' : '') +
                        (separator.multiline  ? 'm' : '') +
                        (separator.extended   ? 'x' : '') + // Proposed for ES6
                        (separator.sticky     ? 'y' : ''), // Firefox 3+
                lastLastIndex = 0,
                // Make `global` and avoid `lastIndex` issues by working with a copy
                separator2, match, lastIndex, lastLength;
            separator = new RegExp(separator.source, flags + 'g');
            string += ''; // Type-convert
            if (!compliantExecNpcg) {
                // Doesn't need flags gy, but they don't hurt
                separator2 = new RegExp('^' + separator.source + '$(?!\\s)', flags);
            }
            /* Values for `limit`, per the spec:
             * If undefined: 4294967295 // Math.pow(2, 32) - 1
             * If 0, Infinity, or NaN: 0
             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
             * If negative number: 4294967296 - Math.floor(Math.abs(limit))
             * If other: Type-convert, then use the above rules
             */
            limit = limit === void 0 ?
                -1 >>> 0 : // Math.pow(2, 32) - 1
                ToUint32(limit);
            while (match = separator.exec(string)) {
                // `separator.lastIndex` is not reliable cross-browser
                lastIndex = match.index + match[0].length;
                if (lastIndex > lastLastIndex) {
                    output.push(string.slice(lastLastIndex, match.index));
                    // Fix browsers whose `exec` methods don't consistently return `undefined` for
                    // nonparticipating capturing groups
                    if (!compliantExecNpcg && match.length > 1) {
                        match[0].replace(separator2, function () {
                            for (var i = 1; i < arguments.length - 2; i++) {
                                if (arguments[i] === void 0) {
                                    match[i] = void 0;
                                }
                            }
                        });
                    }
                    if (match.length > 1 && match.index < string.length) {
                        ArrayPrototype.push.apply(output, match.slice(1));
                    }
                    lastLength = match[0].length;
                    lastLastIndex = lastIndex;
                    if (output.length >= limit) {
                        break;
                    }
                }
                if (separator.lastIndex === match.index) {
                    separator.lastIndex++; // Avoid an infinite loop
                }
            }
            if (lastLastIndex === string.length) {
                if (lastLength || !separator.test('')) {
                    output.push('');
                }
            } else {
                output.push(string.slice(lastLastIndex));
            }
            return output.length > limit ? output.slice(0, limit) : output;
        };
    }());

// [bugfix, chrome]
// If separator is undefined, then the result array contains just one String,
// which is the this value (converted to a String). If limit is not undefined,
// then the output array is truncated so that it contains no more than limit
// elements.
// "0".split(undefined, 0) -> []
} else if ('0'.split(void 0, 0).length) {
    StringPrototype.split = function split(separator, limit) {
        if (separator === void 0 && limit === 0) { return []; }
        return string_split.call(this, separator, limit);
    };
}

// ECMA-262, 3rd B.2.3
// Not an ECMAScript standard, although ECMAScript 3rd Edition has a
// non-normative section suggesting uniform semantics and it should be
// normalized across all browsers
// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE
var string_substr = StringPrototype.substr;
var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';
defineProperties(StringPrototype, {
    substr: function substr(start, length) {
        return string_substr.call(
            this,
            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,
            length
        );
    }
}, hasNegativeSubstrBug);


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport-list.js":
/*!**********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport-list.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


module.exports = [
  // streaming transports
  __webpack_require__(/*! ./transport/websocket */ "./node_modules/sockjs-client/lib/transport/websocket.js")
, __webpack_require__(/*! ./transport/xhr-streaming */ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js")
, __webpack_require__(/*! ./transport/xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js")
, __webpack_require__(/*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js")
, __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js"))

  // polling transports
, __webpack_require__(/*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js")
, __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js"))
, __webpack_require__(/*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js")
, __webpack_require__(/*! ./transport/xdr-polling */ "./node_modules/sockjs-client/lib/transport/xdr-polling.js")
, __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js"))
, __webpack_require__(/*! ./transport/jsonp-polling */ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js")
];


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , utils = __webpack_require__(/*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , XHR = __webpack_require__.g.XMLHttpRequest
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:browser:xhr');
}

function AbstractXHRObject(method, url, payload, opts) {
  debug(method, url);
  var self = this;
  EventEmitter.call(this);

  setTimeout(function () {
    self._start(method, url, payload, opts);
  }, 0);
}

inherits(AbstractXHRObject, EventEmitter);

AbstractXHRObject.prototype._start = function(method, url, payload, opts) {
  var self = this;

  try {
    this.xhr = new XHR();
  } catch (x) {
    // intentionally empty
  }

  if (!this.xhr) {
    debug('no xhr');
    this.emit('finish', 0, 'no xhr support');
    this._cleanup();
    return;
  }

  // several browsers cache POSTs
  url = urlUtils.addQuery(url, 't=' + (+new Date()));

  // Explorer tends to keep connection open, even after the
  // tab gets closed: http://bugs.jquery.com/ticket/5280
  this.unloadRef = utils.unloadAdd(function() {
    debug('unload cleanup');
    self._cleanup(true);
  });
  try {
    this.xhr.open(method, url, true);
    if (this.timeout && 'timeout' in this.xhr) {
      this.xhr.timeout = this.timeout;
      this.xhr.ontimeout = function() {
        debug('xhr timeout');
        self.emit('finish', 0, '');
        self._cleanup(false);
      };
    }
  } catch (e) {
    debug('exception', e);
    // IE raises an exception on wrong port.
    this.emit('finish', 0, '');
    this._cleanup(false);
    return;
  }

  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {
    debug('withCredentials');
    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
    // "This never affects same-site requests."

    this.xhr.withCredentials = true;
  }
  if (opts && opts.headers) {
    for (var key in opts.headers) {
      this.xhr.setRequestHeader(key, opts.headers[key]);
    }
  }

  this.xhr.onreadystatechange = function() {
    if (self.xhr) {
      var x = self.xhr;
      var text, status;
      debug('readyState', x.readyState);
      switch (x.readyState) {
      case 3:
        // IE doesn't like peeking into responseText or status
        // on Microsoft.XMLHTTP and readystate=3
        try {
          status = x.status;
          text = x.responseText;
        } catch (e) {
          // intentionally empty
        }
        debug('status', status);
        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
        if (status === 1223) {
          status = 204;
        }

        // IE does return readystate == 3 for 404 answers.
        if (status === 200 && text && text.length > 0) {
          debug('chunk');
          self.emit('chunk', status, text);
        }
        break;
      case 4:
        status = x.status;
        debug('status', status);
        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
        if (status === 1223) {
          status = 204;
        }
        // IE returns this for a bad port
        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx
        if (status === 12005 || status === 12029) {
          status = 0;
        }

        debug('finish', status, x.responseText);
        self.emit('finish', status, x.responseText);
        self._cleanup(false);
        break;
      }
    }
  };

  try {
    self.xhr.send(payload);
  } catch (e) {
    self.emit('finish', 0, '');
    self._cleanup(false);
  }
};

AbstractXHRObject.prototype._cleanup = function(abort) {
  debug('cleanup');
  if (!this.xhr) {
    return;
  }
  this.removeAllListeners();
  utils.unloadDel(this.unloadRef);

  // IE needs this field to be a function
  this.xhr.onreadystatechange = function() {};
  if (this.xhr.ontimeout) {
    this.xhr.ontimeout = null;
  }

  if (abort) {
    try {
      this.xhr.abort();
    } catch (x) {
      // intentionally empty
    }
  }
  this.unloadRef = this.xhr = null;
};

AbstractXHRObject.prototype.close = function() {
  debug('close');
  this._cleanup(true);
};

AbstractXHRObject.enabled = !!XHR;
// override XMLHttpRequest for IE6/7
// obfuscate to avoid firewalls
var axo = ['Active'].concat('Object').join('X');
if (!AbstractXHRObject.enabled && (axo in __webpack_require__.g)) {
  debug('overriding xmlhttprequest');
  XHR = function() {
    try {
      return new __webpack_require__.g[axo]('Microsoft.XMLHTTP');
    } catch (e) {
      return null;
    }
  };
  AbstractXHRObject.enabled = !!new XHR();
}

var cors = false;
try {
  cors = 'withCredentials' in new XHR();
} catch (ignored) {
  // intentionally empty
}

AbstractXHRObject.supportsCORS = cors;

module.exports = AbstractXHRObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/eventsource.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = __webpack_require__.g.EventSource;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/websocket.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/websocket.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var Driver = __webpack_require__.g.WebSocket || __webpack_require__.g.MozWebSocket;
if (Driver) {
	module.exports = function WebSocketBrowserDriver(url) {
		return new Driver(url);
	};
} else {
	module.exports = undefined;
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/eventsource.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/eventsource.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , EventSourceReceiver = __webpack_require__(/*! ./receiver/eventsource */ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js")
  , XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , EventSourceDriver = __webpack_require__(/*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js")
  ;

function EventSourceTransport(transUrl) {
  if (!EventSourceTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);
}

inherits(EventSourceTransport, AjaxBasedTransport);

EventSourceTransport.enabled = function() {
  return !!EventSourceDriver;
};

EventSourceTransport.transportName = 'eventsource';
EventSourceTransport.roundTrips = 2;

module.exports = EventSourceTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/htmlfile.js":
/*!**************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/htmlfile.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , HtmlfileReceiver = __webpack_require__(/*! ./receiver/htmlfile */ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js")
  , XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  ;

function HtmlFileTransport(transUrl) {
  if (!HtmlfileReceiver.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);
}

inherits(HtmlFileTransport, AjaxBasedTransport);

HtmlFileTransport.enabled = function(info) {
  return HtmlfileReceiver.enabled && info.sameOrigin;
};

HtmlFileTransport.transportName = 'htmlfile';
HtmlFileTransport.roundTrips = 2;

module.exports = HtmlFileTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/iframe.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/iframe.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


// Few cool transports do work only for same-origin. In order to make
// them work cross-domain we shall use iframe, served from the
// remote domain. New browsers have capabilities to communicate with
// cross domain iframe using postMessage(). In IE it was implemented
// from IE 8+, but of course, IE got some details wrong:
//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
//    http://stevesouders.com/misc/test-postmessage.php

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , version = __webpack_require__(/*! ../version */ "./node_modules/sockjs-client/lib/version.js")
  , urlUtils = __webpack_require__(/*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , iframeUtils = __webpack_require__(/*! ../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , eventUtils = __webpack_require__(/*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , random = __webpack_require__(/*! ../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:transport:iframe');
}

function IframeTransport(transport, transUrl, baseUrl) {
  if (!IframeTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }
  EventEmitter.call(this);

  var self = this;
  this.origin = urlUtils.getOrigin(baseUrl);
  this.baseUrl = baseUrl;
  this.transUrl = transUrl;
  this.transport = transport;
  this.windowId = random.string(8);

  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;
  debug(transport, transUrl, iframeUrl);

  this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {
    debug('err callback');
    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');
    self.close();
  });

  this.onmessageCallback = this._message.bind(this);
  eventUtils.attachEvent('message', this.onmessageCallback);
}

inherits(IframeTransport, EventEmitter);

IframeTransport.prototype.close = function() {
  debug('close');
  this.removeAllListeners();
  if (this.iframeObj) {
    eventUtils.detachEvent('message', this.onmessageCallback);
    try {
      // When the iframe is not loaded, IE raises an exception
      // on 'contentWindow'.
      this.postMessage('c');
    } catch (x) {
      // intentionally empty
    }
    this.iframeObj.cleanup();
    this.iframeObj = null;
    this.onmessageCallback = this.iframeObj = null;
  }
};

IframeTransport.prototype._message = function(e) {
  debug('message', e.data);
  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {
    debug('not same origin', e.origin, this.origin);
    return;
  }

  var iframeMessage;
  try {
    iframeMessage = JSON.parse(e.data);
  } catch (ignored) {
    debug('bad json', e.data);
    return;
  }

  if (iframeMessage.windowId !== this.windowId) {
    debug('mismatched window id', iframeMessage.windowId, this.windowId);
    return;
  }

  switch (iframeMessage.type) {
  case 's':
    this.iframeObj.loaded();
    // window global dependency
    this.postMessage('s', JSON.stringify([
      version
    , this.transport
    , this.transUrl
    , this.baseUrl
    ]));
    break;
  case 't':
    this.emit('message', iframeMessage.data);
    break;
  case 'c':
    var cdata;
    try {
      cdata = JSON.parse(iframeMessage.data);
    } catch (ignored) {
      debug('bad json', iframeMessage.data);
      return;
    }
    this.emit('close', cdata[0], cdata[1]);
    this.close();
    break;
  }
};

IframeTransport.prototype.postMessage = function(type, data) {
  debug('postMessage', type, data);
  this.iframeObj.post(JSON.stringify({
    windowId: this.windowId
  , type: type
  , data: data || ''
  }), this.origin);
};

IframeTransport.prototype.send = function(message) {
  debug('send', message);
  this.postMessage('m', message);
};

IframeTransport.enabled = function() {
  return iframeUtils.iframeEnabled;
};

IframeTransport.transportName = 'iframe';
IframeTransport.roundTrips = 2;

module.exports = IframeTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/jsonp-polling.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


// The simplest and most robust transport, using the well-know cross
// domain hack - JSONP. This transport is quite inefficient - one
// message could use up to one http request. But at least it works almost
// everywhere.
// Known limitations:
//   o you will get a spinning cursor
//   o for Konqueror a dumb timer is needed to detect errors

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , SenderReceiver = __webpack_require__(/*! ./lib/sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js")
  , JsonpReceiver = __webpack_require__(/*! ./receiver/jsonp */ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js")
  , jsonpSender = __webpack_require__(/*! ./sender/jsonp */ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js")
  ;

function JsonPTransport(transUrl) {
  if (!JsonPTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }
  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);
}

inherits(JsonPTransport, SenderReceiver);

JsonPTransport.enabled = function() {
  return !!__webpack_require__.g.document;
};

JsonPTransport.transportName = 'jsonp-polling';
JsonPTransport.roundTrips = 1;
JsonPTransport.needBody = true;

module.exports = JsonPTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/ajax-based.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , SenderReceiver = __webpack_require__(/*! ./sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:ajax-based');
}

function createAjaxSender(AjaxObject) {
  return function(url, payload, callback) {
    debug('create ajax sender', url, payload);
    var opt = {};
    if (typeof payload === 'string') {
      opt.headers = {'Content-type': 'text/plain'};
    }
    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');
    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);
    xo.once('finish', function(status) {
      debug('finish', status);
      xo = null;

      if (status !== 200 && status !== 204) {
        return callback(new Error('http status ' + status));
      }
      callback();
    });
    return function() {
      debug('abort');
      xo.close();
      xo = null;

      var err = new Error('Aborted');
      err.code = 1000;
      callback(err);
    };
  };
}

function AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {
  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);
}

inherits(AjaxBasedTransport, SenderReceiver);

module.exports = AjaxBasedTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:buffered-sender');
}

function BufferedSender(url, sender) {
  debug(url);
  EventEmitter.call(this);
  this.sendBuffer = [];
  this.sender = sender;
  this.url = url;
}

inherits(BufferedSender, EventEmitter);

BufferedSender.prototype.send = function(message) {
  debug('send', message);
  this.sendBuffer.push(message);
  if (!this.sendStop) {
    this.sendSchedule();
  }
};

// For polling transports in a situation when in the message callback,
// new message is being send. If the sending connection was started
// before receiving one, it is possible to saturate the network and
// timeout due to the lack of receiving socket. To avoid that we delay
// sending messages by some small time, in order to let receiving
// connection be started beforehand. This is only a halfmeasure and
// does not fix the big problem, but it does make the tests go more
// stable on slow networks.
BufferedSender.prototype.sendScheduleWait = function() {
  debug('sendScheduleWait');
  var self = this;
  var tref;
  this.sendStop = function() {
    debug('sendStop');
    self.sendStop = null;
    clearTimeout(tref);
  };
  tref = setTimeout(function() {
    debug('timeout');
    self.sendStop = null;
    self.sendSchedule();
  }, 25);
};

BufferedSender.prototype.sendSchedule = function() {
  debug('sendSchedule', this.sendBuffer.length);
  var self = this;
  if (this.sendBuffer.length > 0) {
    var payload = '[' + this.sendBuffer.join(',') + ']';
    this.sendStop = this.sender(this.url, payload, function(err) {
      self.sendStop = null;
      if (err) {
        debug('error', err);
        self.emit('close', err.code || 1006, 'Sending error: ' + err);
        self.close();
      } else {
        self.sendScheduleWait();
      }
    });
    this.sendBuffer = [];
  }
};

BufferedSender.prototype._cleanup = function() {
  debug('_cleanup');
  this.removeAllListeners();
};

BufferedSender.prototype.close = function() {
  debug('close');
  this._cleanup();
  if (this.sendStop) {
    this.sendStop();
    this.sendStop = null;
  }
};

module.exports = BufferedSender;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , IframeTransport = __webpack_require__(/*! ../iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js")
  , objectUtils = __webpack_require__(/*! ../../utils/object */ "./node_modules/sockjs-client/lib/utils/object.js")
  ;

module.exports = function(transport) {

  function IframeWrapTransport(transUrl, baseUrl) {
    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);
  }

  inherits(IframeWrapTransport, IframeTransport);

  IframeWrapTransport.enabled = function(url, info) {
    if (!__webpack_require__.g.document) {
      return false;
    }

    var iframeInfo = objectUtils.extend({}, info);
    iframeInfo.sameOrigin = true;
    return transport.enabled(iframeInfo) && IframeTransport.enabled();
  };

  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;
  IframeWrapTransport.needBody = true;
  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)

  IframeWrapTransport.facadeTransport = transport;

  return IframeWrapTransport;
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/polling.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:polling');
}

function Polling(Receiver, receiveUrl, AjaxObject) {
  debug(receiveUrl);
  EventEmitter.call(this);
  this.Receiver = Receiver;
  this.receiveUrl = receiveUrl;
  this.AjaxObject = AjaxObject;
  this._scheduleReceiver();
}

inherits(Polling, EventEmitter);

Polling.prototype._scheduleReceiver = function() {
  debug('_scheduleReceiver');
  var self = this;
  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);

  poll.on('message', function(msg) {
    debug('message', msg);
    self.emit('message', msg);
  });

  poll.once('close', function(code, reason) {
    debug('close', code, reason, self.pollIsClosing);
    self.poll = poll = null;

    if (!self.pollIsClosing) {
      if (reason === 'network') {
        self._scheduleReceiver();
      } else {
        self.emit('close', code || 1006, reason);
        self.removeAllListeners();
      }
    }
  });
};

Polling.prototype.abort = function() {
  debug('abort');
  this.removeAllListeners();
  this.pollIsClosing = true;
  if (this.poll) {
    this.poll.abort();
  }
};

module.exports = Polling;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , BufferedSender = __webpack_require__(/*! ./buffered-sender */ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js")
  , Polling = __webpack_require__(/*! ./polling */ "./node_modules/sockjs-client/lib/transport/lib/polling.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender-receiver');
}

function SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {
  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);
  debug(pollUrl);
  var self = this;
  BufferedSender.call(this, transUrl, senderFunc);

  this.poll = new Polling(Receiver, pollUrl, AjaxObject);
  this.poll.on('message', function(msg) {
    debug('poll message', msg);
    self.emit('message', msg);
  });
  this.poll.once('close', function(code, reason) {
    debug('poll close', code, reason);
    self.poll = null;
    self.emit('close', code, reason);
    self.close();
  });
}

inherits(SenderReceiver, BufferedSender);

SenderReceiver.prototype.close = function() {
  BufferedSender.prototype.close.call(this);
  debug('close');
  this.removeAllListeners();
  if (this.poll) {
    this.poll.abort();
    this.poll = null;
  }
};

module.exports = SenderReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/eventsource.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , EventSourceDriver = __webpack_require__(/*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:eventsource');
}

function EventSourceReceiver(url) {
  debug(url);
  EventEmitter.call(this);

  var self = this;
  var es = this.es = new EventSourceDriver(url);
  es.onmessage = function(e) {
    debug('message', e.data);
    self.emit('message', decodeURI(e.data));
  };
  es.onerror = function(e) {
    debug('error', es.readyState, e);
    // ES on reconnection has readyState = 0 or 1.
    // on network error it's CLOSED = 2
    var reason = (es.readyState !== 2 ? 'network' : 'permanent');
    self._cleanup();
    self._close(reason);
  };
}

inherits(EventSourceReceiver, EventEmitter);

EventSourceReceiver.prototype.abort = function() {
  debug('abort');
  this._cleanup();
  this._close('user');
};

EventSourceReceiver.prototype._cleanup = function() {
  debug('cleanup');
  var es = this.es;
  if (es) {
    es.onmessage = es.onerror = null;
    es.close();
    this.es = null;
  }
};

EventSourceReceiver.prototype._close = function(reason) {
  debug('close', reason);
  var self = this;
  // Safari and chrome < 15 crash if we close window before
  // waiting for ES cleanup. See:
  // https://code.google.com/p/chromium/issues/detail?id=89155
  setTimeout(function() {
    self.emit('close', null, reason);
    self.removeAllListeners();
  }, 200);
};

module.exports = EventSourceReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , iframeUtils = __webpack_require__(/*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:htmlfile');
}

function HtmlfileReceiver(url) {
  debug(url);
  EventEmitter.call(this);
  var self = this;
  iframeUtils.polluteGlobalNamespace();

  this.id = 'a' + random.string(6);
  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));

  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);
  var constructFunc = HtmlfileReceiver.htmlfileEnabled ?
      iframeUtils.createHtmlfile : iframeUtils.createIframe;

  __webpack_require__.g[iframeUtils.WPrefix][this.id] = {
    start: function() {
      debug('start');
      self.iframeObj.loaded();
    }
  , message: function(data) {
      debug('message', data);
      self.emit('message', data);
    }
  , stop: function() {
      debug('stop');
      self._cleanup();
      self._close('network');
    }
  };
  this.iframeObj = constructFunc(url, function() {
    debug('callback');
    self._cleanup();
    self._close('permanent');
  });
}

inherits(HtmlfileReceiver, EventEmitter);

HtmlfileReceiver.prototype.abort = function() {
  debug('abort');
  this._cleanup();
  this._close('user');
};

HtmlfileReceiver.prototype._cleanup = function() {
  debug('_cleanup');
  if (this.iframeObj) {
    this.iframeObj.cleanup();
    this.iframeObj = null;
  }
  delete __webpack_require__.g[iframeUtils.WPrefix][this.id];
};

HtmlfileReceiver.prototype._close = function(reason) {
  debug('_close', reason);
  this.emit('close', null, reason);
  this.removeAllListeners();
};

HtmlfileReceiver.htmlfileEnabled = false;

// obfuscate to avoid firewalls
var axo = ['Active'].concat('Object').join('X');
if (axo in __webpack_require__.g) {
  try {
    HtmlfileReceiver.htmlfileEnabled = !!new __webpack_require__.g[axo]('htmlfile');
  } catch (x) {
    // intentionally empty
  }
}

HtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;

module.exports = HtmlfileReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/jsonp.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js")
  , random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  , browser = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:jsonp');
}

function JsonpReceiver(url) {
  debug(url);
  var self = this;
  EventEmitter.call(this);

  utils.polluteGlobalNamespace();

  this.id = 'a' + random.string(6);
  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));

  __webpack_require__.g[utils.WPrefix][this.id] = this._callback.bind(this);
  this._createScript(urlWithId);

  // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.
  this.timeoutId = setTimeout(function() {
    debug('timeout');
    self._abort(new Error('JSONP script loaded abnormally (timeout)'));
  }, JsonpReceiver.timeout);
}

inherits(JsonpReceiver, EventEmitter);

JsonpReceiver.prototype.abort = function() {
  debug('abort');
  if (__webpack_require__.g[utils.WPrefix][this.id]) {
    var err = new Error('JSONP user aborted read');
    err.code = 1000;
    this._abort(err);
  }
};

JsonpReceiver.timeout = 35000;
JsonpReceiver.scriptErrorTimeout = 1000;

JsonpReceiver.prototype._callback = function(data) {
  debug('_callback', data);
  this._cleanup();

  if (this.aborting) {
    return;
  }

  if (data) {
    debug('message', data);
    this.emit('message', data);
  }
  this.emit('close', null, 'network');
  this.removeAllListeners();
};

JsonpReceiver.prototype._abort = function(err) {
  debug('_abort', err);
  this._cleanup();
  this.aborting = true;
  this.emit('close', err.code, err.message);
  this.removeAllListeners();
};

JsonpReceiver.prototype._cleanup = function() {
  debug('_cleanup');
  clearTimeout(this.timeoutId);
  if (this.script2) {
    this.script2.parentNode.removeChild(this.script2);
    this.script2 = null;
  }
  if (this.script) {
    var script = this.script;
    // Unfortunately, you can't really abort script loading of
    // the script.
    script.parentNode.removeChild(script);
    script.onreadystatechange = script.onerror =
        script.onload = script.onclick = null;
    this.script = null;
  }
  delete __webpack_require__.g[utils.WPrefix][this.id];
};

JsonpReceiver.prototype._scriptError = function() {
  debug('_scriptError');
  var self = this;
  if (this.errorTimer) {
    return;
  }

  this.errorTimer = setTimeout(function() {
    if (!self.loadedOkay) {
      self._abort(new Error('JSONP script loaded abnormally (onerror)'));
    }
  }, JsonpReceiver.scriptErrorTimeout);
};

JsonpReceiver.prototype._createScript = function(url) {
  debug('_createScript', url);
  var self = this;
  var script = this.script = __webpack_require__.g.document.createElement('script');
  var script2;  // Opera synchronous load trick.

  script.id = 'a' + random.string(8);
  script.src = url;
  script.type = 'text/javascript';
  script.charset = 'UTF-8';
  script.onerror = this._scriptError.bind(this);
  script.onload = function() {
    debug('onload');
    self._abort(new Error('JSONP script loaded abnormally (onload)'));
  };

  // IE9 fires 'error' event after onreadystatechange or before, in random order.
  // Use loadedOkay to determine if actually errored
  script.onreadystatechange = function() {
    debug('onreadystatechange', script.readyState);
    if (/loaded|closed/.test(script.readyState)) {
      if (script && script.htmlFor && script.onclick) {
        self.loadedOkay = true;
        try {
          // In IE, actually execute the script.
          script.onclick();
        } catch (x) {
          // intentionally empty
        }
      }
      if (script) {
        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));
      }
    }
  };
  // IE: event/htmlFor/onclick trick.
  // One can't rely on proper order for onreadystatechange. In order to
  // make sure, set a 'htmlFor' and 'event' properties, so that
  // script code will be installed as 'onclick' handler for the
  // script object. Later, onreadystatechange, manually execute this
  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'
  // set. For reference see:
  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
  // Also, read on that about script ordering:
  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order
  if (typeof script.async === 'undefined' && __webpack_require__.g.document.attachEvent) {
    // According to mozilla docs, in recent browsers script.async defaults
    // to 'true', so we may use it to detect a good browser:
    // https://developer.mozilla.org/en/HTML/Element/script
    if (!browser.isOpera()) {
      // Naively assume we're in IE
      try {
        script.htmlFor = script.id;
        script.event = 'onclick';
      } catch (x) {
        // intentionally empty
      }
      script.async = true;
    } else {
      // Opera, second sync script hack
      script2 = this.script2 = __webpack_require__.g.document.createElement('script');
      script2.text = "try{var a = document.getElementById('" + script.id + "'); if(a)a.onerror();}catch(x){};";
      script.async = script2.async = false;
    }
  }
  if (typeof script.async !== 'undefined') {
    script.async = true;
  }

  var head = __webpack_require__.g.document.getElementsByTagName('head')[0];
  head.insertBefore(script, head.firstChild);
  if (script2) {
    head.insertBefore(script2, head.firstChild);
  }
};

module.exports = JsonpReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/xhr.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:xhr');
}

function XhrReceiver(url, AjaxObject) {
  debug(url);
  EventEmitter.call(this);
  var self = this;

  this.bufferPosition = 0;

  this.xo = new AjaxObject('POST', url, null);
  this.xo.on('chunk', this._chunkHandler.bind(this));
  this.xo.once('finish', function(status, text) {
    debug('finish', status, text);
    self._chunkHandler(status, text);
    self.xo = null;
    var reason = status === 200 ? 'network' : 'permanent';
    debug('close', reason);
    self.emit('close', null, reason);
    self._cleanup();
  });
}

inherits(XhrReceiver, EventEmitter);

XhrReceiver.prototype._chunkHandler = function(status, text) {
  debug('_chunkHandler', status);
  if (status !== 200 || !text) {
    return;
  }

  for (var idx = -1; ; this.bufferPosition += idx + 1) {
    var buf = text.slice(this.bufferPosition);
    idx = buf.indexOf('\n');
    if (idx === -1) {
      break;
    }
    var msg = buf.slice(0, idx);
    if (msg) {
      debug('message', msg);
      this.emit('message', msg);
    }
  }
};

XhrReceiver.prototype._cleanup = function() {
  debug('_cleanup');
  this.removeAllListeners();
};

XhrReceiver.prototype.abort = function() {
  debug('abort');
  if (this.xo) {
    this.xo.close();
    debug('close');
    this.emit('close', null, 'user');
    this.xo = null;
  }
  this._cleanup();
};

module.exports = XhrReceiver;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/jsonp.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender:jsonp');
}

var form, area;

function createIframe(id) {
  debug('createIframe', id);
  try {
    // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
    return __webpack_require__.g.document.createElement('<iframe name="' + id + '">');
  } catch (x) {
    var iframe = __webpack_require__.g.document.createElement('iframe');
    iframe.name = id;
    return iframe;
  }
}

function createForm() {
  debug('createForm');
  form = __webpack_require__.g.document.createElement('form');
  form.style.display = 'none';
  form.style.position = 'absolute';
  form.method = 'POST';
  form.enctype = 'application/x-www-form-urlencoded';
  form.acceptCharset = 'UTF-8';

  area = __webpack_require__.g.document.createElement('textarea');
  area.name = 'd';
  form.appendChild(area);

  __webpack_require__.g.document.body.appendChild(form);
}

module.exports = function(url, payload, callback) {
  debug(url, payload);
  if (!form) {
    createForm();
  }
  var id = 'a' + random.string(8);
  form.target = id;
  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);

  var iframe = createIframe(id);
  iframe.id = id;
  iframe.style.display = 'none';
  form.appendChild(iframe);

  try {
    area.value = payload;
  } catch (e) {
    // seriously broken browsers get here
  }
  form.submit();

  var completed = function(err) {
    debug('completed', id, err);
    if (!iframe.onerror) {
      return;
    }
    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;
    // Opera mini doesn't like if we GC iframe
    // immediately, thus this timeout.
    setTimeout(function() {
      debug('cleaning up', id);
      iframe.parentNode.removeChild(iframe);
      iframe = null;
    }, 500);
    area.value = '';
    // It is not possible to detect if the iframe succeeded or
    // failed to submit our form.
    callback(err);
  };
  iframe.onerror = function() {
    debug('onerror', id);
    completed();
  };
  iframe.onload = function() {
    debug('onload', id);
    completed();
  };
  iframe.onreadystatechange = function(e) {
    debug('onreadystatechange', id, iframe.readyState, e);
    if (iframe.readyState === 'complete') {
      completed();
    }
  };
  return function() {
    debug('aborted', id);
    completed(new Error('Aborted'));
  };
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xdr.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xdr.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , eventUtils = __webpack_require__(/*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , browser = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  , urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender:xdr');
}

// References:
//   http://ajaxian.com/archives/100-line-ajax-wrapper
//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx

function XDRObject(method, url, payload) {
  debug(method, url);
  var self = this;
  EventEmitter.call(this);

  setTimeout(function() {
    self._start(method, url, payload);
  }, 0);
}

inherits(XDRObject, EventEmitter);

XDRObject.prototype._start = function(method, url, payload) {
  debug('_start');
  var self = this;
  var xdr = new __webpack_require__.g.XDomainRequest();
  // IE caches even POSTs
  url = urlUtils.addQuery(url, 't=' + (+new Date()));

  xdr.onerror = function() {
    debug('onerror');
    self._error();
  };
  xdr.ontimeout = function() {
    debug('ontimeout');
    self._error();
  };
  xdr.onprogress = function() {
    debug('progress', xdr.responseText);
    self.emit('chunk', 200, xdr.responseText);
  };
  xdr.onload = function() {
    debug('load');
    self.emit('finish', 200, xdr.responseText);
    self._cleanup(false);
  };
  this.xdr = xdr;
  this.unloadRef = eventUtils.unloadAdd(function() {
    self._cleanup(true);
  });
  try {
    // Fails with AccessDenied if port number is bogus
    this.xdr.open(method, url);
    if (this.timeout) {
      this.xdr.timeout = this.timeout;
    }
    this.xdr.send(payload);
  } catch (x) {
    this._error();
  }
};

XDRObject.prototype._error = function() {
  this.emit('finish', 0, '');
  this._cleanup(false);
};

XDRObject.prototype._cleanup = function(abort) {
  debug('cleanup', abort);
  if (!this.xdr) {
    return;
  }
  this.removeAllListeners();
  eventUtils.unloadDel(this.unloadRef);

  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;
  if (abort) {
    try {
      this.xdr.abort();
    } catch (x) {
      // intentionally empty
    }
  }
  this.unloadRef = this.xdr = null;
};

XDRObject.prototype.close = function() {
  debug('close');
  this._cleanup(true);
};

// IE 8/9 if the request target uses the same scheme - #79
XDRObject.enabled = !!(__webpack_require__.g.XDomainRequest && browser.hasDomain());

module.exports = XDRObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , XhrDriver = __webpack_require__(/*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js")
  ;

function XHRCorsObject(method, url, payload, opts) {
  XhrDriver.call(this, method, url, payload, opts);
}

inherits(XHRCorsObject, XhrDriver);

XHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;

module.exports = XHRCorsObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  ;

function XHRFake(/* method, url, payload, opts */) {
  var self = this;
  EventEmitter.call(this);

  this.to = setTimeout(function() {
    self.emit('finish', 200, '{}');
  }, XHRFake.timeout);
}

inherits(XHRFake, EventEmitter);

XHRFake.prototype.close = function() {
  clearTimeout(this.to);
};

XHRFake.timeout = 2000;

module.exports = XHRFake;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-local.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , XhrDriver = __webpack_require__(/*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js")
  ;

function XHRLocalObject(method, url, payload /*, opts */) {
  XhrDriver.call(this, method, url, payload, {
    noCredentials: true
  });
}

inherits(XHRLocalObject, XhrDriver);

XHRLocalObject.enabled = XhrDriver.enabled;

module.exports = XHRLocalObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/websocket.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/websocket.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , urlUtils = __webpack_require__(/*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js")
  , inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , EventEmitter = (__webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter)
  , WebsocketDriver = __webpack_require__(/*! ./driver/websocket */ "./node_modules/sockjs-client/lib/transport/browser/websocket.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:websocket');
}

function WebSocketTransport(transUrl, ignore, options) {
  if (!WebSocketTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  EventEmitter.call(this);
  debug('constructor', transUrl);

  var self = this;
  var url = urlUtils.addPath(transUrl, '/websocket');
  if (url.slice(0, 5) === 'https') {
    url = 'wss' + url.slice(5);
  } else {
    url = 'ws' + url.slice(4);
  }
  this.url = url;

  this.ws = new WebsocketDriver(this.url, [], options);
  this.ws.onmessage = function(e) {
    debug('message event', e.data);
    self.emit('message', e.data);
  };
  // Firefox has an interesting bug. If a websocket connection is
  // created after onunload, it stays alive even when user
  // navigates away from the page. In such situation let's lie -
  // let's not open the ws connection at all. See:
  // https://github.com/sockjs/sockjs-client/issues/28
  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085
  this.unloadRef = utils.unloadAdd(function() {
    debug('unload');
    self.ws.close();
  });
  this.ws.onclose = function(e) {
    debug('close event', e.code, e.reason);
    self.emit('close', e.code, e.reason);
    self._cleanup();
  };
  this.ws.onerror = function(e) {
    debug('error event', e);
    self.emit('close', 1006, 'WebSocket connection broken');
    self._cleanup();
  };
}

inherits(WebSocketTransport, EventEmitter);

WebSocketTransport.prototype.send = function(data) {
  var msg = '[' + data + ']';
  debug('send', msg);
  this.ws.send(msg);
};

WebSocketTransport.prototype.close = function() {
  debug('close');
  var ws = this.ws;
  this._cleanup();
  if (ws) {
    ws.close();
  }
};

WebSocketTransport.prototype._cleanup = function() {
  debug('_cleanup');
  var ws = this.ws;
  if (ws) {
    ws.onmessage = ws.onclose = ws.onerror = null;
  }
  utils.unloadDel(this.unloadRef);
  this.unloadRef = this.ws = null;
  this.removeAllListeners();
};

WebSocketTransport.enabled = function() {
  debug('enabled');
  return !!WebsocketDriver;
};
WebSocketTransport.transportName = 'websocket';

// In theory, ws should require 1 round trip. But in chrome, this is
// not very stable over SSL. Most likely a ws connection requires a
// separate SSL connection, in which case 2 round trips are an
// absolute minumum.
WebSocketTransport.roundTrips = 2;

module.exports = WebSocketTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-polling.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XdrStreamingTransport = __webpack_require__(/*! ./xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XDRObject = __webpack_require__(/*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js")
  ;

function XdrPollingTransport(transUrl) {
  if (!XDRObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);
}

inherits(XdrPollingTransport, AjaxBasedTransport);

XdrPollingTransport.enabled = XdrStreamingTransport.enabled;
XdrPollingTransport.transportName = 'xdr-polling';
XdrPollingTransport.roundTrips = 2; // preflight, ajax

module.exports = XdrPollingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-streaming.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XDRObject = __webpack_require__(/*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js")
  ;

// According to:
//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/

function XdrStreamingTransport(transUrl) {
  if (!XDRObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);
}

inherits(XdrStreamingTransport, AjaxBasedTransport);

XdrStreamingTransport.enabled = function(info) {
  if (info.cookie_needed || info.nullOrigin) {
    return false;
  }
  return XDRObject.enabled && info.sameScheme;
};

XdrStreamingTransport.transportName = 'xdr-streaming';
XdrStreamingTransport.roundTrips = 2; // preflight, ajax

module.exports = XdrStreamingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-polling.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  ;

function XhrPollingTransport(transUrl) {
  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);
}

inherits(XhrPollingTransport, AjaxBasedTransport);

XhrPollingTransport.enabled = function(info) {
  if (info.nullOrigin) {
    return false;
  }

  if (XHRLocalObject.enabled && info.sameOrigin) {
    return true;
  }
  return XHRCorsObject.enabled;
};

XhrPollingTransport.transportName = 'xhr-polling';
XhrPollingTransport.roundTrips = 2; // preflight, ajax

module.exports = XhrPollingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-streaming.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
  , AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js")
  , XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js")
  , XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js")
  , XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js")
  , browser = __webpack_require__(/*! ../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  ;

function XhrStreamingTransport(transUrl) {
  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
    throw new Error('Transport created when disabled');
  }
  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);
}

inherits(XhrStreamingTransport, AjaxBasedTransport);

XhrStreamingTransport.enabled = function(info) {
  if (info.nullOrigin) {
    return false;
  }
  // Opera doesn't support xhr-streaming #60
  // But it might be able to #92
  if (browser.isOpera()) {
    return false;
  }

  return XHRCorsObject.enabled;
};

XhrStreamingTransport.transportName = 'xhr-streaming';
XhrStreamingTransport.roundTrips = 2; // preflight, ajax

// Safari gets confused when a streaming ajax request is started
// before onload. This causes the load indicator to spin indefinetely.
// Only require body when used in a browser
XhrStreamingTransport.needBody = !!__webpack_require__.g.document;

module.exports = XhrStreamingTransport;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser-crypto.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser-crypto.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (__webpack_require__.g.crypto && __webpack_require__.g.crypto.getRandomValues) {
  module.exports.randomBytes = function(length) {
    var bytes = new Uint8Array(length);
    __webpack_require__.g.crypto.getRandomValues(bytes);
    return bytes;
  };
} else {
  module.exports.randomBytes = function(length) {
    var bytes = new Array(length);
    for (var i = 0; i < length; i++) {
      bytes[i] = Math.floor(Math.random() * 256);
    }
    return bytes;
  };
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


module.exports = {
  isOpera: function() {
    return __webpack_require__.g.navigator &&
      /opera/i.test(__webpack_require__.g.navigator.userAgent);
  }

, isKonqueror: function() {
    return __webpack_require__.g.navigator &&
      /konqueror/i.test(__webpack_require__.g.navigator.userAgent);
  }

  // #187 wrap document.domain in try/catch because of WP8 from file:///
, hasDomain: function () {
    // non-browser client always has a domain
    if (!__webpack_require__.g.document) {
      return true;
    }

    try {
      return !!__webpack_require__.g.document.domain;
    } catch (e) {
      return false;
    }
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/escape.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/escape.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";


// Some extra characters that Chrome gets wrong, and substitutes with
// something else on the wire.
// eslint-disable-next-line no-control-regex, no-misleading-character-class
var extraEscapable = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g
  , extraLookup;

// This may be quite slow, so let's delay until user actually uses bad
// characters.
var unrollLookup = function(escapable) {
  var i;
  var unrolled = {};
  var c = [];
  for (i = 0; i < 65536; i++) {
    c.push( String.fromCharCode(i) );
  }
  escapable.lastIndex = 0;
  c.join('').replace(escapable, function(a) {
    unrolled[ a ] = '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    return '';
  });
  escapable.lastIndex = 0;
  return unrolled;
};

// Quote string, also taking care of unicode characters that browsers
// often break. Especially, take care of unicode surrogates:
// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates
module.exports = {
  quote: function(string) {
    var quoted = JSON.stringify(string);

    // In most cases this should be very fast and good enough.
    extraEscapable.lastIndex = 0;
    if (!extraEscapable.test(quoted)) {
      return quoted;
    }

    if (!extraLookup) {
      extraLookup = unrollLookup(extraEscapable);
    }

    return quoted.replace(extraEscapable, function(a) {
      return extraLookup[a];
    });
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/event.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var random = __webpack_require__(/*! ./random */ "./node_modules/sockjs-client/lib/utils/random.js");

var onUnload = {}
  , afterUnload = false
    // detect google chrome packaged apps because they don't allow the 'unload' event
  , isChromePackagedApp = __webpack_require__.g.chrome && __webpack_require__.g.chrome.app && __webpack_require__.g.chrome.app.runtime
  ;

module.exports = {
  attachEvent: function(event, listener) {
    if (typeof __webpack_require__.g.addEventListener !== 'undefined') {
      __webpack_require__.g.addEventListener(event, listener, false);
    } else if (__webpack_require__.g.document && __webpack_require__.g.attachEvent) {
      // IE quirks.
      // According to: http://stevesouders.com/misc/test-postmessage.php
      // the message gets delivered only to 'document', not 'window'.
      __webpack_require__.g.document.attachEvent('on' + event, listener);
      // I get 'window' for ie8.
      __webpack_require__.g.attachEvent('on' + event, listener);
    }
  }

, detachEvent: function(event, listener) {
    if (typeof __webpack_require__.g.addEventListener !== 'undefined') {
      __webpack_require__.g.removeEventListener(event, listener, false);
    } else if (__webpack_require__.g.document && __webpack_require__.g.detachEvent) {
      __webpack_require__.g.document.detachEvent('on' + event, listener);
      __webpack_require__.g.detachEvent('on' + event, listener);
    }
  }

, unloadAdd: function(listener) {
    if (isChromePackagedApp) {
      return null;
    }

    var ref = random.string(8);
    onUnload[ref] = listener;
    if (afterUnload) {
      setTimeout(this.triggerUnloadCallbacks, 0);
    }
    return ref;
  }

, unloadDel: function(ref) {
    if (ref in onUnload) {
      delete onUnload[ref];
    }
  }

, triggerUnloadCallbacks: function() {
    for (var ref in onUnload) {
      onUnload[ref]();
      delete onUnload[ref];
    }
  }
};

var unloadTriggered = function() {
  if (afterUnload) {
    return;
  }
  afterUnload = true;
  module.exports.triggerUnloadCallbacks();
};

// 'unload' alone is not reliable in opera within an iframe, but we
// can't use `beforeunload` as IE fires it on javascript: links.
if (!isChromePackagedApp) {
  module.exports.attachEvent('unload', unloadTriggered);
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/iframe.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/iframe.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var eventUtils = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/utils/event.js")
  , browser = __webpack_require__(/*! ./browser */ "./node_modules/sockjs-client/lib/utils/browser.js")
  ;

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:iframe');
}

module.exports = {
  WPrefix: '_jp'
, currentWindowId: null

, polluteGlobalNamespace: function() {
    if (!(module.exports.WPrefix in __webpack_require__.g)) {
      __webpack_require__.g[module.exports.WPrefix] = {};
    }
  }

, postMessage: function(type, data) {
    if (__webpack_require__.g.parent !== __webpack_require__.g) {
      __webpack_require__.g.parent.postMessage(JSON.stringify({
        windowId: module.exports.currentWindowId
      , type: type
      , data: data || ''
      }), '*');
    } else {
      debug('Cannot postMessage, no parent window.', type, data);
    }
  }

, createIframe: function(iframeUrl, errorCallback) {
    var iframe = __webpack_require__.g.document.createElement('iframe');
    var tref, unloadRef;
    var unattach = function() {
      debug('unattach');
      clearTimeout(tref);
      // Explorer had problems with that.
      try {
        iframe.onload = null;
      } catch (x) {
        // intentionally empty
      }
      iframe.onerror = null;
    };
    var cleanup = function() {
      debug('cleanup');
      if (iframe) {
        unattach();
        // This timeout makes chrome fire onbeforeunload event
        // within iframe. Without the timeout it goes straight to
        // onunload.
        setTimeout(function() {
          if (iframe) {
            iframe.parentNode.removeChild(iframe);
          }
          iframe = null;
        }, 0);
        eventUtils.unloadDel(unloadRef);
      }
    };
    var onerror = function(err) {
      debug('onerror', err);
      if (iframe) {
        cleanup();
        errorCallback(err);
      }
    };
    var post = function(msg, origin) {
      debug('post', msg, origin);
      setTimeout(function() {
        try {
          // When the iframe is not loaded, IE raises an exception
          // on 'contentWindow'.
          if (iframe && iframe.contentWindow) {
            iframe.contentWindow.postMessage(msg, origin);
          }
        } catch (x) {
          // intentionally empty
        }
      }, 0);
    };

    iframe.src = iframeUrl;
    iframe.style.display = 'none';
    iframe.style.position = 'absolute';
    iframe.onerror = function() {
      onerror('onerror');
    };
    iframe.onload = function() {
      debug('onload');
      // `onload` is triggered before scripts on the iframe are
      // executed. Give it few seconds to actually load stuff.
      clearTimeout(tref);
      tref = setTimeout(function() {
        onerror('onload timeout');
      }, 2000);
    };
    __webpack_require__.g.document.body.appendChild(iframe);
    tref = setTimeout(function() {
      onerror('timeout');
    }, 15000);
    unloadRef = eventUtils.unloadAdd(cleanup);
    return {
      post: post
    , cleanup: cleanup
    , loaded: unattach
    };
  }

/* eslint no-undef: "off", new-cap: "off" */
, createHtmlfile: function(iframeUrl, errorCallback) {
    var axo = ['Active'].concat('Object').join('X');
    var doc = new __webpack_require__.g[axo]('htmlfile');
    var tref, unloadRef;
    var iframe;
    var unattach = function() {
      clearTimeout(tref);
      iframe.onerror = null;
    };
    var cleanup = function() {
      if (doc) {
        unattach();
        eventUtils.unloadDel(unloadRef);
        iframe.parentNode.removeChild(iframe);
        iframe = doc = null;
        CollectGarbage();
      }
    };
    var onerror = function(r) {
      debug('onerror', r);
      if (doc) {
        cleanup();
        errorCallback(r);
      }
    };
    var post = function(msg, origin) {
      try {
        // When the iframe is not loaded, IE raises an exception
        // on 'contentWindow'.
        setTimeout(function() {
          if (iframe && iframe.contentWindow) {
              iframe.contentWindow.postMessage(msg, origin);
          }
        }, 0);
      } catch (x) {
        // intentionally empty
      }
    };

    doc.open();
    doc.write('<html><s' + 'cript>' +
              'document.domain="' + __webpack_require__.g.document.domain + '";' +
              '</s' + 'cript></html>');
    doc.close();
    doc.parentWindow[module.exports.WPrefix] = __webpack_require__.g[module.exports.WPrefix];
    var c = doc.createElement('div');
    doc.body.appendChild(c);
    iframe = doc.createElement('iframe');
    c.appendChild(iframe);
    iframe.src = iframeUrl;
    iframe.onerror = function() {
      onerror('onerror');
    };
    tref = setTimeout(function() {
      onerror('timeout');
    }, 15000);
    unloadRef = eventUtils.unloadAdd(cleanup);
    return {
      post: post
    , cleanup: cleanup
    , loaded: unattach
    };
  }
};

module.exports.iframeEnabled = false;
if (__webpack_require__.g.document) {
  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
  // huge delay, or not at all.
  module.exports.iframeEnabled = (typeof __webpack_require__.g.postMessage === 'function' ||
    typeof __webpack_require__.g.postMessage === 'object') && (!browser.isKonqueror());
}


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/log.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/log.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var logObject = {};
['log', 'debug', 'warn'].forEach(function (level) {
  var levelExists;

  try {
    levelExists = __webpack_require__.g.console && __webpack_require__.g.console[level] && __webpack_require__.g.console[level].apply;
  } catch(e) {
    // do nothing
  }

  logObject[level] = levelExists ? function () {
    return __webpack_require__.g.console[level].apply(__webpack_require__.g.console, arguments);
  } : (level === 'log' ? function () {} : logObject.log);
});

module.exports = logObject;


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/object.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/object.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";


module.exports = {
  isObject: function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }

, extend: function(obj) {
    if (!this.isObject(obj)) {
      return obj;
    }
    var source, prop;
    for (var i = 1, length = arguments.length; i < length; i++) {
      source = arguments[i];
      for (prop in source) {
        if (Object.prototype.hasOwnProperty.call(source, prop)) {
          obj[prop] = source[prop];
        }
      }
    }
    return obj;
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/random.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/random.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var crypto = __webpack_require__(/*! crypto */ "./node_modules/sockjs-client/lib/utils/browser-crypto.js");

// This string has length 32, a power of 2, so the modulus doesn't introduce a
// bias.
var _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';
module.exports = {
  string: function(length) {
    var max = _randomStringChars.length;
    var bytes = crypto.randomBytes(length);
    var ret = [];
    for (var i = 0; i < length; i++) {
      ret.push(_randomStringChars.substr(bytes[i] % max, 1));
    }
    return ret.join('');
  }

, number: function(max) {
    return Math.floor(Math.random() * max);
  }

, numberString: function(max) {
    var t = ('' + (max - 1)).length;
    var p = new Array(t + 1).join('0');
    return (p + this.number(max)).slice(-t);
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/transport.js":
/*!***********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/transport.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:transport');
}

module.exports = function(availableTransports) {
  return {
    filterToEnabled: function(transportsWhitelist, info) {
      var transports = {
        main: []
      , facade: []
      };
      if (!transportsWhitelist) {
        transportsWhitelist = [];
      } else if (typeof transportsWhitelist === 'string') {
        transportsWhitelist = [transportsWhitelist];
      }

      availableTransports.forEach(function(trans) {
        if (!trans) {
          return;
        }

        if (trans.transportName === 'websocket' && info.websocket === false) {
          debug('disabled from server', 'websocket');
          return;
        }

        if (transportsWhitelist.length &&
            transportsWhitelist.indexOf(trans.transportName) === -1) {
          debug('not in whitelist', trans.transportName);
          return;
        }

        if (trans.enabled(info)) {
          debug('enabled', trans.transportName);
          transports.main.push(trans);
          if (trans.facadeTransport) {
            transports.facade.push(trans.facadeTransport);
          }
        } else {
          debug('disabled', trans.transportName);
        }
      });
      return transports;
    }
  };
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/url.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/url.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var URL = __webpack_require__(/*! url-parse */ "./node_modules/url-parse/index.js");

var debug = function() {};
if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:url');
}

module.exports = {
  getOrigin: function(url) {
    if (!url) {
      return null;
    }

    var p = new URL(url);
    if (p.protocol === 'file:') {
      return null;
    }

    var port = p.port;
    if (!port) {
      port = (p.protocol === 'https:') ? '443' : '80';
    }

    return p.protocol + '//' + p.hostname + ':' + port;
  }

, isOriginEqual: function(a, b) {
    var res = this.getOrigin(a) === this.getOrigin(b);
    debug('same', a, b, res);
    return res;
  }

, isSchemeEqual: function(a, b) {
    return (a.split(':')[0] === b.split(':')[0]);
  }

, addPath: function (url, path) {
    var qs = url.split('?');
    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');
  }

, addQuery: function (url, q) {
    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));
  }

, isLoopbackAddr: function (addr) {
    return /^127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(addr) || /^\[::1\]$/.test(addr);
  }
};


/***/ }),

/***/ "./node_modules/sockjs-client/lib/version.js":
/*!***************************************************!*\
  !*** ./node_modules/sockjs-client/lib/version.js ***!
  \***************************************************/
/***/ (function(module) {

module.exports = '1.6.1';


/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/browser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/browser.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
/**
 * Colors.
 */

exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */
// eslint-disable-next-line complexity

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
    return true;
  } // Internet Explorer and Edge do not support colors.


  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  } // Is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}
/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */


function formatArgs(args) {
  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

  if (!this.useColors) {
    return;
  }

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into

  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    if (match === '%%') {
      return;
    }

    index++;

    if (match === '%c') {
      // We only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });
  args.splice(lastC, 0, c);
}
/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */


function log() {
  var _console;

  // This hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return (typeof console === "undefined" ? "undefined" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);
}
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */


function save(namespaces) {
  try {
    if (namespaces) {
      exports.storage.setItem('debug', namespaces);
    } else {
      exports.storage.removeItem('debug');
    }
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */


function load() {
  var r;

  try {
    r = exports.storage.getItem('debug');
  } catch (error) {} // Swallow
  // XXX (@Qix-) should we be logging these?
  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}
/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */


function localstorage() {
  try {
    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
    // The Browser also has localStorage in the global context.
    return localStorage;
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}

module.exports = __webpack_require__(/*! ./common */ "./node_modules/sockjs-client/node_modules/debug/src/common.js")(exports);
var formatters = module.exports.formatters;
/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
  try {
    return JSON.stringify(v);
  } catch (error) {
    return '[UnexpectedJSONParseError]: ' + error.message;
  }
};



/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/common.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/common.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */
function setup(env) {
  createDebug.debug = createDebug;
  createDebug.default = createDebug;
  createDebug.coerce = coerce;
  createDebug.disable = disable;
  createDebug.enable = enable;
  createDebug.enabled = enabled;
  createDebug.humanize = __webpack_require__(/*! ms */ "./node_modules/ms/index.js");
  Object.keys(env).forEach(function (key) {
    createDebug[key] = env[key];
  });
  /**
  * Active `debug` instances.
  */

  createDebug.instances = [];
  /**
  * The currently active debug mode names, and names to skip.
  */

  createDebug.names = [];
  createDebug.skips = [];
  /**
  * Map of special "%n" handling functions, for the debug "format" argument.
  *
  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
  */

  createDebug.formatters = {};
  /**
  * Selects a color for a debug namespace
  * @param {String} namespace The namespace string for the for the debug instance to be colored
  * @return {Number|String} An ANSI color code for the given namespace
  * @api private
  */

  function selectColor(namespace) {
    var hash = 0;

    for (var i = 0; i < namespace.length; i++) {
      hash = (hash << 5) - hash + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
  }

  createDebug.selectColor = selectColor;
  /**
  * Create a debugger with the given `namespace`.
  *
  * @param {String} namespace
  * @return {Function}
  * @api public
  */

  function createDebug(namespace) {
    var prevTime;

    function debug() {
      // Disabled?
      if (!debug.enabled) {
        return;
      }

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var self = debug; // Set `diff` timestamp

      var curr = Number(new Date());
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;
      args[0] = createDebug.coerce(args[0]);

      if (typeof args[0] !== 'string') {
        // Anything else let's inspect with %O
        args.unshift('%O');
      } // Apply any `formatters` transformations


      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
        // If we encounter an escaped % then don't increase the array index
        if (match === '%%') {
          return match;
        }

        index++;
        var formatter = createDebug.formatters[format];

        if (typeof formatter === 'function') {
          var val = args[index];
          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

          args.splice(index, 1);
          index--;
        }

        return match;
      }); // Apply env-specific formatting (colors, etc.)

      createDebug.formatArgs.call(self, args);
      var logFn = self.log || createDebug.log;
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.enabled = createDebug.enabled(namespace);
    debug.useColors = createDebug.useColors();
    debug.color = selectColor(namespace);
    debug.destroy = destroy;
    debug.extend = extend; // Debug.formatArgs = formatArgs;
    // debug.rawLog = rawLog;
    // env-specific initialization logic for debug instances

    if (typeof createDebug.init === 'function') {
      createDebug.init(debug);
    }

    createDebug.instances.push(debug);
    return debug;
  }

  function destroy() {
    var index = createDebug.instances.indexOf(this);

    if (index !== -1) {
      createDebug.instances.splice(index, 1);
      return true;
    }

    return false;
  }

  function extend(namespace, delimiter) {
    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
  }
  /**
  * Enables a debug mode by namespaces. This can include modes
  * separated by a colon and wildcards.
  *
  * @param {String} namespaces
  * @api public
  */


  function enable(namespaces) {
    createDebug.save(namespaces);
    createDebug.names = [];
    createDebug.skips = [];
    var i;
    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (i = 0; i < len; i++) {
      if (!split[i]) {
        // ignore empty strings
        continue;
      }

      namespaces = split[i].replace(/\*/g, '.*?');

      if (namespaces[0] === '-') {
        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        createDebug.names.push(new RegExp('^' + namespaces + '$'));
      }
    }

    for (i = 0; i < createDebug.instances.length; i++) {
      var instance = createDebug.instances[i];
      instance.enabled = createDebug.enabled(instance.namespace);
    }
  }
  /**
  * Disable debug output.
  *
  * @api public
  */


  function disable() {
    createDebug.enable('');
  }
  /**
  * Returns true if the given mode name is enabled, false otherwise.
  *
  * @param {String} name
  * @return {Boolean}
  * @api public
  */


  function enabled(name) {
    if (name[name.length - 1] === '*') {
      return true;
    }

    var i;
    var len;

    for (i = 0, len = createDebug.skips.length; i < len; i++) {
      if (createDebug.skips[i].test(name)) {
        return false;
      }
    }

    for (i = 0, len = createDebug.names.length; i < len; i++) {
      if (createDebug.names[i].test(name)) {
        return true;
      }
    }

    return false;
  }
  /**
  * Coerce `val`.
  *
  * @param {Mixed} val
  * @return {Mixed}
  * @api private
  */


  function coerce(val) {
    if (val instanceof Error) {
      return val.stack || val.message;
    }

    return val;
  }

  createDebug.enable(createDebug.load());
  return createDebug;
}

module.exports = setup;



/***/ }),

/***/ "./node_modules/url-parse/index.js":
/*!*****************************************!*\
  !*** ./node_modules/url-parse/index.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var required = __webpack_require__(/*! requires-port */ "./node_modules/requires-port/index.js")
  , qs = __webpack_require__(/*! querystringify */ "./node_modules/querystringify/index.js")
  , controlOrWhitespace = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/
  , CRHTLF = /[\n\r\t]/g
  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
  , port = /:\d+$/
  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i
  , windowsDriveLetter = /^[a-zA-Z]:/;

/**
 * Remove control characters and whitespace from the beginning of a string.
 *
 * @param {Object|String} str String to trim.
 * @returns {String} A new string representing `str` stripped of control
 *     characters and whitespace from its beginning.
 * @public
 */
function trimLeft(str) {
  return (str ? str : '').toString().replace(controlOrWhitespace, '');
}

/**
 * These are the parse rules for the URL parser, it informs the parser
 * about:
 *
 * 0. The char it Needs to parse, if it's a string it should be done using
 *    indexOf, RegExp using exec and NaN means set as current value.
 * 1. The property we should set when parsing this value.
 * 2. Indication if it's backwards or forward parsing, when set as number it's
 *    the value of extra chars that should be split off.
 * 3. Inherit from location if non existing in the parser.
 * 4. `toLowerCase` the resulting value.
 */
var rules = [
  ['#', 'hash'],                        // Extract from the back.
  ['?', 'query'],                       // Extract from the back.
  function sanitize(address, url) {     // Sanitize what is left of the address
    return isSpecial(url.protocol) ? address.replace(/\\/g, '/') : address;
  },
  ['/', 'pathname'],                    // Extract from the back.
  ['@', 'auth', 1],                     // Extract from the front.
  [NaN, 'host', undefined, 1, 1],       // Set left over value.
  [/:(\d*)$/, 'port', undefined, 1],    // RegExp the back.
  [NaN, 'hostname', undefined, 1, 1]    // Set left over.
];

/**
 * These properties should not be copied or inherited from. This is only needed
 * for all non blob URL's as a blob URL does not include a hash, only the
 * origin.
 *
 * @type {Object}
 * @private
 */
var ignore = { hash: 1, query: 1 };

/**
 * The location object differs when your code is loaded through a normal page,
 * Worker or through a worker using a blob. And with the blobble begins the
 * trouble as the location object will contain the URL of the blob, not the
 * location of the page where our code is loaded in. The actual origin is
 * encoded in the `pathname` so we can thankfully generate a good "default"
 * location from it so we can generate proper relative URL's again.
 *
 * @param {Object|String} loc Optional default location object.
 * @returns {Object} lolcation object.
 * @public
 */
function lolcation(loc) {
  var globalVar;

  if (typeof window !== 'undefined') globalVar = window;
  else if (typeof __webpack_require__.g !== 'undefined') globalVar = __webpack_require__.g;
  else if (typeof self !== 'undefined') globalVar = self;
  else globalVar = {};

  var location = globalVar.location || {};
  loc = loc || location;

  var finaldestination = {}
    , type = typeof loc
    , key;

  if ('blob:' === loc.protocol) {
    finaldestination = new Url(unescape(loc.pathname), {});
  } else if ('string' === type) {
    finaldestination = new Url(loc, {});
    for (key in ignore) delete finaldestination[key];
  } else if ('object' === type) {
    for (key in loc) {
      if (key in ignore) continue;
      finaldestination[key] = loc[key];
    }

    if (finaldestination.slashes === undefined) {
      finaldestination.slashes = slashes.test(loc.href);
    }
  }

  return finaldestination;
}

/**
 * Check whether a protocol scheme is special.
 *
 * @param {String} The protocol scheme of the URL
 * @return {Boolean} `true` if the protocol scheme is special, else `false`
 * @private
 */
function isSpecial(scheme) {
  return (
    scheme === 'file:' ||
    scheme === 'ftp:' ||
    scheme === 'http:' ||
    scheme === 'https:' ||
    scheme === 'ws:' ||
    scheme === 'wss:'
  );
}

/**
 * @typedef ProtocolExtract
 * @type Object
 * @property {String} protocol Protocol matched in the URL, in lowercase.
 * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
 * @property {String} rest Rest of the URL that is not part of the protocol.
 */

/**
 * Extract protocol information from a URL with/without double slash ("//").
 *
 * @param {String} address URL we want to extract from.
 * @param {Object} location
 * @return {ProtocolExtract} Extracted information.
 * @private
 */
function extractProtocol(address, location) {
  address = trimLeft(address);
  address = address.replace(CRHTLF, '');
  location = location || {};

  var match = protocolre.exec(address);
  var protocol = match[1] ? match[1].toLowerCase() : '';
  var forwardSlashes = !!match[2];
  var otherSlashes = !!match[3];
  var slashesCount = 0;
  var rest;

  if (forwardSlashes) {
    if (otherSlashes) {
      rest = match[2] + match[3] + match[4];
      slashesCount = match[2].length + match[3].length;
    } else {
      rest = match[2] + match[4];
      slashesCount = match[2].length;
    }
  } else {
    if (otherSlashes) {
      rest = match[3] + match[4];
      slashesCount = match[3].length;
    } else {
      rest = match[4]
    }
  }

  if (protocol === 'file:') {
    if (slashesCount >= 2) {
      rest = rest.slice(2);
    }
  } else if (isSpecial(protocol)) {
    rest = match[4];
  } else if (protocol) {
    if (forwardSlashes) {
      rest = rest.slice(2);
    }
  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {
    rest = match[4];
  }

  return {
    protocol: protocol,
    slashes: forwardSlashes || isSpecial(protocol),
    slashesCount: slashesCount,
    rest: rest
  };
}

/**
 * Resolve a relative URL pathname against a base URL pathname.
 *
 * @param {String} relative Pathname of the relative URL.
 * @param {String} base Pathname of the base URL.
 * @return {String} Resolved pathname.
 * @private
 */
function resolve(relative, base) {
  if (relative === '') return base;

  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
    , i = path.length
    , last = path[i - 1]
    , unshift = false
    , up = 0;

  while (i--) {
    if (path[i] === '.') {
      path.splice(i, 1);
    } else if (path[i] === '..') {
      path.splice(i, 1);
      up++;
    } else if (up) {
      if (i === 0) unshift = true;
      path.splice(i, 1);
      up--;
    }
  }

  if (unshift) path.unshift('');
  if (last === '.' || last === '..') path.push('');

  return path.join('/');
}

/**
 * The actual URL instance. Instead of returning an object we've opted-in to
 * create an actual constructor as it's much more memory efficient and
 * faster and it pleases my OCD.
 *
 * It is worth noting that we should not use `URL` as class name to prevent
 * clashes with the global URL instance that got introduced in browsers.
 *
 * @constructor
 * @param {String} address URL we want to parse.
 * @param {Object|String} [location] Location defaults for relative paths.
 * @param {Boolean|Function} [parser] Parser for the query string.
 * @private
 */
function Url(address, location, parser) {
  address = trimLeft(address);
  address = address.replace(CRHTLF, '');

  if (!(this instanceof Url)) {
    return new Url(address, location, parser);
  }

  var relative, extracted, parse, instruction, index, key
    , instructions = rules.slice()
    , type = typeof location
    , url = this
    , i = 0;

  //
  // The following if statements allows this module two have compatibility with
  // 2 different API:
  //
  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
  //    where the boolean indicates that the query string should also be parsed.
  //
  // 2. The `URL` interface of the browser which accepts a URL, object as
  //    arguments. The supplied object will be used as default values / fall-back
  //    for relative paths.
  //
  if ('object' !== type && 'string' !== type) {
    parser = location;
    location = null;
  }

  if (parser && 'function' !== typeof parser) parser = qs.parse;

  location = lolcation(location);

  //
  // Extract protocol information before running the instructions.
  //
  extracted = extractProtocol(address || '', location);
  relative = !extracted.protocol && !extracted.slashes;
  url.slashes = extracted.slashes || relative && location.slashes;
  url.protocol = extracted.protocol || location.protocol || '';
  address = extracted.rest;

  //
  // When the authority component is absent the URL starts with a path
  // component.
  //
  if (
    extracted.protocol === 'file:' && (
      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||
    (!extracted.slashes &&
      (extracted.protocol ||
        extracted.slashesCount < 2 ||
        !isSpecial(url.protocol)))
  ) {
    instructions[3] = [/(.*)/, 'pathname'];
  }

  for (; i < instructions.length; i++) {
    instruction = instructions[i];

    if (typeof instruction === 'function') {
      address = instruction(address, url);
      continue;
    }

    parse = instruction[0];
    key = instruction[1];

    if (parse !== parse) {
      url[key] = address;
    } else if ('string' === typeof parse) {
      index = parse === '@'
        ? address.lastIndexOf(parse)
        : address.indexOf(parse);

      if (~index) {
        if ('number' === typeof instruction[2]) {
          url[key] = address.slice(0, index);
          address = address.slice(index + instruction[2]);
        } else {
          url[key] = address.slice(index);
          address = address.slice(0, index);
        }
      }
    } else if ((index = parse.exec(address))) {
      url[key] = index[1];
      address = address.slice(0, index.index);
    }

    url[key] = url[key] || (
      relative && instruction[3] ? location[key] || '' : ''
    );

    //
    // Hostname, host and protocol should be lowercased so they can be used to
    // create a proper `origin`.
    //
    if (instruction[4]) url[key] = url[key].toLowerCase();
  }

  //
  // Also parse the supplied query string in to an object. If we're supplied
  // with a custom parser as function use that instead of the default build-in
  // parser.
  //
  if (parser) url.query = parser(url.query);

  //
  // If the URL is relative, resolve the pathname against the base URL.
  //
  if (
      relative
    && location.slashes
    && url.pathname.charAt(0) !== '/'
    && (url.pathname !== '' || location.pathname !== '')
  ) {
    url.pathname = resolve(url.pathname, location.pathname);
  }

  //
  // Default to a / for pathname if none exists. This normalizes the URL
  // to always have a /
  //
  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {
    url.pathname = '/' + url.pathname;
  }

  //
  // We should not add port numbers if they are already the default port number
  // for a given protocol. As the host also contains the port number we're going
  // override it with the hostname which contains no port number.
  //
  if (!required(url.port, url.protocol)) {
    url.host = url.hostname;
    url.port = '';
  }

  //
  // Parse down the `auth` for the username and password.
  //
  url.username = url.password = '';

  if (url.auth) {
    index = url.auth.indexOf(':');

    if (~index) {
      url.username = url.auth.slice(0, index);
      url.username = encodeURIComponent(decodeURIComponent(url.username));

      url.password = url.auth.slice(index + 1);
      url.password = encodeURIComponent(decodeURIComponent(url.password))
    } else {
      url.username = encodeURIComponent(decodeURIComponent(url.auth));
    }

    url.auth = url.password ? url.username +':'+ url.password : url.username;
  }

  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
    ? url.protocol +'//'+ url.host
    : 'null';

  //
  // The href is just the compiled result.
  //
  url.href = url.toString();
}

/**
 * This is convenience method for changing properties in the URL instance to
 * insure that they all propagate correctly.
 *
 * @param {String} part          Property we need to adjust.
 * @param {Mixed} value          The newly assigned value.
 * @param {Boolean|Function} fn  When setting the query, it will be the function
 *                               used to parse the query.
 *                               When setting the protocol, double slash will be
 *                               removed from the final url if it is true.
 * @returns {URL} URL instance for chaining.
 * @public
 */
function set(part, value, fn) {
  var url = this;

  switch (part) {
    case 'query':
      if ('string' === typeof value && value.length) {
        value = (fn || qs.parse)(value);
      }

      url[part] = value;
      break;

    case 'port':
      url[part] = value;

      if (!required(value, url.protocol)) {
        url.host = url.hostname;
        url[part] = '';
      } else if (value) {
        url.host = url.hostname +':'+ value;
      }

      break;

    case 'hostname':
      url[part] = value;

      if (url.port) value += ':'+ url.port;
      url.host = value;
      break;

    case 'host':
      url[part] = value;

      if (port.test(value)) {
        value = value.split(':');
        url.port = value.pop();
        url.hostname = value.join(':');
      } else {
        url.hostname = value;
        url.port = '';
      }

      break;

    case 'protocol':
      url.protocol = value.toLowerCase();
      url.slashes = !fn;
      break;

    case 'pathname':
    case 'hash':
      if (value) {
        var char = part === 'pathname' ? '/' : '#';
        url[part] = value.charAt(0) !== char ? char + value : value;
      } else {
        url[part] = value;
      }
      break;

    case 'username':
    case 'password':
      url[part] = encodeURIComponent(value);
      break;

    case 'auth':
      var index = value.indexOf(':');

      if (~index) {
        url.username = value.slice(0, index);
        url.username = encodeURIComponent(decodeURIComponent(url.username));

        url.password = value.slice(index + 1);
        url.password = encodeURIComponent(decodeURIComponent(url.password));
      } else {
        url.username = encodeURIComponent(decodeURIComponent(value));
      }
  }

  for (var i = 0; i < rules.length; i++) {
    var ins = rules[i];

    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
  }

  url.auth = url.password ? url.username +':'+ url.password : url.username;

  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
    ? url.protocol +'//'+ url.host
    : 'null';

  url.href = url.toString();

  return url;
}

/**
 * Transform the properties back in to a valid and full URL string.
 *
 * @param {Function} stringify Optional query stringify function.
 * @returns {String} Compiled version of the URL.
 * @public
 */
function toString(stringify) {
  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;

  var query
    , url = this
    , host = url.host
    , protocol = url.protocol;

  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

  var result =
    protocol +
    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');

  if (url.username) {
    result += url.username;
    if (url.password) result += ':'+ url.password;
    result += '@';
  } else if (url.password) {
    result += ':'+ url.password;
    result += '@';
  } else if (
    url.protocol !== 'file:' &&
    isSpecial(url.protocol) &&
    !host &&
    url.pathname !== '/'
  ) {
    //
    // Add back the empty userinfo, otherwise the original invalid URL
    // might be transformed into a valid one with `url.pathname` as host.
    //
    result += '@';
  }

  //
  // Trailing colon is removed from `url.host` when it is parsed. If it still
  // ends with a colon, then add back the trailing colon that was removed. This
  // prevents an invalid URL from being transformed into a valid one.
  //
  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {
    host += ':';
  }

  result += host + url.pathname;

  query = 'object' === typeof url.query ? stringify(url.query) : url.query;
  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

  if (url.hash) result += url.hash;

  return result;
}

Url.prototype = { set: set, toString: toString };

//
// Expose the URL parser and some additional properties that might be useful for
// others or testing.
//
Url.extractProtocol = extractProtocol;
Url.location = lolcation;
Url.trimLeft = trimLeft;
Url.qs = qs;

module.exports = Url;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	!function() {
/******/ 		__webpack_require__.amdO = {};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
/*!**********************!*\
  !*** ./src/entry.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sockjs_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sockjs-client */ "./node_modules/sockjs-client/lib/entry.js");
/* harmony import */ var sockjs_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sockjs_client__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var protobufjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! protobufjs */ "./node_modules/protobufjs/index.js");
/* harmony import */ var protobufjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(protobufjs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! long */ "./node_modules/long/src/long.js");
/* harmony import */ var long__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(long__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _proto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./proto */ "./src/proto.ts");
/* harmony import */ var _engineCore_connection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./engineCore/connection */ "./src/engineCore/connection.ts");
/* harmony import */ var _message_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./message/index */ "./src/message/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ "./src/utils/index.ts");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./logger */ "./src/logger/index.ts");
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./status */ "./src/status.ts");
/**
 * The entry point of the Chat SDK.
 * @module ChatSDK
 */









(protobufjs__WEBPACK_IMPORTED_MODULE_1___default().util.Long) = (long__WEBPACK_IMPORTED_MODULE_2___default());
protobufjs__WEBPACK_IMPORTED_MODULE_1___default().configure();
var root = protobufjs__WEBPACK_IMPORTED_MODULE_1___default().Root.fromJSON(_proto__WEBPACK_IMPORTED_MODULE_3__.proto);
_engineCore_connection__WEBPACK_IMPORTED_MODULE_4__.Connection.prototype.root = root;
function _getSock() {
  if (this.isHttpDNS) {
    var host = this.socketHost[this.hostIndex];
    if (!host) {
      this.times = 1;
      this.autoReconnectNumTotal = 0;
      this.hostIndex = 0;
      this.onClosed && this.onClosed();
      throw new Error('No connected domain name when get websocket.');
    }
    var domain = host.domain;
    var ip = host.ip;
    var url = '';
    var port = host.port;
    if (domain) {
      url = domain;
    } else {
      url = ip;
    }
    if (port && port !== '80' && port !== '443') {
      url += ':' + port;
    }
    if (url) {
      this.url = '//' + url + '/ws';
    }
    var protocol = this.https ? 'https:' : 'http:';
    this.url = protocol + this.url;
  }
  return new (sockjs_client__WEBPACK_IMPORTED_MODULE_0___default())(this.url);
}
var newLogger = _logger__WEBPACK_IMPORTED_MODULE_7__.logger.getLogger('defaultLogger');
newLogger.setConfig({
  useCache: false,
  maxCache: 3 * 1024 * 1024,
  color: '',
  background: ''
});
newLogger.enableAll();
_engineCore_connection__WEBPACK_IMPORTED_MODULE_4__.Connection.prototype._getSock = _getSock;
_engineCore_connection__WEBPACK_IMPORTED_MODULE_4__.Connection.prototype.getUniqueId = _utils__WEBPACK_IMPORTED_MODULE_6__.utils.getUniqueId;
var easemobChat = {
  connection: _engineCore_connection__WEBPACK_IMPORTED_MODULE_4__.Connection,
  message: _message_index__WEBPACK_IMPORTED_MODULE_5__.Message,
  utils: _utils__WEBPACK_IMPORTED_MODULE_6__.utils,
  logger: newLogger,
  statusCode: _status__WEBPACK_IMPORTED_MODULE_8__.Code
};
// export interface AgoraChat {
// 	connection: typeof Connection;
// 	message: typeof Message;
// 	utils: Utils;
// 	logger: Logger;
// 	/**@hidden */
// 	statusCode: typeof Code;
// }
// const easemobChat: AgoraChat = {
// 	connection: Connection,
// 	message: Message,
// 	utils: utils,
// 	logger: newLogger,
// 	statusCode: Code,
// };
// export {
// 	message: Message,
// 	utils; utils
// }
if (typeof window !== 'undefined') {
  window.WebIM = easemobChat;
}
/* harmony default export */ __webpack_exports__["default"] = (easemobChat);
}();
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=Easemob-chat.js.map